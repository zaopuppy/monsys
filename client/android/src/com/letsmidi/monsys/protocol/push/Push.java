// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: push.proto

package com.letsmidi.monsys.protocol.push;

public final class Push {
  private Push() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  /**
   * Protobuf enum {@code com.letsmidi.monsys.protocol.push.MsgType}
   */
  public enum MsgType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>PUSH_CLIENT_LOGIN = 1;</code>
     */
    PUSH_CLIENT_LOGIN(0, 1),
    /**
     * <code>PUSH_CLIENT_LOGIN_RSP = 101;</code>
     */
    PUSH_CLIENT_LOGIN_RSP(1, 101),
    /**
     * <code>BIND = 2;</code>
     */
    BIND(2, 2),
    /**
     * <code>BIND_RSP = 102;</code>
     */
    BIND_RSP(3, 102),
    /**
     * <code>CONNECT = 3;</code>
     */
    CONNECT(4, 3),
    /**
     * <code>CONNECT_RSP = 103;</code>
     */
    CONNECT_RSP(5, 103),
    /**
     * <code>GET_FGW_LIST = 4;</code>
     */
    GET_FGW_LIST(6, 4),
    /**
     * <code>GET_FGW_LIST_RSP = 104;</code>
     */
    GET_FGW_LIST_RSP(7, 104),
    /**
     * <code>GET_DEV_LIST = 5;</code>
     */
    GET_DEV_LIST(8, 5),
    /**
     * <code>GET_DEV_LIST_RSP = 105;</code>
     */
    GET_DEV_LIST_RSP(9, 105),
    /**
     * <code>GET_DEV_INFO = 6;</code>
     */
    GET_DEV_INFO(10, 6),
    /**
     * <code>GET_DEV_INFO_RSP = 106;</code>
     */
    GET_DEV_INFO_RSP(11, 106),
    /**
     * <code>SET_DEV_INFO = 7;</code>
     */
    SET_DEV_INFO(12, 7),
    /**
     * <code>SET_DEV_INFO_RSP = 107;</code>
     */
    SET_DEV_INFO_RSP(13, 107),
    /**
     * <code>ADMIN_CLIENT_LOGIN = 8;</code>
     */
    ADMIN_CLIENT_LOGIN(14, 8),
    /**
     * <code>ADMIN_CLIENT_LOGIN_RSP = 108;</code>
     */
    ADMIN_CLIENT_LOGIN_RSP(15, 108),
    /**
     * <code>USER_REGISTER = 9;</code>
     */
    USER_REGISTER(16, 9),
    /**
     * <code>USER_REGISTER_RSP = 109;</code>
     */
    USER_REGISTER_RSP(17, 109),
    /**
     * <code>HEARTBEAT = 10;</code>
     */
    HEARTBEAT(18, 10),
    /**
     * <code>RESPONSE = 99;</code>
     */
    RESPONSE(19, 99),
    ;

    /**
     * <code>PUSH_CLIENT_LOGIN = 1;</code>
     */
    public static final int PUSH_CLIENT_LOGIN_VALUE = 1;
    /**
     * <code>PUSH_CLIENT_LOGIN_RSP = 101;</code>
     */
    public static final int PUSH_CLIENT_LOGIN_RSP_VALUE = 101;
    /**
     * <code>BIND = 2;</code>
     */
    public static final int BIND_VALUE = 2;
    /**
     * <code>BIND_RSP = 102;</code>
     */
    public static final int BIND_RSP_VALUE = 102;
    /**
     * <code>CONNECT = 3;</code>
     */
    public static final int CONNECT_VALUE = 3;
    /**
     * <code>CONNECT_RSP = 103;</code>
     */
    public static final int CONNECT_RSP_VALUE = 103;
    /**
     * <code>GET_FGW_LIST = 4;</code>
     */
    public static final int GET_FGW_LIST_VALUE = 4;
    /**
     * <code>GET_FGW_LIST_RSP = 104;</code>
     */
    public static final int GET_FGW_LIST_RSP_VALUE = 104;
    /**
     * <code>GET_DEV_LIST = 5;</code>
     */
    public static final int GET_DEV_LIST_VALUE = 5;
    /**
     * <code>GET_DEV_LIST_RSP = 105;</code>
     */
    public static final int GET_DEV_LIST_RSP_VALUE = 105;
    /**
     * <code>GET_DEV_INFO = 6;</code>
     */
    public static final int GET_DEV_INFO_VALUE = 6;
    /**
     * <code>GET_DEV_INFO_RSP = 106;</code>
     */
    public static final int GET_DEV_INFO_RSP_VALUE = 106;
    /**
     * <code>SET_DEV_INFO = 7;</code>
     */
    public static final int SET_DEV_INFO_VALUE = 7;
    /**
     * <code>SET_DEV_INFO_RSP = 107;</code>
     */
    public static final int SET_DEV_INFO_RSP_VALUE = 107;
    /**
     * <code>ADMIN_CLIENT_LOGIN = 8;</code>
     */
    public static final int ADMIN_CLIENT_LOGIN_VALUE = 8;
    /**
     * <code>ADMIN_CLIENT_LOGIN_RSP = 108;</code>
     */
    public static final int ADMIN_CLIENT_LOGIN_RSP_VALUE = 108;
    /**
     * <code>USER_REGISTER = 9;</code>
     */
    public static final int USER_REGISTER_VALUE = 9;
    /**
     * <code>USER_REGISTER_RSP = 109;</code>
     */
    public static final int USER_REGISTER_RSP_VALUE = 109;
    /**
     * <code>HEARTBEAT = 10;</code>
     */
    public static final int HEARTBEAT_VALUE = 10;
    /**
     * <code>RESPONSE = 99;</code>
     */
    public static final int RESPONSE_VALUE = 99;


    public final int getNumber() { return value; }

    public static MsgType valueOf(int value) {
      switch (value) {
        case 1: return PUSH_CLIENT_LOGIN;
        case 101: return PUSH_CLIENT_LOGIN_RSP;
        case 2: return BIND;
        case 102: return BIND_RSP;
        case 3: return CONNECT;
        case 103: return CONNECT_RSP;
        case 4: return GET_FGW_LIST;
        case 104: return GET_FGW_LIST_RSP;
        case 5: return GET_DEV_LIST;
        case 105: return GET_DEV_LIST_RSP;
        case 6: return GET_DEV_INFO;
        case 106: return GET_DEV_INFO_RSP;
        case 7: return SET_DEV_INFO;
        case 107: return SET_DEV_INFO_RSP;
        case 8: return ADMIN_CLIENT_LOGIN;
        case 108: return ADMIN_CLIENT_LOGIN_RSP;
        case 9: return USER_REGISTER;
        case 109: return USER_REGISTER_RSP;
        case 10: return HEARTBEAT;
        case 99: return RESPONSE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<MsgType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<MsgType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<MsgType>() {
            public MsgType findValueByNumber(int number) {
              return MsgType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.letsmidi.monsys.protocol.push.Push.getDescriptor().getEnumTypes().get(0);
    }

    private static final MsgType[] VALUES = values();

    public static MsgType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private MsgType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.letsmidi.monsys.protocol.push.MsgType)
  }

  public interface IdValuePairOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 id = 1;
    /**
     * <code>required int32 id = 1;</code>
     */
    boolean hasId();
    /**
     * <code>required int32 id = 1;</code>
     */
    int getId();

    // required int32 value = 2;
    /**
     * <code>required int32 value = 2;</code>
     */
    boolean hasValue();
    /**
     * <code>required int32 value = 2;</code>
     */
    int getValue();
  }
  /**
   * Protobuf type {@code com.letsmidi.monsys.protocol.push.IdValuePair}
   */
  public static final class IdValuePair extends
      com.google.protobuf.GeneratedMessage
      implements IdValuePairOrBuilder {
    // Use IdValuePair.newBuilder() to construct.
    private IdValuePair(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private IdValuePair(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final IdValuePair defaultInstance;
    public static IdValuePair getDefaultInstance() {
      return defaultInstance;
    }

    public IdValuePair getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private IdValuePair(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              value_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.letsmidi.monsys.protocol.push.Push.internal_static_com_letsmidi_monsys_protocol_push_IdValuePair_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.letsmidi.monsys.protocol.push.Push.internal_static_com_letsmidi_monsys_protocol_push_IdValuePair_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.letsmidi.monsys.protocol.push.Push.IdValuePair.class, com.letsmidi.monsys.protocol.push.Push.IdValuePair.Builder.class);
    }

    public static com.google.protobuf.Parser<IdValuePair> PARSER =
        new com.google.protobuf.AbstractParser<IdValuePair>() {
      public IdValuePair parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new IdValuePair(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<IdValuePair> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <code>required int32 id = 1;</code>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 id = 1;</code>
     */
    public int getId() {
      return id_;
    }

    // required int32 value = 2;
    public static final int VALUE_FIELD_NUMBER = 2;
    private int value_;
    /**
     * <code>required int32 value = 2;</code>
     */
    public boolean hasValue() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 value = 2;</code>
     */
    public int getValue() {
      return value_;
    }

    private void initFields() {
      id_ = 0;
      value_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasValue()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, value_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, value_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.letsmidi.monsys.protocol.push.Push.IdValuePair parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.letsmidi.monsys.protocol.push.Push.IdValuePair parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.letsmidi.monsys.protocol.push.Push.IdValuePair parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.letsmidi.monsys.protocol.push.Push.IdValuePair parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.letsmidi.monsys.protocol.push.Push.IdValuePair parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.letsmidi.monsys.protocol.push.Push.IdValuePair parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.letsmidi.monsys.protocol.push.Push.IdValuePair parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.letsmidi.monsys.protocol.push.Push.IdValuePair parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.letsmidi.monsys.protocol.push.Push.IdValuePair parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.letsmidi.monsys.protocol.push.Push.IdValuePair parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.letsmidi.monsys.protocol.push.Push.IdValuePair prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.letsmidi.monsys.protocol.push.IdValuePair}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.letsmidi.monsys.protocol.push.Push.IdValuePairOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.letsmidi.monsys.protocol.push.Push.internal_static_com_letsmidi_monsys_protocol_push_IdValuePair_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.letsmidi.monsys.protocol.push.Push.internal_static_com_letsmidi_monsys_protocol_push_IdValuePair_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.letsmidi.monsys.protocol.push.Push.IdValuePair.class, com.letsmidi.monsys.protocol.push.Push.IdValuePair.Builder.class);
      }

      // Construct using com.letsmidi.monsys.protocol.push.Push.IdValuePair.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        value_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.letsmidi.monsys.protocol.push.Push.internal_static_com_letsmidi_monsys_protocol_push_IdValuePair_descriptor;
      }

      public com.letsmidi.monsys.protocol.push.Push.IdValuePair getDefaultInstanceForType() {
        return com.letsmidi.monsys.protocol.push.Push.IdValuePair.getDefaultInstance();
      }

      public com.letsmidi.monsys.protocol.push.Push.IdValuePair build() {
        com.letsmidi.monsys.protocol.push.Push.IdValuePair result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.letsmidi.monsys.protocol.push.Push.IdValuePair buildPartial() {
        com.letsmidi.monsys.protocol.push.Push.IdValuePair result = new com.letsmidi.monsys.protocol.push.Push.IdValuePair(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.value_ = value_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.letsmidi.monsys.protocol.push.Push.IdValuePair) {
          return mergeFrom((com.letsmidi.monsys.protocol.push.Push.IdValuePair)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.letsmidi.monsys.protocol.push.Push.IdValuePair other) {
        if (other == com.letsmidi.monsys.protocol.push.Push.IdValuePair.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasValue()) {
          setValue(other.getValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasId()) {
          
          return false;
        }
        if (!hasValue()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.letsmidi.monsys.protocol.push.Push.IdValuePair parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.letsmidi.monsys.protocol.push.Push.IdValuePair) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 id = 1;
      private int id_ ;
      /**
       * <code>required int32 id = 1;</code>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 id = 1;</code>
       */
      public int getId() {
        return id_;
      }
      /**
       * <code>required int32 id = 1;</code>
       */
      public Builder setId(int value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 id = 1;</code>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        onChanged();
        return this;
      }

      // required int32 value = 2;
      private int value_ ;
      /**
       * <code>required int32 value = 2;</code>
       */
      public boolean hasValue() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 value = 2;</code>
       */
      public int getValue() {
        return value_;
      }
      /**
       * <code>required int32 value = 2;</code>
       */
      public Builder setValue(int value) {
        bitField0_ |= 0x00000002;
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 value = 2;</code>
       */
      public Builder clearValue() {
        bitField0_ = (bitField0_ & ~0x00000002);
        value_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.letsmidi.monsys.protocol.push.IdValuePair)
    }

    static {
      defaultInstance = new IdValuePair(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.letsmidi.monsys.protocol.push.IdValuePair)
  }

  public interface FGatewayInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string id = 1;
    /**
     * <code>required string id = 1;</code>
     */
    boolean hasId();
    /**
     * <code>required string id = 1;</code>
     */
    java.lang.String getId();
    /**
     * <code>required string id = 1;</code>
     */
    com.google.protobuf.ByteString
        getIdBytes();

    // required string name = 2;
    /**
     * <code>required string name = 2;</code>
     */
    boolean hasName();
    /**
     * <code>required string name = 2;</code>
     */
    java.lang.String getName();
    /**
     * <code>required string name = 2;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    // required string desc = 3;
    /**
     * <code>required string desc = 3;</code>
     */
    boolean hasDesc();
    /**
     * <code>required string desc = 3;</code>
     */
    java.lang.String getDesc();
    /**
     * <code>required string desc = 3;</code>
     */
    com.google.protobuf.ByteString
        getDescBytes();
  }
  /**
   * Protobuf type {@code com.letsmidi.monsys.protocol.push.FGatewayInfo}
   */
  public static final class FGatewayInfo extends
      com.google.protobuf.GeneratedMessage
      implements FGatewayInfoOrBuilder {
    // Use FGatewayInfo.newBuilder() to construct.
    private FGatewayInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private FGatewayInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final FGatewayInfo defaultInstance;
    public static FGatewayInfo getDefaultInstance() {
      return defaultInstance;
    }

    public FGatewayInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private FGatewayInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              id_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              name_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              desc_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.letsmidi.monsys.protocol.push.Push.internal_static_com_letsmidi_monsys_protocol_push_FGatewayInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.letsmidi.monsys.protocol.push.Push.internal_static_com_letsmidi_monsys_protocol_push_FGatewayInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.letsmidi.monsys.protocol.push.Push.FGatewayInfo.class, com.letsmidi.monsys.protocol.push.Push.FGatewayInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<FGatewayInfo> PARSER =
        new com.google.protobuf.AbstractParser<FGatewayInfo>() {
      public FGatewayInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FGatewayInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<FGatewayInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private java.lang.Object id_;
    /**
     * <code>required string id = 1;</code>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string id = 1;</code>
     */
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          id_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required string name = 2;
    public static final int NAME_FIELD_NUMBER = 2;
    private java.lang.Object name_;
    /**
     * <code>required string name = 2;</code>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string name = 2;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string name = 2;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required string desc = 3;
    public static final int DESC_FIELD_NUMBER = 3;
    private java.lang.Object desc_;
    /**
     * <code>required string desc = 3;</code>
     */
    public boolean hasDesc() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required string desc = 3;</code>
     */
    public java.lang.String getDesc() {
      java.lang.Object ref = desc_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          desc_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string desc = 3;</code>
     */
    public com.google.protobuf.ByteString
        getDescBytes() {
      java.lang.Object ref = desc_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        desc_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      id_ = "";
      name_ = "";
      desc_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDesc()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getDescBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getDescBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.letsmidi.monsys.protocol.push.Push.FGatewayInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.letsmidi.monsys.protocol.push.Push.FGatewayInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.letsmidi.monsys.protocol.push.Push.FGatewayInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.letsmidi.monsys.protocol.push.Push.FGatewayInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.letsmidi.monsys.protocol.push.Push.FGatewayInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.letsmidi.monsys.protocol.push.Push.FGatewayInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.letsmidi.monsys.protocol.push.Push.FGatewayInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.letsmidi.monsys.protocol.push.Push.FGatewayInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.letsmidi.monsys.protocol.push.Push.FGatewayInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.letsmidi.monsys.protocol.push.Push.FGatewayInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.letsmidi.monsys.protocol.push.Push.FGatewayInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.letsmidi.monsys.protocol.push.FGatewayInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.letsmidi.monsys.protocol.push.Push.FGatewayInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.letsmidi.monsys.protocol.push.Push.internal_static_com_letsmidi_monsys_protocol_push_FGatewayInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.letsmidi.monsys.protocol.push.Push.internal_static_com_letsmidi_monsys_protocol_push_FGatewayInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.letsmidi.monsys.protocol.push.Push.FGatewayInfo.class, com.letsmidi.monsys.protocol.push.Push.FGatewayInfo.Builder.class);
      }

      // Construct using com.letsmidi.monsys.protocol.push.Push.FGatewayInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        desc_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.letsmidi.monsys.protocol.push.Push.internal_static_com_letsmidi_monsys_protocol_push_FGatewayInfo_descriptor;
      }

      public com.letsmidi.monsys.protocol.push.Push.FGatewayInfo getDefaultInstanceForType() {
        return com.letsmidi.monsys.protocol.push.Push.FGatewayInfo.getDefaultInstance();
      }

      public com.letsmidi.monsys.protocol.push.Push.FGatewayInfo build() {
        com.letsmidi.monsys.protocol.push.Push.FGatewayInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.letsmidi.monsys.protocol.push.Push.FGatewayInfo buildPartial() {
        com.letsmidi.monsys.protocol.push.Push.FGatewayInfo result = new com.letsmidi.monsys.protocol.push.Push.FGatewayInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.desc_ = desc_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.letsmidi.monsys.protocol.push.Push.FGatewayInfo) {
          return mergeFrom((com.letsmidi.monsys.protocol.push.Push.FGatewayInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.letsmidi.monsys.protocol.push.Push.FGatewayInfo other) {
        if (other == com.letsmidi.monsys.protocol.push.Push.FGatewayInfo.getDefaultInstance()) return this;
        if (other.hasId()) {
          bitField0_ |= 0x00000001;
          id_ = other.id_;
          onChanged();
        }
        if (other.hasName()) {
          bitField0_ |= 0x00000002;
          name_ = other.name_;
          onChanged();
        }
        if (other.hasDesc()) {
          bitField0_ |= 0x00000004;
          desc_ = other.desc_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasId()) {
          
          return false;
        }
        if (!hasName()) {
          
          return false;
        }
        if (!hasDesc()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.letsmidi.monsys.protocol.push.Push.FGatewayInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.letsmidi.monsys.protocol.push.Push.FGatewayInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string id = 1;
      private java.lang.Object id_ = "";
      /**
       * <code>required string id = 1;</code>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string id = 1;</code>
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string id = 1;</code>
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string id = 1;</code>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <code>required string id = 1;</code>
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }

      // required string name = 2;
      private java.lang.Object name_ = "";
      /**
       * <code>required string name = 2;</code>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string name = 2;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string name = 2;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string name = 2;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string name = 2;</code>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>required string name = 2;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        name_ = value;
        onChanged();
        return this;
      }

      // required string desc = 3;
      private java.lang.Object desc_ = "";
      /**
       * <code>required string desc = 3;</code>
       */
      public boolean hasDesc() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required string desc = 3;</code>
       */
      public java.lang.String getDesc() {
        java.lang.Object ref = desc_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          desc_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string desc = 3;</code>
       */
      public com.google.protobuf.ByteString
          getDescBytes() {
        java.lang.Object ref = desc_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          desc_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string desc = 3;</code>
       */
      public Builder setDesc(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        desc_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string desc = 3;</code>
       */
      public Builder clearDesc() {
        bitField0_ = (bitField0_ & ~0x00000004);
        desc_ = getDefaultInstance().getDesc();
        onChanged();
        return this;
      }
      /**
       * <code>required string desc = 3;</code>
       */
      public Builder setDescBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        desc_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.letsmidi.monsys.protocol.push.FGatewayInfo)
    }

    static {
      defaultInstance = new FGatewayInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.letsmidi.monsys.protocol.push.FGatewayInfo)
  }

  public interface DeviceInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 addr = 1;
    /**
     * <code>required int32 addr = 1;</code>
     */
    boolean hasAddr();
    /**
     * <code>required int32 addr = 1;</code>
     */
    int getAddr();

    // required int32 type = 2;
    /**
     * <code>required int32 type = 2;</code>
     */
    boolean hasType();
    /**
     * <code>required int32 type = 2;</code>
     */
    int getType();

    // required string name = 3;
    /**
     * <code>required string name = 3;</code>
     */
    boolean hasName();
    /**
     * <code>required string name = 3;</code>
     */
    java.lang.String getName();
    /**
     * <code>required string name = 3;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();
  }
  /**
   * Protobuf type {@code com.letsmidi.monsys.protocol.push.DeviceInfo}
   */
  public static final class DeviceInfo extends
      com.google.protobuf.GeneratedMessage
      implements DeviceInfoOrBuilder {
    // Use DeviceInfo.newBuilder() to construct.
    private DeviceInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DeviceInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DeviceInfo defaultInstance;
    public static DeviceInfo getDefaultInstance() {
      return defaultInstance;
    }

    public DeviceInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private DeviceInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              addr_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              type_ = input.readInt32();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              name_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.letsmidi.monsys.protocol.push.Push.internal_static_com_letsmidi_monsys_protocol_push_DeviceInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.letsmidi.monsys.protocol.push.Push.internal_static_com_letsmidi_monsys_protocol_push_DeviceInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.letsmidi.monsys.protocol.push.Push.DeviceInfo.class, com.letsmidi.monsys.protocol.push.Push.DeviceInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<DeviceInfo> PARSER =
        new com.google.protobuf.AbstractParser<DeviceInfo>() {
      public DeviceInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DeviceInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DeviceInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 addr = 1;
    public static final int ADDR_FIELD_NUMBER = 1;
    private int addr_;
    /**
     * <code>required int32 addr = 1;</code>
     */
    public boolean hasAddr() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 addr = 1;</code>
     */
    public int getAddr() {
      return addr_;
    }

    // required int32 type = 2;
    public static final int TYPE_FIELD_NUMBER = 2;
    private int type_;
    /**
     * <code>required int32 type = 2;</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 type = 2;</code>
     */
    public int getType() {
      return type_;
    }

    // required string name = 3;
    public static final int NAME_FIELD_NUMBER = 3;
    private java.lang.Object name_;
    /**
     * <code>required string name = 3;</code>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required string name = 3;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string name = 3;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      addr_ = 0;
      type_ = 0;
      name_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasAddr()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, addr_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, type_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getNameBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, addr_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, type_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getNameBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.letsmidi.monsys.protocol.push.Push.DeviceInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.letsmidi.monsys.protocol.push.Push.DeviceInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.letsmidi.monsys.protocol.push.Push.DeviceInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.letsmidi.monsys.protocol.push.Push.DeviceInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.letsmidi.monsys.protocol.push.Push.DeviceInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.letsmidi.monsys.protocol.push.Push.DeviceInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.letsmidi.monsys.protocol.push.Push.DeviceInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.letsmidi.monsys.protocol.push.Push.DeviceInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.letsmidi.monsys.protocol.push.Push.DeviceInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.letsmidi.monsys.protocol.push.Push.DeviceInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.letsmidi.monsys.protocol.push.Push.DeviceInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.letsmidi.monsys.protocol.push.DeviceInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.letsmidi.monsys.protocol.push.Push.DeviceInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.letsmidi.monsys.protocol.push.Push.internal_static_com_letsmidi_monsys_protocol_push_DeviceInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.letsmidi.monsys.protocol.push.Push.internal_static_com_letsmidi_monsys_protocol_push_DeviceInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.letsmidi.monsys.protocol.push.Push.DeviceInfo.class, com.letsmidi.monsys.protocol.push.Push.DeviceInfo.Builder.class);
      }

      // Construct using com.letsmidi.monsys.protocol.push.Push.DeviceInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        addr_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.letsmidi.monsys.protocol.push.Push.internal_static_com_letsmidi_monsys_protocol_push_DeviceInfo_descriptor;
      }

      public com.letsmidi.monsys.protocol.push.Push.DeviceInfo getDefaultInstanceForType() {
        return com.letsmidi.monsys.protocol.push.Push.DeviceInfo.getDefaultInstance();
      }

      public com.letsmidi.monsys.protocol.push.Push.DeviceInfo build() {
        com.letsmidi.monsys.protocol.push.Push.DeviceInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.letsmidi.monsys.protocol.push.Push.DeviceInfo buildPartial() {
        com.letsmidi.monsys.protocol.push.Push.DeviceInfo result = new com.letsmidi.monsys.protocol.push.Push.DeviceInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.addr_ = addr_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.name_ = name_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.letsmidi.monsys.protocol.push.Push.DeviceInfo) {
          return mergeFrom((com.letsmidi.monsys.protocol.push.Push.DeviceInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.letsmidi.monsys.protocol.push.Push.DeviceInfo other) {
        if (other == com.letsmidi.monsys.protocol.push.Push.DeviceInfo.getDefaultInstance()) return this;
        if (other.hasAddr()) {
          setAddr(other.getAddr());
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasName()) {
          bitField0_ |= 0x00000004;
          name_ = other.name_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasAddr()) {
          
          return false;
        }
        if (!hasType()) {
          
          return false;
        }
        if (!hasName()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.letsmidi.monsys.protocol.push.Push.DeviceInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.letsmidi.monsys.protocol.push.Push.DeviceInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 addr = 1;
      private int addr_ ;
      /**
       * <code>required int32 addr = 1;</code>
       */
      public boolean hasAddr() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 addr = 1;</code>
       */
      public int getAddr() {
        return addr_;
      }
      /**
       * <code>required int32 addr = 1;</code>
       */
      public Builder setAddr(int value) {
        bitField0_ |= 0x00000001;
        addr_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 addr = 1;</code>
       */
      public Builder clearAddr() {
        bitField0_ = (bitField0_ & ~0x00000001);
        addr_ = 0;
        onChanged();
        return this;
      }

      // required int32 type = 2;
      private int type_ ;
      /**
       * <code>required int32 type = 2;</code>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 type = 2;</code>
       */
      public int getType() {
        return type_;
      }
      /**
       * <code>required int32 type = 2;</code>
       */
      public Builder setType(int value) {
        bitField0_ |= 0x00000002;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 type = 2;</code>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        type_ = 0;
        onChanged();
        return this;
      }

      // required string name = 3;
      private java.lang.Object name_ = "";
      /**
       * <code>required string name = 3;</code>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required string name = 3;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string name = 3;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string name = 3;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string name = 3;</code>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000004);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>required string name = 3;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        name_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.letsmidi.monsys.protocol.push.DeviceInfo)
    }

    static {
      defaultInstance = new DeviceInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.letsmidi.monsys.protocol.push.DeviceInfo)
  }

  public interface PushMsgOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 version = 1;
    /**
     * <code>required int32 version = 1;</code>
     */
    boolean hasVersion();
    /**
     * <code>required int32 version = 1;</code>
     */
    int getVersion();

    // required .com.letsmidi.monsys.protocol.push.MsgType type = 2;
    /**
     * <code>required .com.letsmidi.monsys.protocol.push.MsgType type = 2;</code>
     */
    boolean hasType();
    /**
     * <code>required .com.letsmidi.monsys.protocol.push.MsgType type = 2;</code>
     */
    com.letsmidi.monsys.protocol.push.Push.MsgType getType();

    // required int32 sequence = 3;
    /**
     * <code>required int32 sequence = 3;</code>
     */
    boolean hasSequence();
    /**
     * <code>required int32 sequence = 3;</code>
     */
    int getSequence();

    // optional .com.letsmidi.monsys.protocol.push.PushClientLogin login = 10;
    /**
     * <code>optional .com.letsmidi.monsys.protocol.push.PushClientLogin login = 10;</code>
     */
    boolean hasLogin();
    /**
     * <code>optional .com.letsmidi.monsys.protocol.push.PushClientLogin login = 10;</code>
     */
    com.letsmidi.monsys.protocol.push.Push.PushClientLogin getLogin();
    /**
     * <code>optional .com.letsmidi.monsys.protocol.push.PushClientLogin login = 10;</code>
     */
    com.letsmidi.monsys.protocol.push.Push.PushClientLoginOrBuilder getLoginOrBuilder();

    // optional .com.letsmidi.monsys.protocol.push.PushClientLoginRsp login_rsp = 11;
    /**
     * <code>optional .com.letsmidi.monsys.protocol.push.PushClientLoginRsp login_rsp = 11;</code>
     */
    boolean hasLoginRsp();
    /**
     * <code>optional .com.letsmidi.monsys.protocol.push.PushClientLoginRsp login_rsp = 11;</code>
     */
    com.letsmidi.monsys.protocol.push.Push.PushClientLoginRsp getLoginRsp();
    /**
     * <code>optional .com.letsmidi.monsys.protocol.push.PushClientLoginRsp login_rsp = 11;</code>
     */
    com.letsmidi.monsys.protocol.push.Push.PushClientLoginRspOrBuilder getLoginRspOrBuilder();

    // optional .com.letsmidi.monsys.protocol.push.Bind bind = 12;
    /**
     * <code>optional .com.letsmidi.monsys.protocol.push.Bind bind = 12;</code>
     */
    boolean hasBind();
    /**
     * <code>optional .com.letsmidi.monsys.protocol.push.Bind bind = 12;</code>
     */
    com.letsmidi.monsys.protocol.push.Push.Bind getBind();
    /**
     * <code>optional .com.letsmidi.monsys.protocol.push.Bind bind = 12;</code>
     */
    com.letsmidi.monsys.protocol.push.Push.BindOrBuilder getBindOrBuilder();

    // optional .com.letsmidi.monsys.protocol.push.BindRsp bind_rsp = 13;
    /**
     * <code>optional .com.letsmidi.monsys.protocol.push.BindRsp bind_rsp = 13;</code>
     */
    boolean hasBindRsp();
    /**
     * <code>optional .com.letsmidi.monsys.protocol.push.BindRsp bind_rsp = 13;</code>
     */
    com.letsmidi.monsys.protocol.push.Push.BindRsp getBindRsp();
    /**
     * <code>optional .com.letsmidi.monsys.protocol.push.BindRsp bind_rsp = 13;</code>
     */
    com.letsmidi.monsys.protocol.push.Push.BindRspOrBuilder getBindRspOrBuilder();

    // optional .com.letsmidi.monsys.protocol.push.Connect connect = 14;
    /**
     * <code>optional .com.letsmidi.monsys.protocol.push.Connect connect = 14;</code>
     */
    boolean hasConnect();
    /**
     * <code>optional .com.letsmidi.monsys.protocol.push.Connect connect = 14;</code>
     */
    com.letsmidi.monsys.protocol.push.Push.Connect getConnect();
    /**
     * <code>optional .com.letsmidi.monsys.protocol.push.Connect connect = 14;</code>
     */
    com.letsmidi.monsys.protocol.push.Push.ConnectOrBuilder getConnectOrBuilder();

    // optional .com.letsmidi.monsys.protocol.push.ConnectRsp connect_rsp = 15;
    /**
     * <code>optional .com.letsmidi.monsys.protocol.push.ConnectRsp connect_rsp = 15;</code>
     */
    boolean hasConnectRsp();
    /**
     * <code>optional .com.letsmidi.monsys.protocol.push.ConnectRsp connect_rsp = 15;</code>
     */
    com.letsmidi.monsys.protocol.push.Push.ConnectRsp getConnectRsp();
    /**
     * <code>optional .com.letsmidi.monsys.protocol.push.ConnectRsp connect_rsp = 15;</code>
     */
    com.letsmidi.monsys.protocol.push.Push.ConnectRspOrBuilder getConnectRspOrBuilder();

    // optional .com.letsmidi.monsys.protocol.push.GetFgwList get_fgw_list = 16;
    /**
     * <code>optional .com.letsmidi.monsys.protocol.push.GetFgwList get_fgw_list = 16;</code>
     */
    boolean hasGetFgwList();
    /**
     * <code>optional .com.letsmidi.monsys.protocol.push.GetFgwList get_fgw_list = 16;</code>
     */
    com.letsmidi.monsys.protocol.push.Push.GetFgwList getGetFgwList();
    /**
     * <code>optional .com.letsmidi.monsys.protocol.push.GetFgwList get_fgw_list = 16;</code>
     */
    com.letsmidi.monsys.protocol.push.Push.GetFgwListOrBuilder getGetFgwListOrBuilder();

    // optional .com.letsmidi.monsys.protocol.push.GetFgwListRsp get_fgw_list_rsp = 17;
    /**
     * <code>optional .com.letsmidi.monsys.protocol.push.GetFgwListRsp get_fgw_list_rsp = 17;</code>
     */
    boolean hasGetFgwListRsp();
    /**
     * <code>optional .com.letsmidi.monsys.protocol.push.GetFgwListRsp get_fgw_list_rsp = 17;</code>
     */
    com.letsmidi.monsys.protocol.push.Push.GetFgwListRsp getGetFgwListRsp();
    /**
     * <code>optional .com.letsmidi.monsys.protocol.push.GetFgwListRsp get_fgw_list_rsp = 17;</code>
     */
    com.letsmidi.monsys.protocol.push.Push.GetFgwListRspOrBuilder getGetFgwListRspOrBuilder();

    // optional .com.letsmidi.monsys.protocol.push.GetDevList get_dev_list = 18;
    /**
     * <code>optional .com.letsmidi.monsys.protocol.push.GetDevList get_dev_list = 18;</code>
     */
    boolean hasGetDevList();
    /**
     * <code>optional .com.letsmidi.monsys.protocol.push.GetDevList get_dev_list = 18;</code>
     */
    com.letsmidi.monsys.protocol.push.Push.GetDevList getGetDevList();
    /**
     * <code>optional .com.letsmidi.monsys.protocol.push.GetDevList get_dev_list = 18;</code>
     */
    com.letsmidi.monsys.protocol.push.Push.GetDevListOrBuilder getGetDevListOrBuilder();

    // optional .com.letsmidi.monsys.protocol.push.GetDevListRsp get_dev_list_rsp = 19;
    /**
     * <code>optional .com.letsmidi.monsys.protocol.push.GetDevListRsp get_dev_list_rsp = 19;</code>
     */
    boolean hasGetDevListRsp();
    /**
     * <code>optional .com.letsmidi.monsys.protocol.push.GetDevListRsp get_dev_list_rsp = 19;</code>
     */
    com.letsmidi.monsys.protocol.push.Push.GetDevListRsp getGetDevListRsp();
    /**
     * <code>optional .com.letsmidi.monsys.protocol.push.GetDevListRsp get_dev_list_rsp = 19;</code>
     */
    com.letsmidi.monsys.protocol.push.Push.GetDevListRspOrBuilder getGetDevListRspOrBuilder();

    // optional .com.letsmidi.monsys.protocol.push.GetDevInfo get_dev_info = 20;
    /**
     * <code>optional .com.letsmidi.monsys.protocol.push.GetDevInfo get_dev_info = 20;</code>
     */
    boolean hasGetDevInfo();
    /**
     * <code>optional .com.letsmidi.monsys.protocol.push.GetDevInfo get_dev_info = 20;</code>
     */
    com.letsmidi.monsys.protocol.push.Push.GetDevInfo getGetDevInfo();
    /**
     * <code>optional .com.letsmidi.monsys.protocol.push.GetDevInfo get_dev_info = 20;</code>
     */
    com.letsmidi.monsys.protocol.push.Push.GetDevInfoOrBuilder getGetDevInfoOrBuilder();

    // optional .com.letsmidi.monsys.protocol.push.GetDevInfoRsp get_dev_info_rsp = 21;
    /**
     * <code>optional .com.letsmidi.monsys.protocol.push.GetDevInfoRsp get_dev_info_rsp = 21;</code>
     */
    boolean hasGetDevInfoRsp();
    /**
     * <code>optional .com.letsmidi.monsys.protocol.push.GetDevInfoRsp get_dev_info_rsp = 21;</code>
     */
    com.letsmidi.monsys.protocol.push.Push.GetDevInfoRsp getGetDevInfoRsp();
    /**
     * <code>optional .com.letsmidi.monsys.protocol.push.GetDevInfoRsp get_dev_info_rsp = 21;</code>
     */
    com.letsmidi.monsys.protocol.push.Push.GetDevInfoRspOrBuilder getGetDevInfoRspOrBuilder();

    // optional .com.letsmidi.monsys.protocol.push.SetDevInfo set_dev_info = 22;
    /**
     * <code>optional .com.letsmidi.monsys.protocol.push.SetDevInfo set_dev_info = 22;</code>
     */
    boolean hasSetDevInfo();
    /**
     * <code>optional .com.letsmidi.monsys.protocol.push.SetDevInfo set_dev_info = 22;</code>
     */
    com.letsmidi.monsys.protocol.push.Push.SetDevInfo getSetDevInfo();
    /**
     * <code>optional .com.letsmidi.monsys.protocol.push.SetDevInfo set_dev_info = 22;</code>
     */
    com.letsmidi.monsys.protocol.push.Push.SetDevInfoOrBuilder getSetDevInfoOrBuilder();

    // optional .com.letsmidi.monsys.protocol.push.SetDevInfoRsp set_dev_info_rsp = 23;
    /**
     * <code>optional .com.letsmidi.monsys.protocol.push.SetDevInfoRsp set_dev_info_rsp = 23;</code>
     */
    boolean hasSetDevInfoRsp();
    /**
     * <code>optional .com.letsmidi.monsys.protocol.push.SetDevInfoRsp set_dev_info_rsp = 23;</code>
     */
    com.letsmidi.monsys.protocol.push.Push.SetDevInfoRsp getSetDevInfoRsp();
    /**
     * <code>optional .com.letsmidi.monsys.protocol.push.SetDevInfoRsp set_dev_info_rsp = 23;</code>
     */
    com.letsmidi.monsys.protocol.push.Push.SetDevInfoRspOrBuilder getSetDevInfoRspOrBuilder();

    // optional .com.letsmidi.monsys.protocol.push.AdminClientLogin client_login = 24;
    /**
     * <code>optional .com.letsmidi.monsys.protocol.push.AdminClientLogin client_login = 24;</code>
     */
    boolean hasClientLogin();
    /**
     * <code>optional .com.letsmidi.monsys.protocol.push.AdminClientLogin client_login = 24;</code>
     */
    com.letsmidi.monsys.protocol.push.Push.AdminClientLogin getClientLogin();
    /**
     * <code>optional .com.letsmidi.monsys.protocol.push.AdminClientLogin client_login = 24;</code>
     */
    com.letsmidi.monsys.protocol.push.Push.AdminClientLoginOrBuilder getClientLoginOrBuilder();

    // optional .com.letsmidi.monsys.protocol.push.AdminClientLoginRsp client_login_rsp = 25;
    /**
     * <code>optional .com.letsmidi.monsys.protocol.push.AdminClientLoginRsp client_login_rsp = 25;</code>
     */
    boolean hasClientLoginRsp();
    /**
     * <code>optional .com.letsmidi.monsys.protocol.push.AdminClientLoginRsp client_login_rsp = 25;</code>
     */
    com.letsmidi.monsys.protocol.push.Push.AdminClientLoginRsp getClientLoginRsp();
    /**
     * <code>optional .com.letsmidi.monsys.protocol.push.AdminClientLoginRsp client_login_rsp = 25;</code>
     */
    com.letsmidi.monsys.protocol.push.Push.AdminClientLoginRspOrBuilder getClientLoginRspOrBuilder();

    // optional .com.letsmidi.monsys.protocol.push.UserRegister user_register = 26;
    /**
     * <code>optional .com.letsmidi.monsys.protocol.push.UserRegister user_register = 26;</code>
     */
    boolean hasUserRegister();
    /**
     * <code>optional .com.letsmidi.monsys.protocol.push.UserRegister user_register = 26;</code>
     */
    com.letsmidi.monsys.protocol.push.Push.UserRegister getUserRegister();
    /**
     * <code>optional .com.letsmidi.monsys.protocol.push.UserRegister user_register = 26;</code>
     */
    com.letsmidi.monsys.protocol.push.Push.UserRegisterOrBuilder getUserRegisterOrBuilder();

    // optional .com.letsmidi.monsys.protocol.push.UserRegisterRsp user_register_rsp = 27;
    /**
     * <code>optional .com.letsmidi.monsys.protocol.push.UserRegisterRsp user_register_rsp = 27;</code>
     */
    boolean hasUserRegisterRsp();
    /**
     * <code>optional .com.letsmidi.monsys.protocol.push.UserRegisterRsp user_register_rsp = 27;</code>
     */
    com.letsmidi.monsys.protocol.push.Push.UserRegisterRsp getUserRegisterRsp();
    /**
     * <code>optional .com.letsmidi.monsys.protocol.push.UserRegisterRsp user_register_rsp = 27;</code>
     */
    com.letsmidi.monsys.protocol.push.Push.UserRegisterRspOrBuilder getUserRegisterRspOrBuilder();

    // optional .com.letsmidi.monsys.protocol.push.Heartbeat heartbeat = 28;
    /**
     * <code>optional .com.letsmidi.monsys.protocol.push.Heartbeat heartbeat = 28;</code>
     */
    boolean hasHeartbeat();
    /**
     * <code>optional .com.letsmidi.monsys.protocol.push.Heartbeat heartbeat = 28;</code>
     */
    com.letsmidi.monsys.protocol.push.Push.Heartbeat getHeartbeat();
    /**
     * <code>optional .com.letsmidi.monsys.protocol.push.Heartbeat heartbeat = 28;</code>
     */
    com.letsmidi.monsys.protocol.push.Push.HeartbeatOrBuilder getHeartbeatOrBuilder();
  }
  /**
   * Protobuf type {@code com.letsmidi.monsys.protocol.push.PushMsg}
   */
  public static final class PushMsg extends
      com.google.protobuf.GeneratedMessage
      implements PushMsgOrBuilder {
    // Use PushMsg.newBuilder() to construct.
    private PushMsg(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private PushMsg(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final PushMsg defaultInstance;
    public static PushMsg getDefaultInstance() {
      return defaultInstance;
    }

    public PushMsg getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private PushMsg(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              version_ = input.readInt32();
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              com.letsmidi.monsys.protocol.push.Push.MsgType value = com.letsmidi.monsys.protocol.push.Push.MsgType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                type_ = value;
              }
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              sequence_ = input.readInt32();
              break;
            }
            case 82: {
              com.letsmidi.monsys.protocol.push.Push.PushClientLogin.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = login_.toBuilder();
              }
              login_ = input.readMessage(com.letsmidi.monsys.protocol.push.Push.PushClientLogin.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(login_);
                login_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
            case 90: {
              com.letsmidi.monsys.protocol.push.Push.PushClientLoginRsp.Builder subBuilder = null;
              if (((bitField0_ & 0x00000010) == 0x00000010)) {
                subBuilder = loginRsp_.toBuilder();
              }
              loginRsp_ = input.readMessage(com.letsmidi.monsys.protocol.push.Push.PushClientLoginRsp.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(loginRsp_);
                loginRsp_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000010;
              break;
            }
            case 98: {
              com.letsmidi.monsys.protocol.push.Push.Bind.Builder subBuilder = null;
              if (((bitField0_ & 0x00000020) == 0x00000020)) {
                subBuilder = bind_.toBuilder();
              }
              bind_ = input.readMessage(com.letsmidi.monsys.protocol.push.Push.Bind.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(bind_);
                bind_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000020;
              break;
            }
            case 106: {
              com.letsmidi.monsys.protocol.push.Push.BindRsp.Builder subBuilder = null;
              if (((bitField0_ & 0x00000040) == 0x00000040)) {
                subBuilder = bindRsp_.toBuilder();
              }
              bindRsp_ = input.readMessage(com.letsmidi.monsys.protocol.push.Push.BindRsp.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(bindRsp_);
                bindRsp_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000040;
              break;
            }
            case 114: {
              com.letsmidi.monsys.protocol.push.Push.Connect.Builder subBuilder = null;
              if (((bitField0_ & 0x00000080) == 0x00000080)) {
                subBuilder = connect_.toBuilder();
              }
              connect_ = input.readMessage(com.letsmidi.monsys.protocol.push.Push.Connect.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(connect_);
                connect_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000080;
              break;
            }
            case 122: {
              com.letsmidi.monsys.protocol.push.Push.ConnectRsp.Builder subBuilder = null;
              if (((bitField0_ & 0x00000100) == 0x00000100)) {
                subBuilder = connectRsp_.toBuilder();
              }
              connectRsp_ = input.readMessage(com.letsmidi.monsys.protocol.push.Push.ConnectRsp.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(connectRsp_);
                connectRsp_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000100;
              break;
            }
            case 130: {
              com.letsmidi.monsys.protocol.push.Push.GetFgwList.Builder subBuilder = null;
              if (((bitField0_ & 0x00000200) == 0x00000200)) {
                subBuilder = getFgwList_.toBuilder();
              }
              getFgwList_ = input.readMessage(com.letsmidi.monsys.protocol.push.Push.GetFgwList.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(getFgwList_);
                getFgwList_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000200;
              break;
            }
            case 138: {
              com.letsmidi.monsys.protocol.push.Push.GetFgwListRsp.Builder subBuilder = null;
              if (((bitField0_ & 0x00000400) == 0x00000400)) {
                subBuilder = getFgwListRsp_.toBuilder();
              }
              getFgwListRsp_ = input.readMessage(com.letsmidi.monsys.protocol.push.Push.GetFgwListRsp.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(getFgwListRsp_);
                getFgwListRsp_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000400;
              break;
            }
            case 146: {
              com.letsmidi.monsys.protocol.push.Push.GetDevList.Builder subBuilder = null;
              if (((bitField0_ & 0x00000800) == 0x00000800)) {
                subBuilder = getDevList_.toBuilder();
              }
              getDevList_ = input.readMessage(com.letsmidi.monsys.protocol.push.Push.GetDevList.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(getDevList_);
                getDevList_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000800;
              break;
            }
            case 154: {
              com.letsmidi.monsys.protocol.push.Push.GetDevListRsp.Builder subBuilder = null;
              if (((bitField0_ & 0x00001000) == 0x00001000)) {
                subBuilder = getDevListRsp_.toBuilder();
              }
              getDevListRsp_ = input.readMessage(com.letsmidi.monsys.protocol.push.Push.GetDevListRsp.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(getDevListRsp_);
                getDevListRsp_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00001000;
              break;
            }
            case 162: {
              com.letsmidi.monsys.protocol.push.Push.GetDevInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00002000) == 0x00002000)) {
                subBuilder = getDevInfo_.toBuilder();
              }
              getDevInfo_ = input.readMessage(com.letsmidi.monsys.protocol.push.Push.GetDevInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(getDevInfo_);
                getDevInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00002000;
              break;
            }
            case 170: {
              com.letsmidi.monsys.protocol.push.Push.GetDevInfoRsp.Builder subBuilder = null;
              if (((bitField0_ & 0x00004000) == 0x00004000)) {
                subBuilder = getDevInfoRsp_.toBuilder();
              }
              getDevInfoRsp_ = input.readMessage(com.letsmidi.monsys.protocol.push.Push.GetDevInfoRsp.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(getDevInfoRsp_);
                getDevInfoRsp_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00004000;
              break;
            }
            case 178: {
              com.letsmidi.monsys.protocol.push.Push.SetDevInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00008000) == 0x00008000)) {
                subBuilder = setDevInfo_.toBuilder();
              }
              setDevInfo_ = input.readMessage(com.letsmidi.monsys.protocol.push.Push.SetDevInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(setDevInfo_);
                setDevInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00008000;
              break;
            }
            case 186: {
              com.letsmidi.monsys.protocol.push.Push.SetDevInfoRsp.Builder subBuilder = null;
              if (((bitField0_ & 0x00010000) == 0x00010000)) {
                subBuilder = setDevInfoRsp_.toBuilder();
              }
              setDevInfoRsp_ = input.readMessage(com.letsmidi.monsys.protocol.push.Push.SetDevInfoRsp.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(setDevInfoRsp_);
                setDevInfoRsp_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00010000;
              break;
            }
            case 194: {
              com.letsmidi.monsys.protocol.push.Push.AdminClientLogin.Builder subBuilder = null;
              if (((bitField0_ & 0x00020000) == 0x00020000)) {
                subBuilder = clientLogin_.toBuilder();
              }
              clientLogin_ = input.readMessage(com.letsmidi.monsys.protocol.push.Push.AdminClientLogin.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientLogin_);
                clientLogin_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00020000;
              break;
            }
            case 202: {
              com.letsmidi.monsys.protocol.push.Push.AdminClientLoginRsp.Builder subBuilder = null;
              if (((bitField0_ & 0x00040000) == 0x00040000)) {
                subBuilder = clientLoginRsp_.toBuilder();
              }
              clientLoginRsp_ = input.readMessage(com.letsmidi.monsys.protocol.push.Push.AdminClientLoginRsp.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientLoginRsp_);
                clientLoginRsp_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00040000;
              break;
            }
            case 210: {
              com.letsmidi.monsys.protocol.push.Push.UserRegister.Builder subBuilder = null;
              if (((bitField0_ & 0x00080000) == 0x00080000)) {
                subBuilder = userRegister_.toBuilder();
              }
              userRegister_ = input.readMessage(com.letsmidi.monsys.protocol.push.Push.UserRegister.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(userRegister_);
                userRegister_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00080000;
              break;
            }
            case 218: {
              com.letsmidi.monsys.protocol.push.Push.UserRegisterRsp.Builder subBuilder = null;
              if (((bitField0_ & 0x00100000) == 0x00100000)) {
                subBuilder = userRegisterRsp_.toBuilder();
              }
              userRegisterRsp_ = input.readMessage(com.letsmidi.monsys.protocol.push.Push.UserRegisterRsp.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(userRegisterRsp_);
                userRegisterRsp_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00100000;
              break;
            }
            case 226: {
              com.letsmidi.monsys.protocol.push.Push.Heartbeat.Builder subBuilder = null;
              if (((bitField0_ & 0x00200000) == 0x00200000)) {
                subBuilder = heartbeat_.toBuilder();
              }
              heartbeat_ = input.readMessage(com.letsmidi.monsys.protocol.push.Push.Heartbeat.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(heartbeat_);
                heartbeat_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00200000;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.letsmidi.monsys.protocol.push.Push.internal_static_com_letsmidi_monsys_protocol_push_PushMsg_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.letsmidi.monsys.protocol.push.Push.internal_static_com_letsmidi_monsys_protocol_push_PushMsg_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.letsmidi.monsys.protocol.push.Push.PushMsg.class, com.letsmidi.monsys.protocol.push.Push.PushMsg.Builder.class);
    }

    public static com.google.protobuf.Parser<PushMsg> PARSER =
        new com.google.protobuf.AbstractParser<PushMsg>() {
      public PushMsg parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PushMsg(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<PushMsg> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 version = 1;
    public static final int VERSION_FIELD_NUMBER = 1;
    private int version_;
    /**
     * <code>required int32 version = 1;</code>
     */
    public boolean hasVersion() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 version = 1;</code>
     */
    public int getVersion() {
      return version_;
    }

    // required .com.letsmidi.monsys.protocol.push.MsgType type = 2;
    public static final int TYPE_FIELD_NUMBER = 2;
    private com.letsmidi.monsys.protocol.push.Push.MsgType type_;
    /**
     * <code>required .com.letsmidi.monsys.protocol.push.MsgType type = 2;</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .com.letsmidi.monsys.protocol.push.MsgType type = 2;</code>
     */
    public com.letsmidi.monsys.protocol.push.Push.MsgType getType() {
      return type_;
    }

    // required int32 sequence = 3;
    public static final int SEQUENCE_FIELD_NUMBER = 3;
    private int sequence_;
    /**
     * <code>required int32 sequence = 3;</code>
     */
    public boolean hasSequence() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 sequence = 3;</code>
     */
    public int getSequence() {
      return sequence_;
    }

    // optional .com.letsmidi.monsys.protocol.push.PushClientLogin login = 10;
    public static final int LOGIN_FIELD_NUMBER = 10;
    private com.letsmidi.monsys.protocol.push.Push.PushClientLogin login_;
    /**
     * <code>optional .com.letsmidi.monsys.protocol.push.PushClientLogin login = 10;</code>
     */
    public boolean hasLogin() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .com.letsmidi.monsys.protocol.push.PushClientLogin login = 10;</code>
     */
    public com.letsmidi.monsys.protocol.push.Push.PushClientLogin getLogin() {
      return login_;
    }
    /**
     * <code>optional .com.letsmidi.monsys.protocol.push.PushClientLogin login = 10;</code>
     */
    public com.letsmidi.monsys.protocol.push.Push.PushClientLoginOrBuilder getLoginOrBuilder() {
      return login_;
    }

    // optional .com.letsmidi.monsys.protocol.push.PushClientLoginRsp login_rsp = 11;
    public static final int LOGIN_RSP_FIELD_NUMBER = 11;
    private com.letsmidi.monsys.protocol.push.Push.PushClientLoginRsp loginRsp_;
    /**
     * <code>optional .com.letsmidi.monsys.protocol.push.PushClientLoginRsp login_rsp = 11;</code>
     */
    public boolean hasLoginRsp() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .com.letsmidi.monsys.protocol.push.PushClientLoginRsp login_rsp = 11;</code>
     */
    public com.letsmidi.monsys.protocol.push.Push.PushClientLoginRsp getLoginRsp() {
      return loginRsp_;
    }
    /**
     * <code>optional .com.letsmidi.monsys.protocol.push.PushClientLoginRsp login_rsp = 11;</code>
     */
    public com.letsmidi.monsys.protocol.push.Push.PushClientLoginRspOrBuilder getLoginRspOrBuilder() {
      return loginRsp_;
    }

    // optional .com.letsmidi.monsys.protocol.push.Bind bind = 12;
    public static final int BIND_FIELD_NUMBER = 12;
    private com.letsmidi.monsys.protocol.push.Push.Bind bind_;
    /**
     * <code>optional .com.letsmidi.monsys.protocol.push.Bind bind = 12;</code>
     */
    public boolean hasBind() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional .com.letsmidi.monsys.protocol.push.Bind bind = 12;</code>
     */
    public com.letsmidi.monsys.protocol.push.Push.Bind getBind() {
      return bind_;
    }
    /**
     * <code>optional .com.letsmidi.monsys.protocol.push.Bind bind = 12;</code>
     */
    public com.letsmidi.monsys.protocol.push.Push.BindOrBuilder getBindOrBuilder() {
      return bind_;
    }

    // optional .com.letsmidi.monsys.protocol.push.BindRsp bind_rsp = 13;
    public static final int BIND_RSP_FIELD_NUMBER = 13;
    private com.letsmidi.monsys.protocol.push.Push.BindRsp bindRsp_;
    /**
     * <code>optional .com.letsmidi.monsys.protocol.push.BindRsp bind_rsp = 13;</code>
     */
    public boolean hasBindRsp() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional .com.letsmidi.monsys.protocol.push.BindRsp bind_rsp = 13;</code>
     */
    public com.letsmidi.monsys.protocol.push.Push.BindRsp getBindRsp() {
      return bindRsp_;
    }
    /**
     * <code>optional .com.letsmidi.monsys.protocol.push.BindRsp bind_rsp = 13;</code>
     */
    public com.letsmidi.monsys.protocol.push.Push.BindRspOrBuilder getBindRspOrBuilder() {
      return bindRsp_;
    }

    // optional .com.letsmidi.monsys.protocol.push.Connect connect = 14;
    public static final int CONNECT_FIELD_NUMBER = 14;
    private com.letsmidi.monsys.protocol.push.Push.Connect connect_;
    /**
     * <code>optional .com.letsmidi.monsys.protocol.push.Connect connect = 14;</code>
     */
    public boolean hasConnect() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional .com.letsmidi.monsys.protocol.push.Connect connect = 14;</code>
     */
    public com.letsmidi.monsys.protocol.push.Push.Connect getConnect() {
      return connect_;
    }
    /**
     * <code>optional .com.letsmidi.monsys.protocol.push.Connect connect = 14;</code>
     */
    public com.letsmidi.monsys.protocol.push.Push.ConnectOrBuilder getConnectOrBuilder() {
      return connect_;
    }

    // optional .com.letsmidi.monsys.protocol.push.ConnectRsp connect_rsp = 15;
    public static final int CONNECT_RSP_FIELD_NUMBER = 15;
    private com.letsmidi.monsys.protocol.push.Push.ConnectRsp connectRsp_;
    /**
     * <code>optional .com.letsmidi.monsys.protocol.push.ConnectRsp connect_rsp = 15;</code>
     */
    public boolean hasConnectRsp() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional .com.letsmidi.monsys.protocol.push.ConnectRsp connect_rsp = 15;</code>
     */
    public com.letsmidi.monsys.protocol.push.Push.ConnectRsp getConnectRsp() {
      return connectRsp_;
    }
    /**
     * <code>optional .com.letsmidi.monsys.protocol.push.ConnectRsp connect_rsp = 15;</code>
     */
    public com.letsmidi.monsys.protocol.push.Push.ConnectRspOrBuilder getConnectRspOrBuilder() {
      return connectRsp_;
    }

    // optional .com.letsmidi.monsys.protocol.push.GetFgwList get_fgw_list = 16;
    public static final int GET_FGW_LIST_FIELD_NUMBER = 16;
    private com.letsmidi.monsys.protocol.push.Push.GetFgwList getFgwList_;
    /**
     * <code>optional .com.letsmidi.monsys.protocol.push.GetFgwList get_fgw_list = 16;</code>
     */
    public boolean hasGetFgwList() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional .com.letsmidi.monsys.protocol.push.GetFgwList get_fgw_list = 16;</code>
     */
    public com.letsmidi.monsys.protocol.push.Push.GetFgwList getGetFgwList() {
      return getFgwList_;
    }
    /**
     * <code>optional .com.letsmidi.monsys.protocol.push.GetFgwList get_fgw_list = 16;</code>
     */
    public com.letsmidi.monsys.protocol.push.Push.GetFgwListOrBuilder getGetFgwListOrBuilder() {
      return getFgwList_;
    }

    // optional .com.letsmidi.monsys.protocol.push.GetFgwListRsp get_fgw_list_rsp = 17;
    public static final int GET_FGW_LIST_RSP_FIELD_NUMBER = 17;
    private com.letsmidi.monsys.protocol.push.Push.GetFgwListRsp getFgwListRsp_;
    /**
     * <code>optional .com.letsmidi.monsys.protocol.push.GetFgwListRsp get_fgw_list_rsp = 17;</code>
     */
    public boolean hasGetFgwListRsp() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional .com.letsmidi.monsys.protocol.push.GetFgwListRsp get_fgw_list_rsp = 17;</code>
     */
    public com.letsmidi.monsys.protocol.push.Push.GetFgwListRsp getGetFgwListRsp() {
      return getFgwListRsp_;
    }
    /**
     * <code>optional .com.letsmidi.monsys.protocol.push.GetFgwListRsp get_fgw_list_rsp = 17;</code>
     */
    public com.letsmidi.monsys.protocol.push.Push.GetFgwListRspOrBuilder getGetFgwListRspOrBuilder() {
      return getFgwListRsp_;
    }

    // optional .com.letsmidi.monsys.protocol.push.GetDevList get_dev_list = 18;
    public static final int GET_DEV_LIST_FIELD_NUMBER = 18;
    private com.letsmidi.monsys.protocol.push.Push.GetDevList getDevList_;
    /**
     * <code>optional .com.letsmidi.monsys.protocol.push.GetDevList get_dev_list = 18;</code>
     */
    public boolean hasGetDevList() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional .com.letsmidi.monsys.protocol.push.GetDevList get_dev_list = 18;</code>
     */
    public com.letsmidi.monsys.protocol.push.Push.GetDevList getGetDevList() {
      return getDevList_;
    }
    /**
     * <code>optional .com.letsmidi.monsys.protocol.push.GetDevList get_dev_list = 18;</code>
     */
    public com.letsmidi.monsys.protocol.push.Push.GetDevListOrBuilder getGetDevListOrBuilder() {
      return getDevList_;
    }

    // optional .com.letsmidi.monsys.protocol.push.GetDevListRsp get_dev_list_rsp = 19;
    public static final int GET_DEV_LIST_RSP_FIELD_NUMBER = 19;
    private com.letsmidi.monsys.protocol.push.Push.GetDevListRsp getDevListRsp_;
    /**
     * <code>optional .com.letsmidi.monsys.protocol.push.GetDevListRsp get_dev_list_rsp = 19;</code>
     */
    public boolean hasGetDevListRsp() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional .com.letsmidi.monsys.protocol.push.GetDevListRsp get_dev_list_rsp = 19;</code>
     */
    public com.letsmidi.monsys.protocol.push.Push.GetDevListRsp getGetDevListRsp() {
      return getDevListRsp_;
    }
    /**
     * <code>optional .com.letsmidi.monsys.protocol.push.GetDevListRsp get_dev_list_rsp = 19;</code>
     */
    public com.letsmidi.monsys.protocol.push.Push.GetDevListRspOrBuilder getGetDevListRspOrBuilder() {
      return getDevListRsp_;
    }

    // optional .com.letsmidi.monsys.protocol.push.GetDevInfo get_dev_info = 20;
    public static final int GET_DEV_INFO_FIELD_NUMBER = 20;
    private com.letsmidi.monsys.protocol.push.Push.GetDevInfo getDevInfo_;
    /**
     * <code>optional .com.letsmidi.monsys.protocol.push.GetDevInfo get_dev_info = 20;</code>
     */
    public boolean hasGetDevInfo() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional .com.letsmidi.monsys.protocol.push.GetDevInfo get_dev_info = 20;</code>
     */
    public com.letsmidi.monsys.protocol.push.Push.GetDevInfo getGetDevInfo() {
      return getDevInfo_;
    }
    /**
     * <code>optional .com.letsmidi.monsys.protocol.push.GetDevInfo get_dev_info = 20;</code>
     */
    public com.letsmidi.monsys.protocol.push.Push.GetDevInfoOrBuilder getGetDevInfoOrBuilder() {
      return getDevInfo_;
    }

    // optional .com.letsmidi.monsys.protocol.push.GetDevInfoRsp get_dev_info_rsp = 21;
    public static final int GET_DEV_INFO_RSP_FIELD_NUMBER = 21;
    private com.letsmidi.monsys.protocol.push.Push.GetDevInfoRsp getDevInfoRsp_;
    /**
     * <code>optional .com.letsmidi.monsys.protocol.push.GetDevInfoRsp get_dev_info_rsp = 21;</code>
     */
    public boolean hasGetDevInfoRsp() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional .com.letsmidi.monsys.protocol.push.GetDevInfoRsp get_dev_info_rsp = 21;</code>
     */
    public com.letsmidi.monsys.protocol.push.Push.GetDevInfoRsp getGetDevInfoRsp() {
      return getDevInfoRsp_;
    }
    /**
     * <code>optional .com.letsmidi.monsys.protocol.push.GetDevInfoRsp get_dev_info_rsp = 21;</code>
     */
    public com.letsmidi.monsys.protocol.push.Push.GetDevInfoRspOrBuilder getGetDevInfoRspOrBuilder() {
      return getDevInfoRsp_;
    }

    // optional .com.letsmidi.monsys.protocol.push.SetDevInfo set_dev_info = 22;
    public static final int SET_DEV_INFO_FIELD_NUMBER = 22;
    private com.letsmidi.monsys.protocol.push.Push.SetDevInfo setDevInfo_;
    /**
     * <code>optional .com.letsmidi.monsys.protocol.push.SetDevInfo set_dev_info = 22;</code>
     */
    public boolean hasSetDevInfo() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional .com.letsmidi.monsys.protocol.push.SetDevInfo set_dev_info = 22;</code>
     */
    public com.letsmidi.monsys.protocol.push.Push.SetDevInfo getSetDevInfo() {
      return setDevInfo_;
    }
    /**
     * <code>optional .com.letsmidi.monsys.protocol.push.SetDevInfo set_dev_info = 22;</code>
     */
    public com.letsmidi.monsys.protocol.push.Push.SetDevInfoOrBuilder getSetDevInfoOrBuilder() {
      return setDevInfo_;
    }

    // optional .com.letsmidi.monsys.protocol.push.SetDevInfoRsp set_dev_info_rsp = 23;
    public static final int SET_DEV_INFO_RSP_FIELD_NUMBER = 23;
    private com.letsmidi.monsys.protocol.push.Push.SetDevInfoRsp setDevInfoRsp_;
    /**
     * <code>optional .com.letsmidi.monsys.protocol.push.SetDevInfoRsp set_dev_info_rsp = 23;</code>
     */
    public boolean hasSetDevInfoRsp() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional .com.letsmidi.monsys.protocol.push.SetDevInfoRsp set_dev_info_rsp = 23;</code>
     */
    public com.letsmidi.monsys.protocol.push.Push.SetDevInfoRsp getSetDevInfoRsp() {
      return setDevInfoRsp_;
    }
    /**
     * <code>optional .com.letsmidi.monsys.protocol.push.SetDevInfoRsp set_dev_info_rsp = 23;</code>
     */
    public com.letsmidi.monsys.protocol.push.Push.SetDevInfoRspOrBuilder getSetDevInfoRspOrBuilder() {
      return setDevInfoRsp_;
    }

    // optional .com.letsmidi.monsys.protocol.push.AdminClientLogin client_login = 24;
    public static final int CLIENT_LOGIN_FIELD_NUMBER = 24;
    private com.letsmidi.monsys.protocol.push.Push.AdminClientLogin clientLogin_;
    /**
     * <code>optional .com.letsmidi.monsys.protocol.push.AdminClientLogin client_login = 24;</code>
     */
    public boolean hasClientLogin() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional .com.letsmidi.monsys.protocol.push.AdminClientLogin client_login = 24;</code>
     */
    public com.letsmidi.monsys.protocol.push.Push.AdminClientLogin getClientLogin() {
      return clientLogin_;
    }
    /**
     * <code>optional .com.letsmidi.monsys.protocol.push.AdminClientLogin client_login = 24;</code>
     */
    public com.letsmidi.monsys.protocol.push.Push.AdminClientLoginOrBuilder getClientLoginOrBuilder() {
      return clientLogin_;
    }

    // optional .com.letsmidi.monsys.protocol.push.AdminClientLoginRsp client_login_rsp = 25;
    public static final int CLIENT_LOGIN_RSP_FIELD_NUMBER = 25;
    private com.letsmidi.monsys.protocol.push.Push.AdminClientLoginRsp clientLoginRsp_;
    /**
     * <code>optional .com.letsmidi.monsys.protocol.push.AdminClientLoginRsp client_login_rsp = 25;</code>
     */
    public boolean hasClientLoginRsp() {
      return ((bitField0_ & 0x00040000) == 0x00040000);
    }
    /**
     * <code>optional .com.letsmidi.monsys.protocol.push.AdminClientLoginRsp client_login_rsp = 25;</code>
     */
    public com.letsmidi.monsys.protocol.push.Push.AdminClientLoginRsp getClientLoginRsp() {
      return clientLoginRsp_;
    }
    /**
     * <code>optional .com.letsmidi.monsys.protocol.push.AdminClientLoginRsp client_login_rsp = 25;</code>
     */
    public com.letsmidi.monsys.protocol.push.Push.AdminClientLoginRspOrBuilder getClientLoginRspOrBuilder() {
      return clientLoginRsp_;
    }

    // optional .com.letsmidi.monsys.protocol.push.UserRegister user_register = 26;
    public static final int USER_REGISTER_FIELD_NUMBER = 26;
    private com.letsmidi.monsys.protocol.push.Push.UserRegister userRegister_;
    /**
     * <code>optional .com.letsmidi.monsys.protocol.push.UserRegister user_register = 26;</code>
     */
    public boolean hasUserRegister() {
      return ((bitField0_ & 0x00080000) == 0x00080000);
    }
    /**
     * <code>optional .com.letsmidi.monsys.protocol.push.UserRegister user_register = 26;</code>
     */
    public com.letsmidi.monsys.protocol.push.Push.UserRegister getUserRegister() {
      return userRegister_;
    }
    /**
     * <code>optional .com.letsmidi.monsys.protocol.push.UserRegister user_register = 26;</code>
     */
    public com.letsmidi.monsys.protocol.push.Push.UserRegisterOrBuilder getUserRegisterOrBuilder() {
      return userRegister_;
    }

    // optional .com.letsmidi.monsys.protocol.push.UserRegisterRsp user_register_rsp = 27;
    public static final int USER_REGISTER_RSP_FIELD_NUMBER = 27;
    private com.letsmidi.monsys.protocol.push.Push.UserRegisterRsp userRegisterRsp_;
    /**
     * <code>optional .com.letsmidi.monsys.protocol.push.UserRegisterRsp user_register_rsp = 27;</code>
     */
    public boolean hasUserRegisterRsp() {
      return ((bitField0_ & 0x00100000) == 0x00100000);
    }
    /**
     * <code>optional .com.letsmidi.monsys.protocol.push.UserRegisterRsp user_register_rsp = 27;</code>
     */
    public com.letsmidi.monsys.protocol.push.Push.UserRegisterRsp getUserRegisterRsp() {
      return userRegisterRsp_;
    }
    /**
     * <code>optional .com.letsmidi.monsys.protocol.push.UserRegisterRsp user_register_rsp = 27;</code>
     */
    public com.letsmidi.monsys.protocol.push.Push.UserRegisterRspOrBuilder getUserRegisterRspOrBuilder() {
      return userRegisterRsp_;
    }

    // optional .com.letsmidi.monsys.protocol.push.Heartbeat heartbeat = 28;
    public static final int HEARTBEAT_FIELD_NUMBER = 28;
    private com.letsmidi.monsys.protocol.push.Push.Heartbeat heartbeat_;
    /**
     * <code>optional .com.letsmidi.monsys.protocol.push.Heartbeat heartbeat = 28;</code>
     */
    public boolean hasHeartbeat() {
      return ((bitField0_ & 0x00200000) == 0x00200000);
    }
    /**
     * <code>optional .com.letsmidi.monsys.protocol.push.Heartbeat heartbeat = 28;</code>
     */
    public com.letsmidi.monsys.protocol.push.Push.Heartbeat getHeartbeat() {
      return heartbeat_;
    }
    /**
     * <code>optional .com.letsmidi.monsys.protocol.push.Heartbeat heartbeat = 28;</code>
     */
    public com.letsmidi.monsys.protocol.push.Push.HeartbeatOrBuilder getHeartbeatOrBuilder() {
      return heartbeat_;
    }

    private void initFields() {
      version_ = 0;
      type_ = com.letsmidi.monsys.protocol.push.Push.MsgType.PUSH_CLIENT_LOGIN;
      sequence_ = 0;
      login_ = com.letsmidi.monsys.protocol.push.Push.PushClientLogin.getDefaultInstance();
      loginRsp_ = com.letsmidi.monsys.protocol.push.Push.PushClientLoginRsp.getDefaultInstance();
      bind_ = com.letsmidi.monsys.protocol.push.Push.Bind.getDefaultInstance();
      bindRsp_ = com.letsmidi.monsys.protocol.push.Push.BindRsp.getDefaultInstance();
      connect_ = com.letsmidi.monsys.protocol.push.Push.Connect.getDefaultInstance();
      connectRsp_ = com.letsmidi.monsys.protocol.push.Push.ConnectRsp.getDefaultInstance();
      getFgwList_ = com.letsmidi.monsys.protocol.push.Push.GetFgwList.getDefaultInstance();
      getFgwListRsp_ = com.letsmidi.monsys.protocol.push.Push.GetFgwListRsp.getDefaultInstance();
      getDevList_ = com.letsmidi.monsys.protocol.push.Push.GetDevList.getDefaultInstance();
      getDevListRsp_ = com.letsmidi.monsys.protocol.push.Push.GetDevListRsp.getDefaultInstance();
      getDevInfo_ = com.letsmidi.monsys.protocol.push.Push.GetDevInfo.getDefaultInstance();
      getDevInfoRsp_ = com.letsmidi.monsys.protocol.push.Push.GetDevInfoRsp.getDefaultInstance();
      setDevInfo_ = com.letsmidi.monsys.protocol.push.Push.SetDevInfo.getDefaultInstance();
      setDevInfoRsp_ = com.letsmidi.monsys.protocol.push.Push.SetDevInfoRsp.getDefaultInstance();
      clientLogin_ = com.letsmidi.monsys.protocol.push.Push.AdminClientLogin.getDefaultInstance();
      clientLoginRsp_ = com.letsmidi.monsys.protocol.push.Push.AdminClientLoginRsp.getDefaultInstance();
      userRegister_ = com.letsmidi.monsys.protocol.push.Push.UserRegister.getDefaultInstance();
      userRegisterRsp_ = com.letsmidi.monsys.protocol.push.Push.UserRegisterRsp.getDefaultInstance();
      heartbeat_ = com.letsmidi.monsys.protocol.push.Push.Heartbeat.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasVersion()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSequence()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasLogin()) {
        if (!getLogin().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasLoginRsp()) {
        if (!getLoginRsp().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasBind()) {
        if (!getBind().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasBindRsp()) {
        if (!getBindRsp().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasConnect()) {
        if (!getConnect().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasConnectRsp()) {
        if (!getConnectRsp().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasGetFgwListRsp()) {
        if (!getGetFgwListRsp().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasGetDevList()) {
        if (!getGetDevList().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasGetDevListRsp()) {
        if (!getGetDevListRsp().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasGetDevInfo()) {
        if (!getGetDevInfo().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasGetDevInfoRsp()) {
        if (!getGetDevInfoRsp().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasSetDevInfo()) {
        if (!getSetDevInfo().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasSetDevInfoRsp()) {
        if (!getSetDevInfoRsp().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasClientLogin()) {
        if (!getClientLogin().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasClientLoginRsp()) {
        if (!getClientLoginRsp().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasUserRegister()) {
        if (!getUserRegister().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasUserRegisterRsp()) {
        if (!getUserRegisterRsp().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, version_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, type_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, sequence_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(10, login_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(11, loginRsp_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeMessage(12, bind_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeMessage(13, bindRsp_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeMessage(14, connect_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeMessage(15, connectRsp_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeMessage(16, getFgwList_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeMessage(17, getFgwListRsp_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeMessage(18, getDevList_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeMessage(19, getDevListRsp_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeMessage(20, getDevInfo_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeMessage(21, getDevInfoRsp_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeMessage(22, setDevInfo_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeMessage(23, setDevInfoRsp_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeMessage(24, clientLogin_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        output.writeMessage(25, clientLoginRsp_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        output.writeMessage(26, userRegister_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        output.writeMessage(27, userRegisterRsp_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        output.writeMessage(28, heartbeat_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, version_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, type_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, sequence_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, login_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, loginRsp_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, bind_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(13, bindRsp_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(14, connect_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(15, connectRsp_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(16, getFgwList_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(17, getFgwListRsp_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(18, getDevList_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(19, getDevListRsp_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(20, getDevInfo_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(21, getDevInfoRsp_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(22, setDevInfo_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(23, setDevInfoRsp_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(24, clientLogin_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(25, clientLoginRsp_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(26, userRegister_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(27, userRegisterRsp_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(28, heartbeat_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.letsmidi.monsys.protocol.push.Push.PushMsg parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.letsmidi.monsys.protocol.push.Push.PushMsg parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.letsmidi.monsys.protocol.push.Push.PushMsg parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.letsmidi.monsys.protocol.push.Push.PushMsg parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.letsmidi.monsys.protocol.push.Push.PushMsg parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.letsmidi.monsys.protocol.push.Push.PushMsg parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.letsmidi.monsys.protocol.push.Push.PushMsg parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.letsmidi.monsys.protocol.push.Push.PushMsg parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.letsmidi.monsys.protocol.push.Push.PushMsg parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.letsmidi.monsys.protocol.push.Push.PushMsg parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.letsmidi.monsys.protocol.push.Push.PushMsg prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.letsmidi.monsys.protocol.push.PushMsg}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.letsmidi.monsys.protocol.push.Push.PushMsgOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.letsmidi.monsys.protocol.push.Push.internal_static_com_letsmidi_monsys_protocol_push_PushMsg_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.letsmidi.monsys.protocol.push.Push.internal_static_com_letsmidi_monsys_protocol_push_PushMsg_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.letsmidi.monsys.protocol.push.Push.PushMsg.class, com.letsmidi.monsys.protocol.push.Push.PushMsg.Builder.class);
      }

      // Construct using com.letsmidi.monsys.protocol.push.Push.PushMsg.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getLoginFieldBuilder();
          getLoginRspFieldBuilder();
          getBindFieldBuilder();
          getBindRspFieldBuilder();
          getConnectFieldBuilder();
          getConnectRspFieldBuilder();
          getGetFgwListFieldBuilder();
          getGetFgwListRspFieldBuilder();
          getGetDevListFieldBuilder();
          getGetDevListRspFieldBuilder();
          getGetDevInfoFieldBuilder();
          getGetDevInfoRspFieldBuilder();
          getSetDevInfoFieldBuilder();
          getSetDevInfoRspFieldBuilder();
          getClientLoginFieldBuilder();
          getClientLoginRspFieldBuilder();
          getUserRegisterFieldBuilder();
          getUserRegisterRspFieldBuilder();
          getHeartbeatFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        version_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = com.letsmidi.monsys.protocol.push.Push.MsgType.PUSH_CLIENT_LOGIN;
        bitField0_ = (bitField0_ & ~0x00000002);
        sequence_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        if (loginBuilder_ == null) {
          login_ = com.letsmidi.monsys.protocol.push.Push.PushClientLogin.getDefaultInstance();
        } else {
          loginBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        if (loginRspBuilder_ == null) {
          loginRsp_ = com.letsmidi.monsys.protocol.push.Push.PushClientLoginRsp.getDefaultInstance();
        } else {
          loginRspBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        if (bindBuilder_ == null) {
          bind_ = com.letsmidi.monsys.protocol.push.Push.Bind.getDefaultInstance();
        } else {
          bindBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        if (bindRspBuilder_ == null) {
          bindRsp_ = com.letsmidi.monsys.protocol.push.Push.BindRsp.getDefaultInstance();
        } else {
          bindRspBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        if (connectBuilder_ == null) {
          connect_ = com.letsmidi.monsys.protocol.push.Push.Connect.getDefaultInstance();
        } else {
          connectBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        if (connectRspBuilder_ == null) {
          connectRsp_ = com.letsmidi.monsys.protocol.push.Push.ConnectRsp.getDefaultInstance();
        } else {
          connectRspBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000100);
        if (getFgwListBuilder_ == null) {
          getFgwList_ = com.letsmidi.monsys.protocol.push.Push.GetFgwList.getDefaultInstance();
        } else {
          getFgwListBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000200);
        if (getFgwListRspBuilder_ == null) {
          getFgwListRsp_ = com.letsmidi.monsys.protocol.push.Push.GetFgwListRsp.getDefaultInstance();
        } else {
          getFgwListRspBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000400);
        if (getDevListBuilder_ == null) {
          getDevList_ = com.letsmidi.monsys.protocol.push.Push.GetDevList.getDefaultInstance();
        } else {
          getDevListBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000800);
        if (getDevListRspBuilder_ == null) {
          getDevListRsp_ = com.letsmidi.monsys.protocol.push.Push.GetDevListRsp.getDefaultInstance();
        } else {
          getDevListRspBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00001000);
        if (getDevInfoBuilder_ == null) {
          getDevInfo_ = com.letsmidi.monsys.protocol.push.Push.GetDevInfo.getDefaultInstance();
        } else {
          getDevInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00002000);
        if (getDevInfoRspBuilder_ == null) {
          getDevInfoRsp_ = com.letsmidi.monsys.protocol.push.Push.GetDevInfoRsp.getDefaultInstance();
        } else {
          getDevInfoRspBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00004000);
        if (setDevInfoBuilder_ == null) {
          setDevInfo_ = com.letsmidi.monsys.protocol.push.Push.SetDevInfo.getDefaultInstance();
        } else {
          setDevInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00008000);
        if (setDevInfoRspBuilder_ == null) {
          setDevInfoRsp_ = com.letsmidi.monsys.protocol.push.Push.SetDevInfoRsp.getDefaultInstance();
        } else {
          setDevInfoRspBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00010000);
        if (clientLoginBuilder_ == null) {
          clientLogin_ = com.letsmidi.monsys.protocol.push.Push.AdminClientLogin.getDefaultInstance();
        } else {
          clientLoginBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00020000);
        if (clientLoginRspBuilder_ == null) {
          clientLoginRsp_ = com.letsmidi.monsys.protocol.push.Push.AdminClientLoginRsp.getDefaultInstance();
        } else {
          clientLoginRspBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00040000);
        if (userRegisterBuilder_ == null) {
          userRegister_ = com.letsmidi.monsys.protocol.push.Push.UserRegister.getDefaultInstance();
        } else {
          userRegisterBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00080000);
        if (userRegisterRspBuilder_ == null) {
          userRegisterRsp_ = com.letsmidi.monsys.protocol.push.Push.UserRegisterRsp.getDefaultInstance();
        } else {
          userRegisterRspBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00100000);
        if (heartbeatBuilder_ == null) {
          heartbeat_ = com.letsmidi.monsys.protocol.push.Push.Heartbeat.getDefaultInstance();
        } else {
          heartbeatBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00200000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.letsmidi.monsys.protocol.push.Push.internal_static_com_letsmidi_monsys_protocol_push_PushMsg_descriptor;
      }

      public com.letsmidi.monsys.protocol.push.Push.PushMsg getDefaultInstanceForType() {
        return com.letsmidi.monsys.protocol.push.Push.PushMsg.getDefaultInstance();
      }

      public com.letsmidi.monsys.protocol.push.Push.PushMsg build() {
        com.letsmidi.monsys.protocol.push.Push.PushMsg result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.letsmidi.monsys.protocol.push.Push.PushMsg buildPartial() {
        com.letsmidi.monsys.protocol.push.Push.PushMsg result = new com.letsmidi.monsys.protocol.push.Push.PushMsg(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.version_ = version_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.sequence_ = sequence_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (loginBuilder_ == null) {
          result.login_ = login_;
        } else {
          result.login_ = loginBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        if (loginRspBuilder_ == null) {
          result.loginRsp_ = loginRsp_;
        } else {
          result.loginRsp_ = loginRspBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        if (bindBuilder_ == null) {
          result.bind_ = bind_;
        } else {
          result.bind_ = bindBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        if (bindRspBuilder_ == null) {
          result.bindRsp_ = bindRsp_;
        } else {
          result.bindRsp_ = bindRspBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        if (connectBuilder_ == null) {
          result.connect_ = connect_;
        } else {
          result.connect_ = connectBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        if (connectRspBuilder_ == null) {
          result.connectRsp_ = connectRsp_;
        } else {
          result.connectRsp_ = connectRspBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        if (getFgwListBuilder_ == null) {
          result.getFgwList_ = getFgwList_;
        } else {
          result.getFgwList_ = getFgwListBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        if (getFgwListRspBuilder_ == null) {
          result.getFgwListRsp_ = getFgwListRsp_;
        } else {
          result.getFgwListRsp_ = getFgwListRspBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        if (getDevListBuilder_ == null) {
          result.getDevList_ = getDevList_;
        } else {
          result.getDevList_ = getDevListBuilder_.build();
        }
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        if (getDevListRspBuilder_ == null) {
          result.getDevListRsp_ = getDevListRsp_;
        } else {
          result.getDevListRsp_ = getDevListRspBuilder_.build();
        }
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        if (getDevInfoBuilder_ == null) {
          result.getDevInfo_ = getDevInfo_;
        } else {
          result.getDevInfo_ = getDevInfoBuilder_.build();
        }
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        if (getDevInfoRspBuilder_ == null) {
          result.getDevInfoRsp_ = getDevInfoRsp_;
        } else {
          result.getDevInfoRsp_ = getDevInfoRspBuilder_.build();
        }
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        if (setDevInfoBuilder_ == null) {
          result.setDevInfo_ = setDevInfo_;
        } else {
          result.setDevInfo_ = setDevInfoBuilder_.build();
        }
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00010000;
        }
        if (setDevInfoRspBuilder_ == null) {
          result.setDevInfoRsp_ = setDevInfoRsp_;
        } else {
          result.setDevInfoRsp_ = setDevInfoRspBuilder_.build();
        }
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00020000;
        }
        if (clientLoginBuilder_ == null) {
          result.clientLogin_ = clientLogin_;
        } else {
          result.clientLogin_ = clientLoginBuilder_.build();
        }
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00040000;
        }
        if (clientLoginRspBuilder_ == null) {
          result.clientLoginRsp_ = clientLoginRsp_;
        } else {
          result.clientLoginRsp_ = clientLoginRspBuilder_.build();
        }
        if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
          to_bitField0_ |= 0x00080000;
        }
        if (userRegisterBuilder_ == null) {
          result.userRegister_ = userRegister_;
        } else {
          result.userRegister_ = userRegisterBuilder_.build();
        }
        if (((from_bitField0_ & 0x00100000) == 0x00100000)) {
          to_bitField0_ |= 0x00100000;
        }
        if (userRegisterRspBuilder_ == null) {
          result.userRegisterRsp_ = userRegisterRsp_;
        } else {
          result.userRegisterRsp_ = userRegisterRspBuilder_.build();
        }
        if (((from_bitField0_ & 0x00200000) == 0x00200000)) {
          to_bitField0_ |= 0x00200000;
        }
        if (heartbeatBuilder_ == null) {
          result.heartbeat_ = heartbeat_;
        } else {
          result.heartbeat_ = heartbeatBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.letsmidi.monsys.protocol.push.Push.PushMsg) {
          return mergeFrom((com.letsmidi.monsys.protocol.push.Push.PushMsg)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.letsmidi.monsys.protocol.push.Push.PushMsg other) {
        if (other == com.letsmidi.monsys.protocol.push.Push.PushMsg.getDefaultInstance()) return this;
        if (other.hasVersion()) {
          setVersion(other.getVersion());
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasSequence()) {
          setSequence(other.getSequence());
        }
        if (other.hasLogin()) {
          mergeLogin(other.getLogin());
        }
        if (other.hasLoginRsp()) {
          mergeLoginRsp(other.getLoginRsp());
        }
        if (other.hasBind()) {
          mergeBind(other.getBind());
        }
        if (other.hasBindRsp()) {
          mergeBindRsp(other.getBindRsp());
        }
        if (other.hasConnect()) {
          mergeConnect(other.getConnect());
        }
        if (other.hasConnectRsp()) {
          mergeConnectRsp(other.getConnectRsp());
        }
        if (other.hasGetFgwList()) {
          mergeGetFgwList(other.getGetFgwList());
        }
        if (other.hasGetFgwListRsp()) {
          mergeGetFgwListRsp(other.getGetFgwListRsp());
        }
        if (other.hasGetDevList()) {
          mergeGetDevList(other.getGetDevList());
        }
        if (other.hasGetDevListRsp()) {
          mergeGetDevListRsp(other.getGetDevListRsp());
        }
        if (other.hasGetDevInfo()) {
          mergeGetDevInfo(other.getGetDevInfo());
        }
        if (other.hasGetDevInfoRsp()) {
          mergeGetDevInfoRsp(other.getGetDevInfoRsp());
        }
        if (other.hasSetDevInfo()) {
          mergeSetDevInfo(other.getSetDevInfo());
        }
        if (other.hasSetDevInfoRsp()) {
          mergeSetDevInfoRsp(other.getSetDevInfoRsp());
        }
        if (other.hasClientLogin()) {
          mergeClientLogin(other.getClientLogin());
        }
        if (other.hasClientLoginRsp()) {
          mergeClientLoginRsp(other.getClientLoginRsp());
        }
        if (other.hasUserRegister()) {
          mergeUserRegister(other.getUserRegister());
        }
        if (other.hasUserRegisterRsp()) {
          mergeUserRegisterRsp(other.getUserRegisterRsp());
        }
        if (other.hasHeartbeat()) {
          mergeHeartbeat(other.getHeartbeat());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasVersion()) {
          
          return false;
        }
        if (!hasType()) {
          
          return false;
        }
        if (!hasSequence()) {
          
          return false;
        }
        if (hasLogin()) {
          if (!getLogin().isInitialized()) {
            
            return false;
          }
        }
        if (hasLoginRsp()) {
          if (!getLoginRsp().isInitialized()) {
            
            return false;
          }
        }
        if (hasBind()) {
          if (!getBind().isInitialized()) {
            
            return false;
          }
        }
        if (hasBindRsp()) {
          if (!getBindRsp().isInitialized()) {
            
            return false;
          }
        }
        if (hasConnect()) {
          if (!getConnect().isInitialized()) {
            
            return false;
          }
        }
        if (hasConnectRsp()) {
          if (!getConnectRsp().isInitialized()) {
            
            return false;
          }
        }
        if (hasGetFgwListRsp()) {
          if (!getGetFgwListRsp().isInitialized()) {
            
            return false;
          }
        }
        if (hasGetDevList()) {
          if (!getGetDevList().isInitialized()) {
            
            return false;
          }
        }
        if (hasGetDevListRsp()) {
          if (!getGetDevListRsp().isInitialized()) {
            
            return false;
          }
        }
        if (hasGetDevInfo()) {
          if (!getGetDevInfo().isInitialized()) {
            
            return false;
          }
        }
        if (hasGetDevInfoRsp()) {
          if (!getGetDevInfoRsp().isInitialized()) {
            
            return false;
          }
        }
        if (hasSetDevInfo()) {
          if (!getSetDevInfo().isInitialized()) {
            
            return false;
          }
        }
        if (hasSetDevInfoRsp()) {
          if (!getSetDevInfoRsp().isInitialized()) {
            
            return false;
          }
        }
        if (hasClientLogin()) {
          if (!getClientLogin().isInitialized()) {
            
            return false;
          }
        }
        if (hasClientLoginRsp()) {
          if (!getClientLoginRsp().isInitialized()) {
            
            return false;
          }
        }
        if (hasUserRegister()) {
          if (!getUserRegister().isInitialized()) {
            
            return false;
          }
        }
        if (hasUserRegisterRsp()) {
          if (!getUserRegisterRsp().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.letsmidi.monsys.protocol.push.Push.PushMsg parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.letsmidi.monsys.protocol.push.Push.PushMsg) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 version = 1;
      private int version_ ;
      /**
       * <code>required int32 version = 1;</code>
       */
      public boolean hasVersion() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 version = 1;</code>
       */
      public int getVersion() {
        return version_;
      }
      /**
       * <code>required int32 version = 1;</code>
       */
      public Builder setVersion(int value) {
        bitField0_ |= 0x00000001;
        version_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 version = 1;</code>
       */
      public Builder clearVersion() {
        bitField0_ = (bitField0_ & ~0x00000001);
        version_ = 0;
        onChanged();
        return this;
      }

      // required .com.letsmidi.monsys.protocol.push.MsgType type = 2;
      private com.letsmidi.monsys.protocol.push.Push.MsgType type_ = com.letsmidi.monsys.protocol.push.Push.MsgType.PUSH_CLIENT_LOGIN;
      /**
       * <code>required .com.letsmidi.monsys.protocol.push.MsgType type = 2;</code>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .com.letsmidi.monsys.protocol.push.MsgType type = 2;</code>
       */
      public com.letsmidi.monsys.protocol.push.Push.MsgType getType() {
        return type_;
      }
      /**
       * <code>required .com.letsmidi.monsys.protocol.push.MsgType type = 2;</code>
       */
      public Builder setType(com.letsmidi.monsys.protocol.push.Push.MsgType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .com.letsmidi.monsys.protocol.push.MsgType type = 2;</code>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        type_ = com.letsmidi.monsys.protocol.push.Push.MsgType.PUSH_CLIENT_LOGIN;
        onChanged();
        return this;
      }

      // required int32 sequence = 3;
      private int sequence_ ;
      /**
       * <code>required int32 sequence = 3;</code>
       */
      public boolean hasSequence() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 sequence = 3;</code>
       */
      public int getSequence() {
        return sequence_;
      }
      /**
       * <code>required int32 sequence = 3;</code>
       */
      public Builder setSequence(int value) {
        bitField0_ |= 0x00000004;
        sequence_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 sequence = 3;</code>
       */
      public Builder clearSequence() {
        bitField0_ = (bitField0_ & ~0x00000004);
        sequence_ = 0;
        onChanged();
        return this;
      }

      // optional .com.letsmidi.monsys.protocol.push.PushClientLogin login = 10;
      private com.letsmidi.monsys.protocol.push.Push.PushClientLogin login_ = com.letsmidi.monsys.protocol.push.Push.PushClientLogin.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.letsmidi.monsys.protocol.push.Push.PushClientLogin, com.letsmidi.monsys.protocol.push.Push.PushClientLogin.Builder, com.letsmidi.monsys.protocol.push.Push.PushClientLoginOrBuilder> loginBuilder_;
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.PushClientLogin login = 10;</code>
       */
      public boolean hasLogin() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.PushClientLogin login = 10;</code>
       */
      public com.letsmidi.monsys.protocol.push.Push.PushClientLogin getLogin() {
        if (loginBuilder_ == null) {
          return login_;
        } else {
          return loginBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.PushClientLogin login = 10;</code>
       */
      public Builder setLogin(com.letsmidi.monsys.protocol.push.Push.PushClientLogin value) {
        if (loginBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          login_ = value;
          onChanged();
        } else {
          loginBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.PushClientLogin login = 10;</code>
       */
      public Builder setLogin(
          com.letsmidi.monsys.protocol.push.Push.PushClientLogin.Builder builderForValue) {
        if (loginBuilder_ == null) {
          login_ = builderForValue.build();
          onChanged();
        } else {
          loginBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.PushClientLogin login = 10;</code>
       */
      public Builder mergeLogin(com.letsmidi.monsys.protocol.push.Push.PushClientLogin value) {
        if (loginBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              login_ != com.letsmidi.monsys.protocol.push.Push.PushClientLogin.getDefaultInstance()) {
            login_ =
              com.letsmidi.monsys.protocol.push.Push.PushClientLogin.newBuilder(login_).mergeFrom(value).buildPartial();
          } else {
            login_ = value;
          }
          onChanged();
        } else {
          loginBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.PushClientLogin login = 10;</code>
       */
      public Builder clearLogin() {
        if (loginBuilder_ == null) {
          login_ = com.letsmidi.monsys.protocol.push.Push.PushClientLogin.getDefaultInstance();
          onChanged();
        } else {
          loginBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.PushClientLogin login = 10;</code>
       */
      public com.letsmidi.monsys.protocol.push.Push.PushClientLogin.Builder getLoginBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getLoginFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.PushClientLogin login = 10;</code>
       */
      public com.letsmidi.monsys.protocol.push.Push.PushClientLoginOrBuilder getLoginOrBuilder() {
        if (loginBuilder_ != null) {
          return loginBuilder_.getMessageOrBuilder();
        } else {
          return login_;
        }
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.PushClientLogin login = 10;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.letsmidi.monsys.protocol.push.Push.PushClientLogin, com.letsmidi.monsys.protocol.push.Push.PushClientLogin.Builder, com.letsmidi.monsys.protocol.push.Push.PushClientLoginOrBuilder> 
          getLoginFieldBuilder() {
        if (loginBuilder_ == null) {
          loginBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.letsmidi.monsys.protocol.push.Push.PushClientLogin, com.letsmidi.monsys.protocol.push.Push.PushClientLogin.Builder, com.letsmidi.monsys.protocol.push.Push.PushClientLoginOrBuilder>(
                  login_,
                  getParentForChildren(),
                  isClean());
          login_ = null;
        }
        return loginBuilder_;
      }

      // optional .com.letsmidi.monsys.protocol.push.PushClientLoginRsp login_rsp = 11;
      private com.letsmidi.monsys.protocol.push.Push.PushClientLoginRsp loginRsp_ = com.letsmidi.monsys.protocol.push.Push.PushClientLoginRsp.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.letsmidi.monsys.protocol.push.Push.PushClientLoginRsp, com.letsmidi.monsys.protocol.push.Push.PushClientLoginRsp.Builder, com.letsmidi.monsys.protocol.push.Push.PushClientLoginRspOrBuilder> loginRspBuilder_;
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.PushClientLoginRsp login_rsp = 11;</code>
       */
      public boolean hasLoginRsp() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.PushClientLoginRsp login_rsp = 11;</code>
       */
      public com.letsmidi.monsys.protocol.push.Push.PushClientLoginRsp getLoginRsp() {
        if (loginRspBuilder_ == null) {
          return loginRsp_;
        } else {
          return loginRspBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.PushClientLoginRsp login_rsp = 11;</code>
       */
      public Builder setLoginRsp(com.letsmidi.monsys.protocol.push.Push.PushClientLoginRsp value) {
        if (loginRspBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          loginRsp_ = value;
          onChanged();
        } else {
          loginRspBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.PushClientLoginRsp login_rsp = 11;</code>
       */
      public Builder setLoginRsp(
          com.letsmidi.monsys.protocol.push.Push.PushClientLoginRsp.Builder builderForValue) {
        if (loginRspBuilder_ == null) {
          loginRsp_ = builderForValue.build();
          onChanged();
        } else {
          loginRspBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.PushClientLoginRsp login_rsp = 11;</code>
       */
      public Builder mergeLoginRsp(com.letsmidi.monsys.protocol.push.Push.PushClientLoginRsp value) {
        if (loginRspBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010) &&
              loginRsp_ != com.letsmidi.monsys.protocol.push.Push.PushClientLoginRsp.getDefaultInstance()) {
            loginRsp_ =
              com.letsmidi.monsys.protocol.push.Push.PushClientLoginRsp.newBuilder(loginRsp_).mergeFrom(value).buildPartial();
          } else {
            loginRsp_ = value;
          }
          onChanged();
        } else {
          loginRspBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.PushClientLoginRsp login_rsp = 11;</code>
       */
      public Builder clearLoginRsp() {
        if (loginRspBuilder_ == null) {
          loginRsp_ = com.letsmidi.monsys.protocol.push.Push.PushClientLoginRsp.getDefaultInstance();
          onChanged();
        } else {
          loginRspBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.PushClientLoginRsp login_rsp = 11;</code>
       */
      public com.letsmidi.monsys.protocol.push.Push.PushClientLoginRsp.Builder getLoginRspBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getLoginRspFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.PushClientLoginRsp login_rsp = 11;</code>
       */
      public com.letsmidi.monsys.protocol.push.Push.PushClientLoginRspOrBuilder getLoginRspOrBuilder() {
        if (loginRspBuilder_ != null) {
          return loginRspBuilder_.getMessageOrBuilder();
        } else {
          return loginRsp_;
        }
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.PushClientLoginRsp login_rsp = 11;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.letsmidi.monsys.protocol.push.Push.PushClientLoginRsp, com.letsmidi.monsys.protocol.push.Push.PushClientLoginRsp.Builder, com.letsmidi.monsys.protocol.push.Push.PushClientLoginRspOrBuilder> 
          getLoginRspFieldBuilder() {
        if (loginRspBuilder_ == null) {
          loginRspBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.letsmidi.monsys.protocol.push.Push.PushClientLoginRsp, com.letsmidi.monsys.protocol.push.Push.PushClientLoginRsp.Builder, com.letsmidi.monsys.protocol.push.Push.PushClientLoginRspOrBuilder>(
                  loginRsp_,
                  getParentForChildren(),
                  isClean());
          loginRsp_ = null;
        }
        return loginRspBuilder_;
      }

      // optional .com.letsmidi.monsys.protocol.push.Bind bind = 12;
      private com.letsmidi.monsys.protocol.push.Push.Bind bind_ = com.letsmidi.monsys.protocol.push.Push.Bind.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.letsmidi.monsys.protocol.push.Push.Bind, com.letsmidi.monsys.protocol.push.Push.Bind.Builder, com.letsmidi.monsys.protocol.push.Push.BindOrBuilder> bindBuilder_;
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.Bind bind = 12;</code>
       */
      public boolean hasBind() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.Bind bind = 12;</code>
       */
      public com.letsmidi.monsys.protocol.push.Push.Bind getBind() {
        if (bindBuilder_ == null) {
          return bind_;
        } else {
          return bindBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.Bind bind = 12;</code>
       */
      public Builder setBind(com.letsmidi.monsys.protocol.push.Push.Bind value) {
        if (bindBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          bind_ = value;
          onChanged();
        } else {
          bindBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.Bind bind = 12;</code>
       */
      public Builder setBind(
          com.letsmidi.monsys.protocol.push.Push.Bind.Builder builderForValue) {
        if (bindBuilder_ == null) {
          bind_ = builderForValue.build();
          onChanged();
        } else {
          bindBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.Bind bind = 12;</code>
       */
      public Builder mergeBind(com.letsmidi.monsys.protocol.push.Push.Bind value) {
        if (bindBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020) &&
              bind_ != com.letsmidi.monsys.protocol.push.Push.Bind.getDefaultInstance()) {
            bind_ =
              com.letsmidi.monsys.protocol.push.Push.Bind.newBuilder(bind_).mergeFrom(value).buildPartial();
          } else {
            bind_ = value;
          }
          onChanged();
        } else {
          bindBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.Bind bind = 12;</code>
       */
      public Builder clearBind() {
        if (bindBuilder_ == null) {
          bind_ = com.letsmidi.monsys.protocol.push.Push.Bind.getDefaultInstance();
          onChanged();
        } else {
          bindBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.Bind bind = 12;</code>
       */
      public com.letsmidi.monsys.protocol.push.Push.Bind.Builder getBindBuilder() {
        bitField0_ |= 0x00000020;
        onChanged();
        return getBindFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.Bind bind = 12;</code>
       */
      public com.letsmidi.monsys.protocol.push.Push.BindOrBuilder getBindOrBuilder() {
        if (bindBuilder_ != null) {
          return bindBuilder_.getMessageOrBuilder();
        } else {
          return bind_;
        }
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.Bind bind = 12;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.letsmidi.monsys.protocol.push.Push.Bind, com.letsmidi.monsys.protocol.push.Push.Bind.Builder, com.letsmidi.monsys.protocol.push.Push.BindOrBuilder> 
          getBindFieldBuilder() {
        if (bindBuilder_ == null) {
          bindBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.letsmidi.monsys.protocol.push.Push.Bind, com.letsmidi.monsys.protocol.push.Push.Bind.Builder, com.letsmidi.monsys.protocol.push.Push.BindOrBuilder>(
                  bind_,
                  getParentForChildren(),
                  isClean());
          bind_ = null;
        }
        return bindBuilder_;
      }

      // optional .com.letsmidi.monsys.protocol.push.BindRsp bind_rsp = 13;
      private com.letsmidi.monsys.protocol.push.Push.BindRsp bindRsp_ = com.letsmidi.monsys.protocol.push.Push.BindRsp.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.letsmidi.monsys.protocol.push.Push.BindRsp, com.letsmidi.monsys.protocol.push.Push.BindRsp.Builder, com.letsmidi.monsys.protocol.push.Push.BindRspOrBuilder> bindRspBuilder_;
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.BindRsp bind_rsp = 13;</code>
       */
      public boolean hasBindRsp() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.BindRsp bind_rsp = 13;</code>
       */
      public com.letsmidi.monsys.protocol.push.Push.BindRsp getBindRsp() {
        if (bindRspBuilder_ == null) {
          return bindRsp_;
        } else {
          return bindRspBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.BindRsp bind_rsp = 13;</code>
       */
      public Builder setBindRsp(com.letsmidi.monsys.protocol.push.Push.BindRsp value) {
        if (bindRspBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          bindRsp_ = value;
          onChanged();
        } else {
          bindRspBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.BindRsp bind_rsp = 13;</code>
       */
      public Builder setBindRsp(
          com.letsmidi.monsys.protocol.push.Push.BindRsp.Builder builderForValue) {
        if (bindRspBuilder_ == null) {
          bindRsp_ = builderForValue.build();
          onChanged();
        } else {
          bindRspBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.BindRsp bind_rsp = 13;</code>
       */
      public Builder mergeBindRsp(com.letsmidi.monsys.protocol.push.Push.BindRsp value) {
        if (bindRspBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040) &&
              bindRsp_ != com.letsmidi.monsys.protocol.push.Push.BindRsp.getDefaultInstance()) {
            bindRsp_ =
              com.letsmidi.monsys.protocol.push.Push.BindRsp.newBuilder(bindRsp_).mergeFrom(value).buildPartial();
          } else {
            bindRsp_ = value;
          }
          onChanged();
        } else {
          bindRspBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.BindRsp bind_rsp = 13;</code>
       */
      public Builder clearBindRsp() {
        if (bindRspBuilder_ == null) {
          bindRsp_ = com.letsmidi.monsys.protocol.push.Push.BindRsp.getDefaultInstance();
          onChanged();
        } else {
          bindRspBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.BindRsp bind_rsp = 13;</code>
       */
      public com.letsmidi.monsys.protocol.push.Push.BindRsp.Builder getBindRspBuilder() {
        bitField0_ |= 0x00000040;
        onChanged();
        return getBindRspFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.BindRsp bind_rsp = 13;</code>
       */
      public com.letsmidi.monsys.protocol.push.Push.BindRspOrBuilder getBindRspOrBuilder() {
        if (bindRspBuilder_ != null) {
          return bindRspBuilder_.getMessageOrBuilder();
        } else {
          return bindRsp_;
        }
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.BindRsp bind_rsp = 13;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.letsmidi.monsys.protocol.push.Push.BindRsp, com.letsmidi.monsys.protocol.push.Push.BindRsp.Builder, com.letsmidi.monsys.protocol.push.Push.BindRspOrBuilder> 
          getBindRspFieldBuilder() {
        if (bindRspBuilder_ == null) {
          bindRspBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.letsmidi.monsys.protocol.push.Push.BindRsp, com.letsmidi.monsys.protocol.push.Push.BindRsp.Builder, com.letsmidi.monsys.protocol.push.Push.BindRspOrBuilder>(
                  bindRsp_,
                  getParentForChildren(),
                  isClean());
          bindRsp_ = null;
        }
        return bindRspBuilder_;
      }

      // optional .com.letsmidi.monsys.protocol.push.Connect connect = 14;
      private com.letsmidi.monsys.protocol.push.Push.Connect connect_ = com.letsmidi.monsys.protocol.push.Push.Connect.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.letsmidi.monsys.protocol.push.Push.Connect, com.letsmidi.monsys.protocol.push.Push.Connect.Builder, com.letsmidi.monsys.protocol.push.Push.ConnectOrBuilder> connectBuilder_;
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.Connect connect = 14;</code>
       */
      public boolean hasConnect() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.Connect connect = 14;</code>
       */
      public com.letsmidi.monsys.protocol.push.Push.Connect getConnect() {
        if (connectBuilder_ == null) {
          return connect_;
        } else {
          return connectBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.Connect connect = 14;</code>
       */
      public Builder setConnect(com.letsmidi.monsys.protocol.push.Push.Connect value) {
        if (connectBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          connect_ = value;
          onChanged();
        } else {
          connectBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.Connect connect = 14;</code>
       */
      public Builder setConnect(
          com.letsmidi.monsys.protocol.push.Push.Connect.Builder builderForValue) {
        if (connectBuilder_ == null) {
          connect_ = builderForValue.build();
          onChanged();
        } else {
          connectBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.Connect connect = 14;</code>
       */
      public Builder mergeConnect(com.letsmidi.monsys.protocol.push.Push.Connect value) {
        if (connectBuilder_ == null) {
          if (((bitField0_ & 0x00000080) == 0x00000080) &&
              connect_ != com.letsmidi.monsys.protocol.push.Push.Connect.getDefaultInstance()) {
            connect_ =
              com.letsmidi.monsys.protocol.push.Push.Connect.newBuilder(connect_).mergeFrom(value).buildPartial();
          } else {
            connect_ = value;
          }
          onChanged();
        } else {
          connectBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.Connect connect = 14;</code>
       */
      public Builder clearConnect() {
        if (connectBuilder_ == null) {
          connect_ = com.letsmidi.monsys.protocol.push.Push.Connect.getDefaultInstance();
          onChanged();
        } else {
          connectBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.Connect connect = 14;</code>
       */
      public com.letsmidi.monsys.protocol.push.Push.Connect.Builder getConnectBuilder() {
        bitField0_ |= 0x00000080;
        onChanged();
        return getConnectFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.Connect connect = 14;</code>
       */
      public com.letsmidi.monsys.protocol.push.Push.ConnectOrBuilder getConnectOrBuilder() {
        if (connectBuilder_ != null) {
          return connectBuilder_.getMessageOrBuilder();
        } else {
          return connect_;
        }
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.Connect connect = 14;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.letsmidi.monsys.protocol.push.Push.Connect, com.letsmidi.monsys.protocol.push.Push.Connect.Builder, com.letsmidi.monsys.protocol.push.Push.ConnectOrBuilder> 
          getConnectFieldBuilder() {
        if (connectBuilder_ == null) {
          connectBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.letsmidi.monsys.protocol.push.Push.Connect, com.letsmidi.monsys.protocol.push.Push.Connect.Builder, com.letsmidi.monsys.protocol.push.Push.ConnectOrBuilder>(
                  connect_,
                  getParentForChildren(),
                  isClean());
          connect_ = null;
        }
        return connectBuilder_;
      }

      // optional .com.letsmidi.monsys.protocol.push.ConnectRsp connect_rsp = 15;
      private com.letsmidi.monsys.protocol.push.Push.ConnectRsp connectRsp_ = com.letsmidi.monsys.protocol.push.Push.ConnectRsp.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.letsmidi.monsys.protocol.push.Push.ConnectRsp, com.letsmidi.monsys.protocol.push.Push.ConnectRsp.Builder, com.letsmidi.monsys.protocol.push.Push.ConnectRspOrBuilder> connectRspBuilder_;
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.ConnectRsp connect_rsp = 15;</code>
       */
      public boolean hasConnectRsp() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.ConnectRsp connect_rsp = 15;</code>
       */
      public com.letsmidi.monsys.protocol.push.Push.ConnectRsp getConnectRsp() {
        if (connectRspBuilder_ == null) {
          return connectRsp_;
        } else {
          return connectRspBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.ConnectRsp connect_rsp = 15;</code>
       */
      public Builder setConnectRsp(com.letsmidi.monsys.protocol.push.Push.ConnectRsp value) {
        if (connectRspBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          connectRsp_ = value;
          onChanged();
        } else {
          connectRspBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.ConnectRsp connect_rsp = 15;</code>
       */
      public Builder setConnectRsp(
          com.letsmidi.monsys.protocol.push.Push.ConnectRsp.Builder builderForValue) {
        if (connectRspBuilder_ == null) {
          connectRsp_ = builderForValue.build();
          onChanged();
        } else {
          connectRspBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.ConnectRsp connect_rsp = 15;</code>
       */
      public Builder mergeConnectRsp(com.letsmidi.monsys.protocol.push.Push.ConnectRsp value) {
        if (connectRspBuilder_ == null) {
          if (((bitField0_ & 0x00000100) == 0x00000100) &&
              connectRsp_ != com.letsmidi.monsys.protocol.push.Push.ConnectRsp.getDefaultInstance()) {
            connectRsp_ =
              com.letsmidi.monsys.protocol.push.Push.ConnectRsp.newBuilder(connectRsp_).mergeFrom(value).buildPartial();
          } else {
            connectRsp_ = value;
          }
          onChanged();
        } else {
          connectRspBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.ConnectRsp connect_rsp = 15;</code>
       */
      public Builder clearConnectRsp() {
        if (connectRspBuilder_ == null) {
          connectRsp_ = com.letsmidi.monsys.protocol.push.Push.ConnectRsp.getDefaultInstance();
          onChanged();
        } else {
          connectRspBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.ConnectRsp connect_rsp = 15;</code>
       */
      public com.letsmidi.monsys.protocol.push.Push.ConnectRsp.Builder getConnectRspBuilder() {
        bitField0_ |= 0x00000100;
        onChanged();
        return getConnectRspFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.ConnectRsp connect_rsp = 15;</code>
       */
      public com.letsmidi.monsys.protocol.push.Push.ConnectRspOrBuilder getConnectRspOrBuilder() {
        if (connectRspBuilder_ != null) {
          return connectRspBuilder_.getMessageOrBuilder();
        } else {
          return connectRsp_;
        }
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.ConnectRsp connect_rsp = 15;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.letsmidi.monsys.protocol.push.Push.ConnectRsp, com.letsmidi.monsys.protocol.push.Push.ConnectRsp.Builder, com.letsmidi.monsys.protocol.push.Push.ConnectRspOrBuilder> 
          getConnectRspFieldBuilder() {
        if (connectRspBuilder_ == null) {
          connectRspBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.letsmidi.monsys.protocol.push.Push.ConnectRsp, com.letsmidi.monsys.protocol.push.Push.ConnectRsp.Builder, com.letsmidi.monsys.protocol.push.Push.ConnectRspOrBuilder>(
                  connectRsp_,
                  getParentForChildren(),
                  isClean());
          connectRsp_ = null;
        }
        return connectRspBuilder_;
      }

      // optional .com.letsmidi.monsys.protocol.push.GetFgwList get_fgw_list = 16;
      private com.letsmidi.monsys.protocol.push.Push.GetFgwList getFgwList_ = com.letsmidi.monsys.protocol.push.Push.GetFgwList.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.letsmidi.monsys.protocol.push.Push.GetFgwList, com.letsmidi.monsys.protocol.push.Push.GetFgwList.Builder, com.letsmidi.monsys.protocol.push.Push.GetFgwListOrBuilder> getFgwListBuilder_;
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.GetFgwList get_fgw_list = 16;</code>
       */
      public boolean hasGetFgwList() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.GetFgwList get_fgw_list = 16;</code>
       */
      public com.letsmidi.monsys.protocol.push.Push.GetFgwList getGetFgwList() {
        if (getFgwListBuilder_ == null) {
          return getFgwList_;
        } else {
          return getFgwListBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.GetFgwList get_fgw_list = 16;</code>
       */
      public Builder setGetFgwList(com.letsmidi.monsys.protocol.push.Push.GetFgwList value) {
        if (getFgwListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          getFgwList_ = value;
          onChanged();
        } else {
          getFgwListBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.GetFgwList get_fgw_list = 16;</code>
       */
      public Builder setGetFgwList(
          com.letsmidi.monsys.protocol.push.Push.GetFgwList.Builder builderForValue) {
        if (getFgwListBuilder_ == null) {
          getFgwList_ = builderForValue.build();
          onChanged();
        } else {
          getFgwListBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.GetFgwList get_fgw_list = 16;</code>
       */
      public Builder mergeGetFgwList(com.letsmidi.monsys.protocol.push.Push.GetFgwList value) {
        if (getFgwListBuilder_ == null) {
          if (((bitField0_ & 0x00000200) == 0x00000200) &&
              getFgwList_ != com.letsmidi.monsys.protocol.push.Push.GetFgwList.getDefaultInstance()) {
            getFgwList_ =
              com.letsmidi.monsys.protocol.push.Push.GetFgwList.newBuilder(getFgwList_).mergeFrom(value).buildPartial();
          } else {
            getFgwList_ = value;
          }
          onChanged();
        } else {
          getFgwListBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.GetFgwList get_fgw_list = 16;</code>
       */
      public Builder clearGetFgwList() {
        if (getFgwListBuilder_ == null) {
          getFgwList_ = com.letsmidi.monsys.protocol.push.Push.GetFgwList.getDefaultInstance();
          onChanged();
        } else {
          getFgwListBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000200);
        return this;
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.GetFgwList get_fgw_list = 16;</code>
       */
      public com.letsmidi.monsys.protocol.push.Push.GetFgwList.Builder getGetFgwListBuilder() {
        bitField0_ |= 0x00000200;
        onChanged();
        return getGetFgwListFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.GetFgwList get_fgw_list = 16;</code>
       */
      public com.letsmidi.monsys.protocol.push.Push.GetFgwListOrBuilder getGetFgwListOrBuilder() {
        if (getFgwListBuilder_ != null) {
          return getFgwListBuilder_.getMessageOrBuilder();
        } else {
          return getFgwList_;
        }
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.GetFgwList get_fgw_list = 16;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.letsmidi.monsys.protocol.push.Push.GetFgwList, com.letsmidi.monsys.protocol.push.Push.GetFgwList.Builder, com.letsmidi.monsys.protocol.push.Push.GetFgwListOrBuilder> 
          getGetFgwListFieldBuilder() {
        if (getFgwListBuilder_ == null) {
          getFgwListBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.letsmidi.monsys.protocol.push.Push.GetFgwList, com.letsmidi.monsys.protocol.push.Push.GetFgwList.Builder, com.letsmidi.monsys.protocol.push.Push.GetFgwListOrBuilder>(
                  getFgwList_,
                  getParentForChildren(),
                  isClean());
          getFgwList_ = null;
        }
        return getFgwListBuilder_;
      }

      // optional .com.letsmidi.monsys.protocol.push.GetFgwListRsp get_fgw_list_rsp = 17;
      private com.letsmidi.monsys.protocol.push.Push.GetFgwListRsp getFgwListRsp_ = com.letsmidi.monsys.protocol.push.Push.GetFgwListRsp.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.letsmidi.monsys.protocol.push.Push.GetFgwListRsp, com.letsmidi.monsys.protocol.push.Push.GetFgwListRsp.Builder, com.letsmidi.monsys.protocol.push.Push.GetFgwListRspOrBuilder> getFgwListRspBuilder_;
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.GetFgwListRsp get_fgw_list_rsp = 17;</code>
       */
      public boolean hasGetFgwListRsp() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.GetFgwListRsp get_fgw_list_rsp = 17;</code>
       */
      public com.letsmidi.monsys.protocol.push.Push.GetFgwListRsp getGetFgwListRsp() {
        if (getFgwListRspBuilder_ == null) {
          return getFgwListRsp_;
        } else {
          return getFgwListRspBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.GetFgwListRsp get_fgw_list_rsp = 17;</code>
       */
      public Builder setGetFgwListRsp(com.letsmidi.monsys.protocol.push.Push.GetFgwListRsp value) {
        if (getFgwListRspBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          getFgwListRsp_ = value;
          onChanged();
        } else {
          getFgwListRspBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.GetFgwListRsp get_fgw_list_rsp = 17;</code>
       */
      public Builder setGetFgwListRsp(
          com.letsmidi.monsys.protocol.push.Push.GetFgwListRsp.Builder builderForValue) {
        if (getFgwListRspBuilder_ == null) {
          getFgwListRsp_ = builderForValue.build();
          onChanged();
        } else {
          getFgwListRspBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.GetFgwListRsp get_fgw_list_rsp = 17;</code>
       */
      public Builder mergeGetFgwListRsp(com.letsmidi.monsys.protocol.push.Push.GetFgwListRsp value) {
        if (getFgwListRspBuilder_ == null) {
          if (((bitField0_ & 0x00000400) == 0x00000400) &&
              getFgwListRsp_ != com.letsmidi.monsys.protocol.push.Push.GetFgwListRsp.getDefaultInstance()) {
            getFgwListRsp_ =
              com.letsmidi.monsys.protocol.push.Push.GetFgwListRsp.newBuilder(getFgwListRsp_).mergeFrom(value).buildPartial();
          } else {
            getFgwListRsp_ = value;
          }
          onChanged();
        } else {
          getFgwListRspBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.GetFgwListRsp get_fgw_list_rsp = 17;</code>
       */
      public Builder clearGetFgwListRsp() {
        if (getFgwListRspBuilder_ == null) {
          getFgwListRsp_ = com.letsmidi.monsys.protocol.push.Push.GetFgwListRsp.getDefaultInstance();
          onChanged();
        } else {
          getFgwListRspBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000400);
        return this;
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.GetFgwListRsp get_fgw_list_rsp = 17;</code>
       */
      public com.letsmidi.monsys.protocol.push.Push.GetFgwListRsp.Builder getGetFgwListRspBuilder() {
        bitField0_ |= 0x00000400;
        onChanged();
        return getGetFgwListRspFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.GetFgwListRsp get_fgw_list_rsp = 17;</code>
       */
      public com.letsmidi.monsys.protocol.push.Push.GetFgwListRspOrBuilder getGetFgwListRspOrBuilder() {
        if (getFgwListRspBuilder_ != null) {
          return getFgwListRspBuilder_.getMessageOrBuilder();
        } else {
          return getFgwListRsp_;
        }
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.GetFgwListRsp get_fgw_list_rsp = 17;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.letsmidi.monsys.protocol.push.Push.GetFgwListRsp, com.letsmidi.monsys.protocol.push.Push.GetFgwListRsp.Builder, com.letsmidi.monsys.protocol.push.Push.GetFgwListRspOrBuilder> 
          getGetFgwListRspFieldBuilder() {
        if (getFgwListRspBuilder_ == null) {
          getFgwListRspBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.letsmidi.monsys.protocol.push.Push.GetFgwListRsp, com.letsmidi.monsys.protocol.push.Push.GetFgwListRsp.Builder, com.letsmidi.monsys.protocol.push.Push.GetFgwListRspOrBuilder>(
                  getFgwListRsp_,
                  getParentForChildren(),
                  isClean());
          getFgwListRsp_ = null;
        }
        return getFgwListRspBuilder_;
      }

      // optional .com.letsmidi.monsys.protocol.push.GetDevList get_dev_list = 18;
      private com.letsmidi.monsys.protocol.push.Push.GetDevList getDevList_ = com.letsmidi.monsys.protocol.push.Push.GetDevList.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.letsmidi.monsys.protocol.push.Push.GetDevList, com.letsmidi.monsys.protocol.push.Push.GetDevList.Builder, com.letsmidi.monsys.protocol.push.Push.GetDevListOrBuilder> getDevListBuilder_;
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.GetDevList get_dev_list = 18;</code>
       */
      public boolean hasGetDevList() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.GetDevList get_dev_list = 18;</code>
       */
      public com.letsmidi.monsys.protocol.push.Push.GetDevList getGetDevList() {
        if (getDevListBuilder_ == null) {
          return getDevList_;
        } else {
          return getDevListBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.GetDevList get_dev_list = 18;</code>
       */
      public Builder setGetDevList(com.letsmidi.monsys.protocol.push.Push.GetDevList value) {
        if (getDevListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          getDevList_ = value;
          onChanged();
        } else {
          getDevListBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000800;
        return this;
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.GetDevList get_dev_list = 18;</code>
       */
      public Builder setGetDevList(
          com.letsmidi.monsys.protocol.push.Push.GetDevList.Builder builderForValue) {
        if (getDevListBuilder_ == null) {
          getDevList_ = builderForValue.build();
          onChanged();
        } else {
          getDevListBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000800;
        return this;
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.GetDevList get_dev_list = 18;</code>
       */
      public Builder mergeGetDevList(com.letsmidi.monsys.protocol.push.Push.GetDevList value) {
        if (getDevListBuilder_ == null) {
          if (((bitField0_ & 0x00000800) == 0x00000800) &&
              getDevList_ != com.letsmidi.monsys.protocol.push.Push.GetDevList.getDefaultInstance()) {
            getDevList_ =
              com.letsmidi.monsys.protocol.push.Push.GetDevList.newBuilder(getDevList_).mergeFrom(value).buildPartial();
          } else {
            getDevList_ = value;
          }
          onChanged();
        } else {
          getDevListBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000800;
        return this;
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.GetDevList get_dev_list = 18;</code>
       */
      public Builder clearGetDevList() {
        if (getDevListBuilder_ == null) {
          getDevList_ = com.letsmidi.monsys.protocol.push.Push.GetDevList.getDefaultInstance();
          onChanged();
        } else {
          getDevListBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000800);
        return this;
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.GetDevList get_dev_list = 18;</code>
       */
      public com.letsmidi.monsys.protocol.push.Push.GetDevList.Builder getGetDevListBuilder() {
        bitField0_ |= 0x00000800;
        onChanged();
        return getGetDevListFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.GetDevList get_dev_list = 18;</code>
       */
      public com.letsmidi.monsys.protocol.push.Push.GetDevListOrBuilder getGetDevListOrBuilder() {
        if (getDevListBuilder_ != null) {
          return getDevListBuilder_.getMessageOrBuilder();
        } else {
          return getDevList_;
        }
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.GetDevList get_dev_list = 18;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.letsmidi.monsys.protocol.push.Push.GetDevList, com.letsmidi.monsys.protocol.push.Push.GetDevList.Builder, com.letsmidi.monsys.protocol.push.Push.GetDevListOrBuilder> 
          getGetDevListFieldBuilder() {
        if (getDevListBuilder_ == null) {
          getDevListBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.letsmidi.monsys.protocol.push.Push.GetDevList, com.letsmidi.monsys.protocol.push.Push.GetDevList.Builder, com.letsmidi.monsys.protocol.push.Push.GetDevListOrBuilder>(
                  getDevList_,
                  getParentForChildren(),
                  isClean());
          getDevList_ = null;
        }
        return getDevListBuilder_;
      }

      // optional .com.letsmidi.monsys.protocol.push.GetDevListRsp get_dev_list_rsp = 19;
      private com.letsmidi.monsys.protocol.push.Push.GetDevListRsp getDevListRsp_ = com.letsmidi.monsys.protocol.push.Push.GetDevListRsp.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.letsmidi.monsys.protocol.push.Push.GetDevListRsp, com.letsmidi.monsys.protocol.push.Push.GetDevListRsp.Builder, com.letsmidi.monsys.protocol.push.Push.GetDevListRspOrBuilder> getDevListRspBuilder_;
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.GetDevListRsp get_dev_list_rsp = 19;</code>
       */
      public boolean hasGetDevListRsp() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.GetDevListRsp get_dev_list_rsp = 19;</code>
       */
      public com.letsmidi.monsys.protocol.push.Push.GetDevListRsp getGetDevListRsp() {
        if (getDevListRspBuilder_ == null) {
          return getDevListRsp_;
        } else {
          return getDevListRspBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.GetDevListRsp get_dev_list_rsp = 19;</code>
       */
      public Builder setGetDevListRsp(com.letsmidi.monsys.protocol.push.Push.GetDevListRsp value) {
        if (getDevListRspBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          getDevListRsp_ = value;
          onChanged();
        } else {
          getDevListRspBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00001000;
        return this;
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.GetDevListRsp get_dev_list_rsp = 19;</code>
       */
      public Builder setGetDevListRsp(
          com.letsmidi.monsys.protocol.push.Push.GetDevListRsp.Builder builderForValue) {
        if (getDevListRspBuilder_ == null) {
          getDevListRsp_ = builderForValue.build();
          onChanged();
        } else {
          getDevListRspBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00001000;
        return this;
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.GetDevListRsp get_dev_list_rsp = 19;</code>
       */
      public Builder mergeGetDevListRsp(com.letsmidi.monsys.protocol.push.Push.GetDevListRsp value) {
        if (getDevListRspBuilder_ == null) {
          if (((bitField0_ & 0x00001000) == 0x00001000) &&
              getDevListRsp_ != com.letsmidi.monsys.protocol.push.Push.GetDevListRsp.getDefaultInstance()) {
            getDevListRsp_ =
              com.letsmidi.monsys.protocol.push.Push.GetDevListRsp.newBuilder(getDevListRsp_).mergeFrom(value).buildPartial();
          } else {
            getDevListRsp_ = value;
          }
          onChanged();
        } else {
          getDevListRspBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00001000;
        return this;
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.GetDevListRsp get_dev_list_rsp = 19;</code>
       */
      public Builder clearGetDevListRsp() {
        if (getDevListRspBuilder_ == null) {
          getDevListRsp_ = com.letsmidi.monsys.protocol.push.Push.GetDevListRsp.getDefaultInstance();
          onChanged();
        } else {
          getDevListRspBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00001000);
        return this;
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.GetDevListRsp get_dev_list_rsp = 19;</code>
       */
      public com.letsmidi.monsys.protocol.push.Push.GetDevListRsp.Builder getGetDevListRspBuilder() {
        bitField0_ |= 0x00001000;
        onChanged();
        return getGetDevListRspFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.GetDevListRsp get_dev_list_rsp = 19;</code>
       */
      public com.letsmidi.monsys.protocol.push.Push.GetDevListRspOrBuilder getGetDevListRspOrBuilder() {
        if (getDevListRspBuilder_ != null) {
          return getDevListRspBuilder_.getMessageOrBuilder();
        } else {
          return getDevListRsp_;
        }
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.GetDevListRsp get_dev_list_rsp = 19;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.letsmidi.monsys.protocol.push.Push.GetDevListRsp, com.letsmidi.monsys.protocol.push.Push.GetDevListRsp.Builder, com.letsmidi.monsys.protocol.push.Push.GetDevListRspOrBuilder> 
          getGetDevListRspFieldBuilder() {
        if (getDevListRspBuilder_ == null) {
          getDevListRspBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.letsmidi.monsys.protocol.push.Push.GetDevListRsp, com.letsmidi.monsys.protocol.push.Push.GetDevListRsp.Builder, com.letsmidi.monsys.protocol.push.Push.GetDevListRspOrBuilder>(
                  getDevListRsp_,
                  getParentForChildren(),
                  isClean());
          getDevListRsp_ = null;
        }
        return getDevListRspBuilder_;
      }

      // optional .com.letsmidi.monsys.protocol.push.GetDevInfo get_dev_info = 20;
      private com.letsmidi.monsys.protocol.push.Push.GetDevInfo getDevInfo_ = com.letsmidi.monsys.protocol.push.Push.GetDevInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.letsmidi.monsys.protocol.push.Push.GetDevInfo, com.letsmidi.monsys.protocol.push.Push.GetDevInfo.Builder, com.letsmidi.monsys.protocol.push.Push.GetDevInfoOrBuilder> getDevInfoBuilder_;
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.GetDevInfo get_dev_info = 20;</code>
       */
      public boolean hasGetDevInfo() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.GetDevInfo get_dev_info = 20;</code>
       */
      public com.letsmidi.monsys.protocol.push.Push.GetDevInfo getGetDevInfo() {
        if (getDevInfoBuilder_ == null) {
          return getDevInfo_;
        } else {
          return getDevInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.GetDevInfo get_dev_info = 20;</code>
       */
      public Builder setGetDevInfo(com.letsmidi.monsys.protocol.push.Push.GetDevInfo value) {
        if (getDevInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          getDevInfo_ = value;
          onChanged();
        } else {
          getDevInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00002000;
        return this;
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.GetDevInfo get_dev_info = 20;</code>
       */
      public Builder setGetDevInfo(
          com.letsmidi.monsys.protocol.push.Push.GetDevInfo.Builder builderForValue) {
        if (getDevInfoBuilder_ == null) {
          getDevInfo_ = builderForValue.build();
          onChanged();
        } else {
          getDevInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00002000;
        return this;
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.GetDevInfo get_dev_info = 20;</code>
       */
      public Builder mergeGetDevInfo(com.letsmidi.monsys.protocol.push.Push.GetDevInfo value) {
        if (getDevInfoBuilder_ == null) {
          if (((bitField0_ & 0x00002000) == 0x00002000) &&
              getDevInfo_ != com.letsmidi.monsys.protocol.push.Push.GetDevInfo.getDefaultInstance()) {
            getDevInfo_ =
              com.letsmidi.monsys.protocol.push.Push.GetDevInfo.newBuilder(getDevInfo_).mergeFrom(value).buildPartial();
          } else {
            getDevInfo_ = value;
          }
          onChanged();
        } else {
          getDevInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00002000;
        return this;
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.GetDevInfo get_dev_info = 20;</code>
       */
      public Builder clearGetDevInfo() {
        if (getDevInfoBuilder_ == null) {
          getDevInfo_ = com.letsmidi.monsys.protocol.push.Push.GetDevInfo.getDefaultInstance();
          onChanged();
        } else {
          getDevInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00002000);
        return this;
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.GetDevInfo get_dev_info = 20;</code>
       */
      public com.letsmidi.monsys.protocol.push.Push.GetDevInfo.Builder getGetDevInfoBuilder() {
        bitField0_ |= 0x00002000;
        onChanged();
        return getGetDevInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.GetDevInfo get_dev_info = 20;</code>
       */
      public com.letsmidi.monsys.protocol.push.Push.GetDevInfoOrBuilder getGetDevInfoOrBuilder() {
        if (getDevInfoBuilder_ != null) {
          return getDevInfoBuilder_.getMessageOrBuilder();
        } else {
          return getDevInfo_;
        }
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.GetDevInfo get_dev_info = 20;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.letsmidi.monsys.protocol.push.Push.GetDevInfo, com.letsmidi.monsys.protocol.push.Push.GetDevInfo.Builder, com.letsmidi.monsys.protocol.push.Push.GetDevInfoOrBuilder> 
          getGetDevInfoFieldBuilder() {
        if (getDevInfoBuilder_ == null) {
          getDevInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.letsmidi.monsys.protocol.push.Push.GetDevInfo, com.letsmidi.monsys.protocol.push.Push.GetDevInfo.Builder, com.letsmidi.monsys.protocol.push.Push.GetDevInfoOrBuilder>(
                  getDevInfo_,
                  getParentForChildren(),
                  isClean());
          getDevInfo_ = null;
        }
        return getDevInfoBuilder_;
      }

      // optional .com.letsmidi.monsys.protocol.push.GetDevInfoRsp get_dev_info_rsp = 21;
      private com.letsmidi.monsys.protocol.push.Push.GetDevInfoRsp getDevInfoRsp_ = com.letsmidi.monsys.protocol.push.Push.GetDevInfoRsp.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.letsmidi.monsys.protocol.push.Push.GetDevInfoRsp, com.letsmidi.monsys.protocol.push.Push.GetDevInfoRsp.Builder, com.letsmidi.monsys.protocol.push.Push.GetDevInfoRspOrBuilder> getDevInfoRspBuilder_;
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.GetDevInfoRsp get_dev_info_rsp = 21;</code>
       */
      public boolean hasGetDevInfoRsp() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.GetDevInfoRsp get_dev_info_rsp = 21;</code>
       */
      public com.letsmidi.monsys.protocol.push.Push.GetDevInfoRsp getGetDevInfoRsp() {
        if (getDevInfoRspBuilder_ == null) {
          return getDevInfoRsp_;
        } else {
          return getDevInfoRspBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.GetDevInfoRsp get_dev_info_rsp = 21;</code>
       */
      public Builder setGetDevInfoRsp(com.letsmidi.monsys.protocol.push.Push.GetDevInfoRsp value) {
        if (getDevInfoRspBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          getDevInfoRsp_ = value;
          onChanged();
        } else {
          getDevInfoRspBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00004000;
        return this;
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.GetDevInfoRsp get_dev_info_rsp = 21;</code>
       */
      public Builder setGetDevInfoRsp(
          com.letsmidi.monsys.protocol.push.Push.GetDevInfoRsp.Builder builderForValue) {
        if (getDevInfoRspBuilder_ == null) {
          getDevInfoRsp_ = builderForValue.build();
          onChanged();
        } else {
          getDevInfoRspBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00004000;
        return this;
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.GetDevInfoRsp get_dev_info_rsp = 21;</code>
       */
      public Builder mergeGetDevInfoRsp(com.letsmidi.monsys.protocol.push.Push.GetDevInfoRsp value) {
        if (getDevInfoRspBuilder_ == null) {
          if (((bitField0_ & 0x00004000) == 0x00004000) &&
              getDevInfoRsp_ != com.letsmidi.monsys.protocol.push.Push.GetDevInfoRsp.getDefaultInstance()) {
            getDevInfoRsp_ =
              com.letsmidi.monsys.protocol.push.Push.GetDevInfoRsp.newBuilder(getDevInfoRsp_).mergeFrom(value).buildPartial();
          } else {
            getDevInfoRsp_ = value;
          }
          onChanged();
        } else {
          getDevInfoRspBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00004000;
        return this;
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.GetDevInfoRsp get_dev_info_rsp = 21;</code>
       */
      public Builder clearGetDevInfoRsp() {
        if (getDevInfoRspBuilder_ == null) {
          getDevInfoRsp_ = com.letsmidi.monsys.protocol.push.Push.GetDevInfoRsp.getDefaultInstance();
          onChanged();
        } else {
          getDevInfoRspBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00004000);
        return this;
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.GetDevInfoRsp get_dev_info_rsp = 21;</code>
       */
      public com.letsmidi.monsys.protocol.push.Push.GetDevInfoRsp.Builder getGetDevInfoRspBuilder() {
        bitField0_ |= 0x00004000;
        onChanged();
        return getGetDevInfoRspFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.GetDevInfoRsp get_dev_info_rsp = 21;</code>
       */
      public com.letsmidi.monsys.protocol.push.Push.GetDevInfoRspOrBuilder getGetDevInfoRspOrBuilder() {
        if (getDevInfoRspBuilder_ != null) {
          return getDevInfoRspBuilder_.getMessageOrBuilder();
        } else {
          return getDevInfoRsp_;
        }
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.GetDevInfoRsp get_dev_info_rsp = 21;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.letsmidi.monsys.protocol.push.Push.GetDevInfoRsp, com.letsmidi.monsys.protocol.push.Push.GetDevInfoRsp.Builder, com.letsmidi.monsys.protocol.push.Push.GetDevInfoRspOrBuilder> 
          getGetDevInfoRspFieldBuilder() {
        if (getDevInfoRspBuilder_ == null) {
          getDevInfoRspBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.letsmidi.monsys.protocol.push.Push.GetDevInfoRsp, com.letsmidi.monsys.protocol.push.Push.GetDevInfoRsp.Builder, com.letsmidi.monsys.protocol.push.Push.GetDevInfoRspOrBuilder>(
                  getDevInfoRsp_,
                  getParentForChildren(),
                  isClean());
          getDevInfoRsp_ = null;
        }
        return getDevInfoRspBuilder_;
      }

      // optional .com.letsmidi.monsys.protocol.push.SetDevInfo set_dev_info = 22;
      private com.letsmidi.monsys.protocol.push.Push.SetDevInfo setDevInfo_ = com.letsmidi.monsys.protocol.push.Push.SetDevInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.letsmidi.monsys.protocol.push.Push.SetDevInfo, com.letsmidi.monsys.protocol.push.Push.SetDevInfo.Builder, com.letsmidi.monsys.protocol.push.Push.SetDevInfoOrBuilder> setDevInfoBuilder_;
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.SetDevInfo set_dev_info = 22;</code>
       */
      public boolean hasSetDevInfo() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.SetDevInfo set_dev_info = 22;</code>
       */
      public com.letsmidi.monsys.protocol.push.Push.SetDevInfo getSetDevInfo() {
        if (setDevInfoBuilder_ == null) {
          return setDevInfo_;
        } else {
          return setDevInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.SetDevInfo set_dev_info = 22;</code>
       */
      public Builder setSetDevInfo(com.letsmidi.monsys.protocol.push.Push.SetDevInfo value) {
        if (setDevInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          setDevInfo_ = value;
          onChanged();
        } else {
          setDevInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00008000;
        return this;
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.SetDevInfo set_dev_info = 22;</code>
       */
      public Builder setSetDevInfo(
          com.letsmidi.monsys.protocol.push.Push.SetDevInfo.Builder builderForValue) {
        if (setDevInfoBuilder_ == null) {
          setDevInfo_ = builderForValue.build();
          onChanged();
        } else {
          setDevInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00008000;
        return this;
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.SetDevInfo set_dev_info = 22;</code>
       */
      public Builder mergeSetDevInfo(com.letsmidi.monsys.protocol.push.Push.SetDevInfo value) {
        if (setDevInfoBuilder_ == null) {
          if (((bitField0_ & 0x00008000) == 0x00008000) &&
              setDevInfo_ != com.letsmidi.monsys.protocol.push.Push.SetDevInfo.getDefaultInstance()) {
            setDevInfo_ =
              com.letsmidi.monsys.protocol.push.Push.SetDevInfo.newBuilder(setDevInfo_).mergeFrom(value).buildPartial();
          } else {
            setDevInfo_ = value;
          }
          onChanged();
        } else {
          setDevInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00008000;
        return this;
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.SetDevInfo set_dev_info = 22;</code>
       */
      public Builder clearSetDevInfo() {
        if (setDevInfoBuilder_ == null) {
          setDevInfo_ = com.letsmidi.monsys.protocol.push.Push.SetDevInfo.getDefaultInstance();
          onChanged();
        } else {
          setDevInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00008000);
        return this;
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.SetDevInfo set_dev_info = 22;</code>
       */
      public com.letsmidi.monsys.protocol.push.Push.SetDevInfo.Builder getSetDevInfoBuilder() {
        bitField0_ |= 0x00008000;
        onChanged();
        return getSetDevInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.SetDevInfo set_dev_info = 22;</code>
       */
      public com.letsmidi.monsys.protocol.push.Push.SetDevInfoOrBuilder getSetDevInfoOrBuilder() {
        if (setDevInfoBuilder_ != null) {
          return setDevInfoBuilder_.getMessageOrBuilder();
        } else {
          return setDevInfo_;
        }
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.SetDevInfo set_dev_info = 22;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.letsmidi.monsys.protocol.push.Push.SetDevInfo, com.letsmidi.monsys.protocol.push.Push.SetDevInfo.Builder, com.letsmidi.monsys.protocol.push.Push.SetDevInfoOrBuilder> 
          getSetDevInfoFieldBuilder() {
        if (setDevInfoBuilder_ == null) {
          setDevInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.letsmidi.monsys.protocol.push.Push.SetDevInfo, com.letsmidi.monsys.protocol.push.Push.SetDevInfo.Builder, com.letsmidi.monsys.protocol.push.Push.SetDevInfoOrBuilder>(
                  setDevInfo_,
                  getParentForChildren(),
                  isClean());
          setDevInfo_ = null;
        }
        return setDevInfoBuilder_;
      }

      // optional .com.letsmidi.monsys.protocol.push.SetDevInfoRsp set_dev_info_rsp = 23;
      private com.letsmidi.monsys.protocol.push.Push.SetDevInfoRsp setDevInfoRsp_ = com.letsmidi.monsys.protocol.push.Push.SetDevInfoRsp.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.letsmidi.monsys.protocol.push.Push.SetDevInfoRsp, com.letsmidi.monsys.protocol.push.Push.SetDevInfoRsp.Builder, com.letsmidi.monsys.protocol.push.Push.SetDevInfoRspOrBuilder> setDevInfoRspBuilder_;
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.SetDevInfoRsp set_dev_info_rsp = 23;</code>
       */
      public boolean hasSetDevInfoRsp() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.SetDevInfoRsp set_dev_info_rsp = 23;</code>
       */
      public com.letsmidi.monsys.protocol.push.Push.SetDevInfoRsp getSetDevInfoRsp() {
        if (setDevInfoRspBuilder_ == null) {
          return setDevInfoRsp_;
        } else {
          return setDevInfoRspBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.SetDevInfoRsp set_dev_info_rsp = 23;</code>
       */
      public Builder setSetDevInfoRsp(com.letsmidi.monsys.protocol.push.Push.SetDevInfoRsp value) {
        if (setDevInfoRspBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          setDevInfoRsp_ = value;
          onChanged();
        } else {
          setDevInfoRspBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00010000;
        return this;
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.SetDevInfoRsp set_dev_info_rsp = 23;</code>
       */
      public Builder setSetDevInfoRsp(
          com.letsmidi.monsys.protocol.push.Push.SetDevInfoRsp.Builder builderForValue) {
        if (setDevInfoRspBuilder_ == null) {
          setDevInfoRsp_ = builderForValue.build();
          onChanged();
        } else {
          setDevInfoRspBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00010000;
        return this;
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.SetDevInfoRsp set_dev_info_rsp = 23;</code>
       */
      public Builder mergeSetDevInfoRsp(com.letsmidi.monsys.protocol.push.Push.SetDevInfoRsp value) {
        if (setDevInfoRspBuilder_ == null) {
          if (((bitField0_ & 0x00010000) == 0x00010000) &&
              setDevInfoRsp_ != com.letsmidi.monsys.protocol.push.Push.SetDevInfoRsp.getDefaultInstance()) {
            setDevInfoRsp_ =
              com.letsmidi.monsys.protocol.push.Push.SetDevInfoRsp.newBuilder(setDevInfoRsp_).mergeFrom(value).buildPartial();
          } else {
            setDevInfoRsp_ = value;
          }
          onChanged();
        } else {
          setDevInfoRspBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00010000;
        return this;
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.SetDevInfoRsp set_dev_info_rsp = 23;</code>
       */
      public Builder clearSetDevInfoRsp() {
        if (setDevInfoRspBuilder_ == null) {
          setDevInfoRsp_ = com.letsmidi.monsys.protocol.push.Push.SetDevInfoRsp.getDefaultInstance();
          onChanged();
        } else {
          setDevInfoRspBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00010000);
        return this;
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.SetDevInfoRsp set_dev_info_rsp = 23;</code>
       */
      public com.letsmidi.monsys.protocol.push.Push.SetDevInfoRsp.Builder getSetDevInfoRspBuilder() {
        bitField0_ |= 0x00010000;
        onChanged();
        return getSetDevInfoRspFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.SetDevInfoRsp set_dev_info_rsp = 23;</code>
       */
      public com.letsmidi.monsys.protocol.push.Push.SetDevInfoRspOrBuilder getSetDevInfoRspOrBuilder() {
        if (setDevInfoRspBuilder_ != null) {
          return setDevInfoRspBuilder_.getMessageOrBuilder();
        } else {
          return setDevInfoRsp_;
        }
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.SetDevInfoRsp set_dev_info_rsp = 23;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.letsmidi.monsys.protocol.push.Push.SetDevInfoRsp, com.letsmidi.monsys.protocol.push.Push.SetDevInfoRsp.Builder, com.letsmidi.monsys.protocol.push.Push.SetDevInfoRspOrBuilder> 
          getSetDevInfoRspFieldBuilder() {
        if (setDevInfoRspBuilder_ == null) {
          setDevInfoRspBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.letsmidi.monsys.protocol.push.Push.SetDevInfoRsp, com.letsmidi.monsys.protocol.push.Push.SetDevInfoRsp.Builder, com.letsmidi.monsys.protocol.push.Push.SetDevInfoRspOrBuilder>(
                  setDevInfoRsp_,
                  getParentForChildren(),
                  isClean());
          setDevInfoRsp_ = null;
        }
        return setDevInfoRspBuilder_;
      }

      // optional .com.letsmidi.monsys.protocol.push.AdminClientLogin client_login = 24;
      private com.letsmidi.monsys.protocol.push.Push.AdminClientLogin clientLogin_ = com.letsmidi.monsys.protocol.push.Push.AdminClientLogin.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.letsmidi.monsys.protocol.push.Push.AdminClientLogin, com.letsmidi.monsys.protocol.push.Push.AdminClientLogin.Builder, com.letsmidi.monsys.protocol.push.Push.AdminClientLoginOrBuilder> clientLoginBuilder_;
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.AdminClientLogin client_login = 24;</code>
       */
      public boolean hasClientLogin() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.AdminClientLogin client_login = 24;</code>
       */
      public com.letsmidi.monsys.protocol.push.Push.AdminClientLogin getClientLogin() {
        if (clientLoginBuilder_ == null) {
          return clientLogin_;
        } else {
          return clientLoginBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.AdminClientLogin client_login = 24;</code>
       */
      public Builder setClientLogin(com.letsmidi.monsys.protocol.push.Push.AdminClientLogin value) {
        if (clientLoginBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientLogin_ = value;
          onChanged();
        } else {
          clientLoginBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00020000;
        return this;
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.AdminClientLogin client_login = 24;</code>
       */
      public Builder setClientLogin(
          com.letsmidi.monsys.protocol.push.Push.AdminClientLogin.Builder builderForValue) {
        if (clientLoginBuilder_ == null) {
          clientLogin_ = builderForValue.build();
          onChanged();
        } else {
          clientLoginBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00020000;
        return this;
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.AdminClientLogin client_login = 24;</code>
       */
      public Builder mergeClientLogin(com.letsmidi.monsys.protocol.push.Push.AdminClientLogin value) {
        if (clientLoginBuilder_ == null) {
          if (((bitField0_ & 0x00020000) == 0x00020000) &&
              clientLogin_ != com.letsmidi.monsys.protocol.push.Push.AdminClientLogin.getDefaultInstance()) {
            clientLogin_ =
              com.letsmidi.monsys.protocol.push.Push.AdminClientLogin.newBuilder(clientLogin_).mergeFrom(value).buildPartial();
          } else {
            clientLogin_ = value;
          }
          onChanged();
        } else {
          clientLoginBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00020000;
        return this;
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.AdminClientLogin client_login = 24;</code>
       */
      public Builder clearClientLogin() {
        if (clientLoginBuilder_ == null) {
          clientLogin_ = com.letsmidi.monsys.protocol.push.Push.AdminClientLogin.getDefaultInstance();
          onChanged();
        } else {
          clientLoginBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00020000);
        return this;
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.AdminClientLogin client_login = 24;</code>
       */
      public com.letsmidi.monsys.protocol.push.Push.AdminClientLogin.Builder getClientLoginBuilder() {
        bitField0_ |= 0x00020000;
        onChanged();
        return getClientLoginFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.AdminClientLogin client_login = 24;</code>
       */
      public com.letsmidi.monsys.protocol.push.Push.AdminClientLoginOrBuilder getClientLoginOrBuilder() {
        if (clientLoginBuilder_ != null) {
          return clientLoginBuilder_.getMessageOrBuilder();
        } else {
          return clientLogin_;
        }
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.AdminClientLogin client_login = 24;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.letsmidi.monsys.protocol.push.Push.AdminClientLogin, com.letsmidi.monsys.protocol.push.Push.AdminClientLogin.Builder, com.letsmidi.monsys.protocol.push.Push.AdminClientLoginOrBuilder> 
          getClientLoginFieldBuilder() {
        if (clientLoginBuilder_ == null) {
          clientLoginBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.letsmidi.monsys.protocol.push.Push.AdminClientLogin, com.letsmidi.monsys.protocol.push.Push.AdminClientLogin.Builder, com.letsmidi.monsys.protocol.push.Push.AdminClientLoginOrBuilder>(
                  clientLogin_,
                  getParentForChildren(),
                  isClean());
          clientLogin_ = null;
        }
        return clientLoginBuilder_;
      }

      // optional .com.letsmidi.monsys.protocol.push.AdminClientLoginRsp client_login_rsp = 25;
      private com.letsmidi.monsys.protocol.push.Push.AdminClientLoginRsp clientLoginRsp_ = com.letsmidi.monsys.protocol.push.Push.AdminClientLoginRsp.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.letsmidi.monsys.protocol.push.Push.AdminClientLoginRsp, com.letsmidi.monsys.protocol.push.Push.AdminClientLoginRsp.Builder, com.letsmidi.monsys.protocol.push.Push.AdminClientLoginRspOrBuilder> clientLoginRspBuilder_;
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.AdminClientLoginRsp client_login_rsp = 25;</code>
       */
      public boolean hasClientLoginRsp() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.AdminClientLoginRsp client_login_rsp = 25;</code>
       */
      public com.letsmidi.monsys.protocol.push.Push.AdminClientLoginRsp getClientLoginRsp() {
        if (clientLoginRspBuilder_ == null) {
          return clientLoginRsp_;
        } else {
          return clientLoginRspBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.AdminClientLoginRsp client_login_rsp = 25;</code>
       */
      public Builder setClientLoginRsp(com.letsmidi.monsys.protocol.push.Push.AdminClientLoginRsp value) {
        if (clientLoginRspBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientLoginRsp_ = value;
          onChanged();
        } else {
          clientLoginRspBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00040000;
        return this;
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.AdminClientLoginRsp client_login_rsp = 25;</code>
       */
      public Builder setClientLoginRsp(
          com.letsmidi.monsys.protocol.push.Push.AdminClientLoginRsp.Builder builderForValue) {
        if (clientLoginRspBuilder_ == null) {
          clientLoginRsp_ = builderForValue.build();
          onChanged();
        } else {
          clientLoginRspBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00040000;
        return this;
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.AdminClientLoginRsp client_login_rsp = 25;</code>
       */
      public Builder mergeClientLoginRsp(com.letsmidi.monsys.protocol.push.Push.AdminClientLoginRsp value) {
        if (clientLoginRspBuilder_ == null) {
          if (((bitField0_ & 0x00040000) == 0x00040000) &&
              clientLoginRsp_ != com.letsmidi.monsys.protocol.push.Push.AdminClientLoginRsp.getDefaultInstance()) {
            clientLoginRsp_ =
              com.letsmidi.monsys.protocol.push.Push.AdminClientLoginRsp.newBuilder(clientLoginRsp_).mergeFrom(value).buildPartial();
          } else {
            clientLoginRsp_ = value;
          }
          onChanged();
        } else {
          clientLoginRspBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00040000;
        return this;
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.AdminClientLoginRsp client_login_rsp = 25;</code>
       */
      public Builder clearClientLoginRsp() {
        if (clientLoginRspBuilder_ == null) {
          clientLoginRsp_ = com.letsmidi.monsys.protocol.push.Push.AdminClientLoginRsp.getDefaultInstance();
          onChanged();
        } else {
          clientLoginRspBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00040000);
        return this;
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.AdminClientLoginRsp client_login_rsp = 25;</code>
       */
      public com.letsmidi.monsys.protocol.push.Push.AdminClientLoginRsp.Builder getClientLoginRspBuilder() {
        bitField0_ |= 0x00040000;
        onChanged();
        return getClientLoginRspFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.AdminClientLoginRsp client_login_rsp = 25;</code>
       */
      public com.letsmidi.monsys.protocol.push.Push.AdminClientLoginRspOrBuilder getClientLoginRspOrBuilder() {
        if (clientLoginRspBuilder_ != null) {
          return clientLoginRspBuilder_.getMessageOrBuilder();
        } else {
          return clientLoginRsp_;
        }
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.AdminClientLoginRsp client_login_rsp = 25;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.letsmidi.monsys.protocol.push.Push.AdminClientLoginRsp, com.letsmidi.monsys.protocol.push.Push.AdminClientLoginRsp.Builder, com.letsmidi.monsys.protocol.push.Push.AdminClientLoginRspOrBuilder> 
          getClientLoginRspFieldBuilder() {
        if (clientLoginRspBuilder_ == null) {
          clientLoginRspBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.letsmidi.monsys.protocol.push.Push.AdminClientLoginRsp, com.letsmidi.monsys.protocol.push.Push.AdminClientLoginRsp.Builder, com.letsmidi.monsys.protocol.push.Push.AdminClientLoginRspOrBuilder>(
                  clientLoginRsp_,
                  getParentForChildren(),
                  isClean());
          clientLoginRsp_ = null;
        }
        return clientLoginRspBuilder_;
      }

      // optional .com.letsmidi.monsys.protocol.push.UserRegister user_register = 26;
      private com.letsmidi.monsys.protocol.push.Push.UserRegister userRegister_ = com.letsmidi.monsys.protocol.push.Push.UserRegister.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.letsmidi.monsys.protocol.push.Push.UserRegister, com.letsmidi.monsys.protocol.push.Push.UserRegister.Builder, com.letsmidi.monsys.protocol.push.Push.UserRegisterOrBuilder> userRegisterBuilder_;
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.UserRegister user_register = 26;</code>
       */
      public boolean hasUserRegister() {
        return ((bitField0_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.UserRegister user_register = 26;</code>
       */
      public com.letsmidi.monsys.protocol.push.Push.UserRegister getUserRegister() {
        if (userRegisterBuilder_ == null) {
          return userRegister_;
        } else {
          return userRegisterBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.UserRegister user_register = 26;</code>
       */
      public Builder setUserRegister(com.letsmidi.monsys.protocol.push.Push.UserRegister value) {
        if (userRegisterBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          userRegister_ = value;
          onChanged();
        } else {
          userRegisterBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00080000;
        return this;
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.UserRegister user_register = 26;</code>
       */
      public Builder setUserRegister(
          com.letsmidi.monsys.protocol.push.Push.UserRegister.Builder builderForValue) {
        if (userRegisterBuilder_ == null) {
          userRegister_ = builderForValue.build();
          onChanged();
        } else {
          userRegisterBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00080000;
        return this;
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.UserRegister user_register = 26;</code>
       */
      public Builder mergeUserRegister(com.letsmidi.monsys.protocol.push.Push.UserRegister value) {
        if (userRegisterBuilder_ == null) {
          if (((bitField0_ & 0x00080000) == 0x00080000) &&
              userRegister_ != com.letsmidi.monsys.protocol.push.Push.UserRegister.getDefaultInstance()) {
            userRegister_ =
              com.letsmidi.monsys.protocol.push.Push.UserRegister.newBuilder(userRegister_).mergeFrom(value).buildPartial();
          } else {
            userRegister_ = value;
          }
          onChanged();
        } else {
          userRegisterBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00080000;
        return this;
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.UserRegister user_register = 26;</code>
       */
      public Builder clearUserRegister() {
        if (userRegisterBuilder_ == null) {
          userRegister_ = com.letsmidi.monsys.protocol.push.Push.UserRegister.getDefaultInstance();
          onChanged();
        } else {
          userRegisterBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00080000);
        return this;
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.UserRegister user_register = 26;</code>
       */
      public com.letsmidi.monsys.protocol.push.Push.UserRegister.Builder getUserRegisterBuilder() {
        bitField0_ |= 0x00080000;
        onChanged();
        return getUserRegisterFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.UserRegister user_register = 26;</code>
       */
      public com.letsmidi.monsys.protocol.push.Push.UserRegisterOrBuilder getUserRegisterOrBuilder() {
        if (userRegisterBuilder_ != null) {
          return userRegisterBuilder_.getMessageOrBuilder();
        } else {
          return userRegister_;
        }
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.UserRegister user_register = 26;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.letsmidi.monsys.protocol.push.Push.UserRegister, com.letsmidi.monsys.protocol.push.Push.UserRegister.Builder, com.letsmidi.monsys.protocol.push.Push.UserRegisterOrBuilder> 
          getUserRegisterFieldBuilder() {
        if (userRegisterBuilder_ == null) {
          userRegisterBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.letsmidi.monsys.protocol.push.Push.UserRegister, com.letsmidi.monsys.protocol.push.Push.UserRegister.Builder, com.letsmidi.monsys.protocol.push.Push.UserRegisterOrBuilder>(
                  userRegister_,
                  getParentForChildren(),
                  isClean());
          userRegister_ = null;
        }
        return userRegisterBuilder_;
      }

      // optional .com.letsmidi.monsys.protocol.push.UserRegisterRsp user_register_rsp = 27;
      private com.letsmidi.monsys.protocol.push.Push.UserRegisterRsp userRegisterRsp_ = com.letsmidi.monsys.protocol.push.Push.UserRegisterRsp.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.letsmidi.monsys.protocol.push.Push.UserRegisterRsp, com.letsmidi.monsys.protocol.push.Push.UserRegisterRsp.Builder, com.letsmidi.monsys.protocol.push.Push.UserRegisterRspOrBuilder> userRegisterRspBuilder_;
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.UserRegisterRsp user_register_rsp = 27;</code>
       */
      public boolean hasUserRegisterRsp() {
        return ((bitField0_ & 0x00100000) == 0x00100000);
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.UserRegisterRsp user_register_rsp = 27;</code>
       */
      public com.letsmidi.monsys.protocol.push.Push.UserRegisterRsp getUserRegisterRsp() {
        if (userRegisterRspBuilder_ == null) {
          return userRegisterRsp_;
        } else {
          return userRegisterRspBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.UserRegisterRsp user_register_rsp = 27;</code>
       */
      public Builder setUserRegisterRsp(com.letsmidi.monsys.protocol.push.Push.UserRegisterRsp value) {
        if (userRegisterRspBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          userRegisterRsp_ = value;
          onChanged();
        } else {
          userRegisterRspBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00100000;
        return this;
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.UserRegisterRsp user_register_rsp = 27;</code>
       */
      public Builder setUserRegisterRsp(
          com.letsmidi.monsys.protocol.push.Push.UserRegisterRsp.Builder builderForValue) {
        if (userRegisterRspBuilder_ == null) {
          userRegisterRsp_ = builderForValue.build();
          onChanged();
        } else {
          userRegisterRspBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00100000;
        return this;
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.UserRegisterRsp user_register_rsp = 27;</code>
       */
      public Builder mergeUserRegisterRsp(com.letsmidi.monsys.protocol.push.Push.UserRegisterRsp value) {
        if (userRegisterRspBuilder_ == null) {
          if (((bitField0_ & 0x00100000) == 0x00100000) &&
              userRegisterRsp_ != com.letsmidi.monsys.protocol.push.Push.UserRegisterRsp.getDefaultInstance()) {
            userRegisterRsp_ =
              com.letsmidi.monsys.protocol.push.Push.UserRegisterRsp.newBuilder(userRegisterRsp_).mergeFrom(value).buildPartial();
          } else {
            userRegisterRsp_ = value;
          }
          onChanged();
        } else {
          userRegisterRspBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00100000;
        return this;
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.UserRegisterRsp user_register_rsp = 27;</code>
       */
      public Builder clearUserRegisterRsp() {
        if (userRegisterRspBuilder_ == null) {
          userRegisterRsp_ = com.letsmidi.monsys.protocol.push.Push.UserRegisterRsp.getDefaultInstance();
          onChanged();
        } else {
          userRegisterRspBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00100000);
        return this;
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.UserRegisterRsp user_register_rsp = 27;</code>
       */
      public com.letsmidi.monsys.protocol.push.Push.UserRegisterRsp.Builder getUserRegisterRspBuilder() {
        bitField0_ |= 0x00100000;
        onChanged();
        return getUserRegisterRspFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.UserRegisterRsp user_register_rsp = 27;</code>
       */
      public com.letsmidi.monsys.protocol.push.Push.UserRegisterRspOrBuilder getUserRegisterRspOrBuilder() {
        if (userRegisterRspBuilder_ != null) {
          return userRegisterRspBuilder_.getMessageOrBuilder();
        } else {
          return userRegisterRsp_;
        }
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.UserRegisterRsp user_register_rsp = 27;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.letsmidi.monsys.protocol.push.Push.UserRegisterRsp, com.letsmidi.monsys.protocol.push.Push.UserRegisterRsp.Builder, com.letsmidi.monsys.protocol.push.Push.UserRegisterRspOrBuilder> 
          getUserRegisterRspFieldBuilder() {
        if (userRegisterRspBuilder_ == null) {
          userRegisterRspBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.letsmidi.monsys.protocol.push.Push.UserRegisterRsp, com.letsmidi.monsys.protocol.push.Push.UserRegisterRsp.Builder, com.letsmidi.monsys.protocol.push.Push.UserRegisterRspOrBuilder>(
                  userRegisterRsp_,
                  getParentForChildren(),
                  isClean());
          userRegisterRsp_ = null;
        }
        return userRegisterRspBuilder_;
      }

      // optional .com.letsmidi.monsys.protocol.push.Heartbeat heartbeat = 28;
      private com.letsmidi.monsys.protocol.push.Push.Heartbeat heartbeat_ = com.letsmidi.monsys.protocol.push.Push.Heartbeat.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.letsmidi.monsys.protocol.push.Push.Heartbeat, com.letsmidi.monsys.protocol.push.Push.Heartbeat.Builder, com.letsmidi.monsys.protocol.push.Push.HeartbeatOrBuilder> heartbeatBuilder_;
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.Heartbeat heartbeat = 28;</code>
       */
      public boolean hasHeartbeat() {
        return ((bitField0_ & 0x00200000) == 0x00200000);
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.Heartbeat heartbeat = 28;</code>
       */
      public com.letsmidi.monsys.protocol.push.Push.Heartbeat getHeartbeat() {
        if (heartbeatBuilder_ == null) {
          return heartbeat_;
        } else {
          return heartbeatBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.Heartbeat heartbeat = 28;</code>
       */
      public Builder setHeartbeat(com.letsmidi.monsys.protocol.push.Push.Heartbeat value) {
        if (heartbeatBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          heartbeat_ = value;
          onChanged();
        } else {
          heartbeatBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00200000;
        return this;
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.Heartbeat heartbeat = 28;</code>
       */
      public Builder setHeartbeat(
          com.letsmidi.monsys.protocol.push.Push.Heartbeat.Builder builderForValue) {
        if (heartbeatBuilder_ == null) {
          heartbeat_ = builderForValue.build();
          onChanged();
        } else {
          heartbeatBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00200000;
        return this;
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.Heartbeat heartbeat = 28;</code>
       */
      public Builder mergeHeartbeat(com.letsmidi.monsys.protocol.push.Push.Heartbeat value) {
        if (heartbeatBuilder_ == null) {
          if (((bitField0_ & 0x00200000) == 0x00200000) &&
              heartbeat_ != com.letsmidi.monsys.protocol.push.Push.Heartbeat.getDefaultInstance()) {
            heartbeat_ =
              com.letsmidi.monsys.protocol.push.Push.Heartbeat.newBuilder(heartbeat_).mergeFrom(value).buildPartial();
          } else {
            heartbeat_ = value;
          }
          onChanged();
        } else {
          heartbeatBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00200000;
        return this;
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.Heartbeat heartbeat = 28;</code>
       */
      public Builder clearHeartbeat() {
        if (heartbeatBuilder_ == null) {
          heartbeat_ = com.letsmidi.monsys.protocol.push.Push.Heartbeat.getDefaultInstance();
          onChanged();
        } else {
          heartbeatBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00200000);
        return this;
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.Heartbeat heartbeat = 28;</code>
       */
      public com.letsmidi.monsys.protocol.push.Push.Heartbeat.Builder getHeartbeatBuilder() {
        bitField0_ |= 0x00200000;
        onChanged();
        return getHeartbeatFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.Heartbeat heartbeat = 28;</code>
       */
      public com.letsmidi.monsys.protocol.push.Push.HeartbeatOrBuilder getHeartbeatOrBuilder() {
        if (heartbeatBuilder_ != null) {
          return heartbeatBuilder_.getMessageOrBuilder();
        } else {
          return heartbeat_;
        }
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.push.Heartbeat heartbeat = 28;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.letsmidi.monsys.protocol.push.Push.Heartbeat, com.letsmidi.monsys.protocol.push.Push.Heartbeat.Builder, com.letsmidi.monsys.protocol.push.Push.HeartbeatOrBuilder> 
          getHeartbeatFieldBuilder() {
        if (heartbeatBuilder_ == null) {
          heartbeatBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.letsmidi.monsys.protocol.push.Push.Heartbeat, com.letsmidi.monsys.protocol.push.Push.Heartbeat.Builder, com.letsmidi.monsys.protocol.push.Push.HeartbeatOrBuilder>(
                  heartbeat_,
                  getParentForChildren(),
                  isClean());
          heartbeat_ = null;
        }
        return heartbeatBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:com.letsmidi.monsys.protocol.push.PushMsg)
    }

    static {
      defaultInstance = new PushMsg(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.letsmidi.monsys.protocol.push.PushMsg)
  }

  public interface PushClientLoginOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string device_id = 1;
    /**
     * <code>required string device_id = 1;</code>
     */
    boolean hasDeviceId();
    /**
     * <code>required string device_id = 1;</code>
     */
    java.lang.String getDeviceId();
    /**
     * <code>required string device_id = 1;</code>
     */
    com.google.protobuf.ByteString
        getDeviceIdBytes();
  }
  /**
   * Protobuf type {@code com.letsmidi.monsys.protocol.push.PushClientLogin}
   */
  public static final class PushClientLogin extends
      com.google.protobuf.GeneratedMessage
      implements PushClientLoginOrBuilder {
    // Use PushClientLogin.newBuilder() to construct.
    private PushClientLogin(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private PushClientLogin(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final PushClientLogin defaultInstance;
    public static PushClientLogin getDefaultInstance() {
      return defaultInstance;
    }

    public PushClientLogin getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private PushClientLogin(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              deviceId_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.letsmidi.monsys.protocol.push.Push.internal_static_com_letsmidi_monsys_protocol_push_PushClientLogin_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.letsmidi.monsys.protocol.push.Push.internal_static_com_letsmidi_monsys_protocol_push_PushClientLogin_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.letsmidi.monsys.protocol.push.Push.PushClientLogin.class, com.letsmidi.monsys.protocol.push.Push.PushClientLogin.Builder.class);
    }

    public static com.google.protobuf.Parser<PushClientLogin> PARSER =
        new com.google.protobuf.AbstractParser<PushClientLogin>() {
      public PushClientLogin parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PushClientLogin(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<PushClientLogin> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string device_id = 1;
    public static final int DEVICE_ID_FIELD_NUMBER = 1;
    private java.lang.Object deviceId_;
    /**
     * <code>required string device_id = 1;</code>
     */
    public boolean hasDeviceId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string device_id = 1;</code>
     */
    public java.lang.String getDeviceId() {
      java.lang.Object ref = deviceId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          deviceId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string device_id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getDeviceIdBytes() {
      java.lang.Object ref = deviceId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        deviceId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      deviceId_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasDeviceId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getDeviceIdBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getDeviceIdBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.letsmidi.monsys.protocol.push.Push.PushClientLogin parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.letsmidi.monsys.protocol.push.Push.PushClientLogin parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.letsmidi.monsys.protocol.push.Push.PushClientLogin parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.letsmidi.monsys.protocol.push.Push.PushClientLogin parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.letsmidi.monsys.protocol.push.Push.PushClientLogin parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.letsmidi.monsys.protocol.push.Push.PushClientLogin parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.letsmidi.monsys.protocol.push.Push.PushClientLogin parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.letsmidi.monsys.protocol.push.Push.PushClientLogin parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.letsmidi.monsys.protocol.push.Push.PushClientLogin parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.letsmidi.monsys.protocol.push.Push.PushClientLogin parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.letsmidi.monsys.protocol.push.Push.PushClientLogin prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.letsmidi.monsys.protocol.push.PushClientLogin}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.letsmidi.monsys.protocol.push.Push.PushClientLoginOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.letsmidi.monsys.protocol.push.Push.internal_static_com_letsmidi_monsys_protocol_push_PushClientLogin_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.letsmidi.monsys.protocol.push.Push.internal_static_com_letsmidi_monsys_protocol_push_PushClientLogin_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.letsmidi.monsys.protocol.push.Push.PushClientLogin.class, com.letsmidi.monsys.protocol.push.Push.PushClientLogin.Builder.class);
      }

      // Construct using com.letsmidi.monsys.protocol.push.Push.PushClientLogin.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        deviceId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.letsmidi.monsys.protocol.push.Push.internal_static_com_letsmidi_monsys_protocol_push_PushClientLogin_descriptor;
      }

      public com.letsmidi.monsys.protocol.push.Push.PushClientLogin getDefaultInstanceForType() {
        return com.letsmidi.monsys.protocol.push.Push.PushClientLogin.getDefaultInstance();
      }

      public com.letsmidi.monsys.protocol.push.Push.PushClientLogin build() {
        com.letsmidi.monsys.protocol.push.Push.PushClientLogin result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.letsmidi.monsys.protocol.push.Push.PushClientLogin buildPartial() {
        com.letsmidi.monsys.protocol.push.Push.PushClientLogin result = new com.letsmidi.monsys.protocol.push.Push.PushClientLogin(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.deviceId_ = deviceId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.letsmidi.monsys.protocol.push.Push.PushClientLogin) {
          return mergeFrom((com.letsmidi.monsys.protocol.push.Push.PushClientLogin)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.letsmidi.monsys.protocol.push.Push.PushClientLogin other) {
        if (other == com.letsmidi.monsys.protocol.push.Push.PushClientLogin.getDefaultInstance()) return this;
        if (other.hasDeviceId()) {
          bitField0_ |= 0x00000001;
          deviceId_ = other.deviceId_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasDeviceId()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.letsmidi.monsys.protocol.push.Push.PushClientLogin parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.letsmidi.monsys.protocol.push.Push.PushClientLogin) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string device_id = 1;
      private java.lang.Object deviceId_ = "";
      /**
       * <code>required string device_id = 1;</code>
       */
      public boolean hasDeviceId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string device_id = 1;</code>
       */
      public java.lang.String getDeviceId() {
        java.lang.Object ref = deviceId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          deviceId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string device_id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getDeviceIdBytes() {
        java.lang.Object ref = deviceId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          deviceId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string device_id = 1;</code>
       */
      public Builder setDeviceId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        deviceId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string device_id = 1;</code>
       */
      public Builder clearDeviceId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        deviceId_ = getDefaultInstance().getDeviceId();
        onChanged();
        return this;
      }
      /**
       * <code>required string device_id = 1;</code>
       */
      public Builder setDeviceIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        deviceId_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.letsmidi.monsys.protocol.push.PushClientLogin)
    }

    static {
      defaultInstance = new PushClientLogin(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.letsmidi.monsys.protocol.push.PushClientLogin)
  }

  public interface PushClientLoginRspOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 code = 1;
    /**
     * <code>required int32 code = 1;</code>
     */
    boolean hasCode();
    /**
     * <code>required int32 code = 1;</code>
     */
    int getCode();
  }
  /**
   * Protobuf type {@code com.letsmidi.monsys.protocol.push.PushClientLoginRsp}
   */
  public static final class PushClientLoginRsp extends
      com.google.protobuf.GeneratedMessage
      implements PushClientLoginRspOrBuilder {
    // Use PushClientLoginRsp.newBuilder() to construct.
    private PushClientLoginRsp(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private PushClientLoginRsp(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final PushClientLoginRsp defaultInstance;
    public static PushClientLoginRsp getDefaultInstance() {
      return defaultInstance;
    }

    public PushClientLoginRsp getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private PushClientLoginRsp(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              code_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.letsmidi.monsys.protocol.push.Push.internal_static_com_letsmidi_monsys_protocol_push_PushClientLoginRsp_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.letsmidi.monsys.protocol.push.Push.internal_static_com_letsmidi_monsys_protocol_push_PushClientLoginRsp_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.letsmidi.monsys.protocol.push.Push.PushClientLoginRsp.class, com.letsmidi.monsys.protocol.push.Push.PushClientLoginRsp.Builder.class);
    }

    public static com.google.protobuf.Parser<PushClientLoginRsp> PARSER =
        new com.google.protobuf.AbstractParser<PushClientLoginRsp>() {
      public PushClientLoginRsp parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PushClientLoginRsp(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<PushClientLoginRsp> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 code = 1;
    public static final int CODE_FIELD_NUMBER = 1;
    private int code_;
    /**
     * <code>required int32 code = 1;</code>
     */
    public boolean hasCode() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 code = 1;</code>
     */
    public int getCode() {
      return code_;
    }

    private void initFields() {
      code_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasCode()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, code_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, code_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.letsmidi.monsys.protocol.push.Push.PushClientLoginRsp parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.letsmidi.monsys.protocol.push.Push.PushClientLoginRsp parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.letsmidi.monsys.protocol.push.Push.PushClientLoginRsp parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.letsmidi.monsys.protocol.push.Push.PushClientLoginRsp parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.letsmidi.monsys.protocol.push.Push.PushClientLoginRsp parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.letsmidi.monsys.protocol.push.Push.PushClientLoginRsp parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.letsmidi.monsys.protocol.push.Push.PushClientLoginRsp parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.letsmidi.monsys.protocol.push.Push.PushClientLoginRsp parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.letsmidi.monsys.protocol.push.Push.PushClientLoginRsp parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.letsmidi.monsys.protocol.push.Push.PushClientLoginRsp parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.letsmidi.monsys.protocol.push.Push.PushClientLoginRsp prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.letsmidi.monsys.protocol.push.PushClientLoginRsp}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.letsmidi.monsys.protocol.push.Push.PushClientLoginRspOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.letsmidi.monsys.protocol.push.Push.internal_static_com_letsmidi_monsys_protocol_push_PushClientLoginRsp_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.letsmidi.monsys.protocol.push.Push.internal_static_com_letsmidi_monsys_protocol_push_PushClientLoginRsp_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.letsmidi.monsys.protocol.push.Push.PushClientLoginRsp.class, com.letsmidi.monsys.protocol.push.Push.PushClientLoginRsp.Builder.class);
      }

      // Construct using com.letsmidi.monsys.protocol.push.Push.PushClientLoginRsp.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        code_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.letsmidi.monsys.protocol.push.Push.internal_static_com_letsmidi_monsys_protocol_push_PushClientLoginRsp_descriptor;
      }

      public com.letsmidi.monsys.protocol.push.Push.PushClientLoginRsp getDefaultInstanceForType() {
        return com.letsmidi.monsys.protocol.push.Push.PushClientLoginRsp.getDefaultInstance();
      }

      public com.letsmidi.monsys.protocol.push.Push.PushClientLoginRsp build() {
        com.letsmidi.monsys.protocol.push.Push.PushClientLoginRsp result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.letsmidi.monsys.protocol.push.Push.PushClientLoginRsp buildPartial() {
        com.letsmidi.monsys.protocol.push.Push.PushClientLoginRsp result = new com.letsmidi.monsys.protocol.push.Push.PushClientLoginRsp(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.code_ = code_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.letsmidi.monsys.protocol.push.Push.PushClientLoginRsp) {
          return mergeFrom((com.letsmidi.monsys.protocol.push.Push.PushClientLoginRsp)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.letsmidi.monsys.protocol.push.Push.PushClientLoginRsp other) {
        if (other == com.letsmidi.monsys.protocol.push.Push.PushClientLoginRsp.getDefaultInstance()) return this;
        if (other.hasCode()) {
          setCode(other.getCode());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasCode()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.letsmidi.monsys.protocol.push.Push.PushClientLoginRsp parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.letsmidi.monsys.protocol.push.Push.PushClientLoginRsp) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 code = 1;
      private int code_ ;
      /**
       * <code>required int32 code = 1;</code>
       */
      public boolean hasCode() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 code = 1;</code>
       */
      public int getCode() {
        return code_;
      }
      /**
       * <code>required int32 code = 1;</code>
       */
      public Builder setCode(int value) {
        bitField0_ |= 0x00000001;
        code_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 code = 1;</code>
       */
      public Builder clearCode() {
        bitField0_ = (bitField0_ & ~0x00000001);
        code_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.letsmidi.monsys.protocol.push.PushClientLoginRsp)
    }

    static {
      defaultInstance = new PushClientLoginRsp(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.letsmidi.monsys.protocol.push.PushClientLoginRsp)
  }

  public interface AdminClientLoginOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string account = 1;
    /**
     * <code>required string account = 1;</code>
     */
    boolean hasAccount();
    /**
     * <code>required string account = 1;</code>
     */
    java.lang.String getAccount();
    /**
     * <code>required string account = 1;</code>
     */
    com.google.protobuf.ByteString
        getAccountBytes();

    // required string password = 2;
    /**
     * <code>required string password = 2;</code>
     */
    boolean hasPassword();
    /**
     * <code>required string password = 2;</code>
     */
    java.lang.String getPassword();
    /**
     * <code>required string password = 2;</code>
     */
    com.google.protobuf.ByteString
        getPasswordBytes();
  }
  /**
   * Protobuf type {@code com.letsmidi.monsys.protocol.push.AdminClientLogin}
   */
  public static final class AdminClientLogin extends
      com.google.protobuf.GeneratedMessage
      implements AdminClientLoginOrBuilder {
    // Use AdminClientLogin.newBuilder() to construct.
    private AdminClientLogin(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private AdminClientLogin(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final AdminClientLogin defaultInstance;
    public static AdminClientLogin getDefaultInstance() {
      return defaultInstance;
    }

    public AdminClientLogin getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private AdminClientLogin(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              account_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              password_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.letsmidi.monsys.protocol.push.Push.internal_static_com_letsmidi_monsys_protocol_push_AdminClientLogin_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.letsmidi.monsys.protocol.push.Push.internal_static_com_letsmidi_monsys_protocol_push_AdminClientLogin_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.letsmidi.monsys.protocol.push.Push.AdminClientLogin.class, com.letsmidi.monsys.protocol.push.Push.AdminClientLogin.Builder.class);
    }

    public static com.google.protobuf.Parser<AdminClientLogin> PARSER =
        new com.google.protobuf.AbstractParser<AdminClientLogin>() {
      public AdminClientLogin parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new AdminClientLogin(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<AdminClientLogin> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string account = 1;
    public static final int ACCOUNT_FIELD_NUMBER = 1;
    private java.lang.Object account_;
    /**
     * <code>required string account = 1;</code>
     */
    public boolean hasAccount() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string account = 1;</code>
     */
    public java.lang.String getAccount() {
      java.lang.Object ref = account_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          account_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string account = 1;</code>
     */
    public com.google.protobuf.ByteString
        getAccountBytes() {
      java.lang.Object ref = account_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        account_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required string password = 2;
    public static final int PASSWORD_FIELD_NUMBER = 2;
    private java.lang.Object password_;
    /**
     * <code>required string password = 2;</code>
     */
    public boolean hasPassword() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string password = 2;</code>
     */
    public java.lang.String getPassword() {
      java.lang.Object ref = password_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          password_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string password = 2;</code>
     */
    public com.google.protobuf.ByteString
        getPasswordBytes() {
      java.lang.Object ref = password_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        password_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      account_ = "";
      password_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasAccount()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPassword()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getAccountBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getPasswordBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getAccountBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getPasswordBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.letsmidi.monsys.protocol.push.Push.AdminClientLogin parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.letsmidi.monsys.protocol.push.Push.AdminClientLogin parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.letsmidi.monsys.protocol.push.Push.AdminClientLogin parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.letsmidi.monsys.protocol.push.Push.AdminClientLogin parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.letsmidi.monsys.protocol.push.Push.AdminClientLogin parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.letsmidi.monsys.protocol.push.Push.AdminClientLogin parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.letsmidi.monsys.protocol.push.Push.AdminClientLogin parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.letsmidi.monsys.protocol.push.Push.AdminClientLogin parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.letsmidi.monsys.protocol.push.Push.AdminClientLogin parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.letsmidi.monsys.protocol.push.Push.AdminClientLogin parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.letsmidi.monsys.protocol.push.Push.AdminClientLogin prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.letsmidi.monsys.protocol.push.AdminClientLogin}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.letsmidi.monsys.protocol.push.Push.AdminClientLoginOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.letsmidi.monsys.protocol.push.Push.internal_static_com_letsmidi_monsys_protocol_push_AdminClientLogin_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.letsmidi.monsys.protocol.push.Push.internal_static_com_letsmidi_monsys_protocol_push_AdminClientLogin_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.letsmidi.monsys.protocol.push.Push.AdminClientLogin.class, com.letsmidi.monsys.protocol.push.Push.AdminClientLogin.Builder.class);
      }

      // Construct using com.letsmidi.monsys.protocol.push.Push.AdminClientLogin.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        account_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        password_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.letsmidi.monsys.protocol.push.Push.internal_static_com_letsmidi_monsys_protocol_push_AdminClientLogin_descriptor;
      }

      public com.letsmidi.monsys.protocol.push.Push.AdminClientLogin getDefaultInstanceForType() {
        return com.letsmidi.monsys.protocol.push.Push.AdminClientLogin.getDefaultInstance();
      }

      public com.letsmidi.monsys.protocol.push.Push.AdminClientLogin build() {
        com.letsmidi.monsys.protocol.push.Push.AdminClientLogin result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.letsmidi.monsys.protocol.push.Push.AdminClientLogin buildPartial() {
        com.letsmidi.monsys.protocol.push.Push.AdminClientLogin result = new com.letsmidi.monsys.protocol.push.Push.AdminClientLogin(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.account_ = account_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.password_ = password_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.letsmidi.monsys.protocol.push.Push.AdminClientLogin) {
          return mergeFrom((com.letsmidi.monsys.protocol.push.Push.AdminClientLogin)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.letsmidi.monsys.protocol.push.Push.AdminClientLogin other) {
        if (other == com.letsmidi.monsys.protocol.push.Push.AdminClientLogin.getDefaultInstance()) return this;
        if (other.hasAccount()) {
          bitField0_ |= 0x00000001;
          account_ = other.account_;
          onChanged();
        }
        if (other.hasPassword()) {
          bitField0_ |= 0x00000002;
          password_ = other.password_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasAccount()) {
          
          return false;
        }
        if (!hasPassword()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.letsmidi.monsys.protocol.push.Push.AdminClientLogin parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.letsmidi.monsys.protocol.push.Push.AdminClientLogin) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string account = 1;
      private java.lang.Object account_ = "";
      /**
       * <code>required string account = 1;</code>
       */
      public boolean hasAccount() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string account = 1;</code>
       */
      public java.lang.String getAccount() {
        java.lang.Object ref = account_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          account_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string account = 1;</code>
       */
      public com.google.protobuf.ByteString
          getAccountBytes() {
        java.lang.Object ref = account_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          account_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string account = 1;</code>
       */
      public Builder setAccount(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        account_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string account = 1;</code>
       */
      public Builder clearAccount() {
        bitField0_ = (bitField0_ & ~0x00000001);
        account_ = getDefaultInstance().getAccount();
        onChanged();
        return this;
      }
      /**
       * <code>required string account = 1;</code>
       */
      public Builder setAccountBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        account_ = value;
        onChanged();
        return this;
      }

      // required string password = 2;
      private java.lang.Object password_ = "";
      /**
       * <code>required string password = 2;</code>
       */
      public boolean hasPassword() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string password = 2;</code>
       */
      public java.lang.String getPassword() {
        java.lang.Object ref = password_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          password_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string password = 2;</code>
       */
      public com.google.protobuf.ByteString
          getPasswordBytes() {
        java.lang.Object ref = password_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          password_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string password = 2;</code>
       */
      public Builder setPassword(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        password_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string password = 2;</code>
       */
      public Builder clearPassword() {
        bitField0_ = (bitField0_ & ~0x00000002);
        password_ = getDefaultInstance().getPassword();
        onChanged();
        return this;
      }
      /**
       * <code>required string password = 2;</code>
       */
      public Builder setPasswordBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        password_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.letsmidi.monsys.protocol.push.AdminClientLogin)
    }

    static {
      defaultInstance = new AdminClientLogin(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.letsmidi.monsys.protocol.push.AdminClientLogin)
  }

  public interface AdminClientLoginRspOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 code = 1;
    /**
     * <code>required int32 code = 1;</code>
     */
    boolean hasCode();
    /**
     * <code>required int32 code = 1;</code>
     */
    int getCode();

    // repeated .com.letsmidi.monsys.protocol.push.FGatewayInfo fgw_infos = 2;
    /**
     * <code>repeated .com.letsmidi.monsys.protocol.push.FGatewayInfo fgw_infos = 2;</code>
     */
    java.util.List<com.letsmidi.monsys.protocol.push.Push.FGatewayInfo> 
        getFgwInfosList();
    /**
     * <code>repeated .com.letsmidi.monsys.protocol.push.FGatewayInfo fgw_infos = 2;</code>
     */
    com.letsmidi.monsys.protocol.push.Push.FGatewayInfo getFgwInfos(int index);
    /**
     * <code>repeated .com.letsmidi.monsys.protocol.push.FGatewayInfo fgw_infos = 2;</code>
     */
    int getFgwInfosCount();
    /**
     * <code>repeated .com.letsmidi.monsys.protocol.push.FGatewayInfo fgw_infos = 2;</code>
     */
    java.util.List<? extends com.letsmidi.monsys.protocol.push.Push.FGatewayInfoOrBuilder> 
        getFgwInfosOrBuilderList();
    /**
     * <code>repeated .com.letsmidi.monsys.protocol.push.FGatewayInfo fgw_infos = 2;</code>
     */
    com.letsmidi.monsys.protocol.push.Push.FGatewayInfoOrBuilder getFgwInfosOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code com.letsmidi.monsys.protocol.push.AdminClientLoginRsp}
   */
  public static final class AdminClientLoginRsp extends
      com.google.protobuf.GeneratedMessage
      implements AdminClientLoginRspOrBuilder {
    // Use AdminClientLoginRsp.newBuilder() to construct.
    private AdminClientLoginRsp(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private AdminClientLoginRsp(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final AdminClientLoginRsp defaultInstance;
    public static AdminClientLoginRsp getDefaultInstance() {
      return defaultInstance;
    }

    public AdminClientLoginRsp getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private AdminClientLoginRsp(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              code_ = input.readInt32();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                fgwInfos_ = new java.util.ArrayList<com.letsmidi.monsys.protocol.push.Push.FGatewayInfo>();
                mutable_bitField0_ |= 0x00000002;
              }
              fgwInfos_.add(input.readMessage(com.letsmidi.monsys.protocol.push.Push.FGatewayInfo.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          fgwInfos_ = java.util.Collections.unmodifiableList(fgwInfos_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.letsmidi.monsys.protocol.push.Push.internal_static_com_letsmidi_monsys_protocol_push_AdminClientLoginRsp_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.letsmidi.monsys.protocol.push.Push.internal_static_com_letsmidi_monsys_protocol_push_AdminClientLoginRsp_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.letsmidi.monsys.protocol.push.Push.AdminClientLoginRsp.class, com.letsmidi.monsys.protocol.push.Push.AdminClientLoginRsp.Builder.class);
    }

    public static com.google.protobuf.Parser<AdminClientLoginRsp> PARSER =
        new com.google.protobuf.AbstractParser<AdminClientLoginRsp>() {
      public AdminClientLoginRsp parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new AdminClientLoginRsp(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<AdminClientLoginRsp> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 code = 1;
    public static final int CODE_FIELD_NUMBER = 1;
    private int code_;
    /**
     * <code>required int32 code = 1;</code>
     */
    public boolean hasCode() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 code = 1;</code>
     */
    public int getCode() {
      return code_;
    }

    // repeated .com.letsmidi.monsys.protocol.push.FGatewayInfo fgw_infos = 2;
    public static final int FGW_INFOS_FIELD_NUMBER = 2;
    private java.util.List<com.letsmidi.monsys.protocol.push.Push.FGatewayInfo> fgwInfos_;
    /**
     * <code>repeated .com.letsmidi.monsys.protocol.push.FGatewayInfo fgw_infos = 2;</code>
     */
    public java.util.List<com.letsmidi.monsys.protocol.push.Push.FGatewayInfo> getFgwInfosList() {
      return fgwInfos_;
    }
    /**
     * <code>repeated .com.letsmidi.monsys.protocol.push.FGatewayInfo fgw_infos = 2;</code>
     */
    public java.util.List<? extends com.letsmidi.monsys.protocol.push.Push.FGatewayInfoOrBuilder> 
        getFgwInfosOrBuilderList() {
      return fgwInfos_;
    }
    /**
     * <code>repeated .com.letsmidi.monsys.protocol.push.FGatewayInfo fgw_infos = 2;</code>
     */
    public int getFgwInfosCount() {
      return fgwInfos_.size();
    }
    /**
     * <code>repeated .com.letsmidi.monsys.protocol.push.FGatewayInfo fgw_infos = 2;</code>
     */
    public com.letsmidi.monsys.protocol.push.Push.FGatewayInfo getFgwInfos(int index) {
      return fgwInfos_.get(index);
    }
    /**
     * <code>repeated .com.letsmidi.monsys.protocol.push.FGatewayInfo fgw_infos = 2;</code>
     */
    public com.letsmidi.monsys.protocol.push.Push.FGatewayInfoOrBuilder getFgwInfosOrBuilder(
        int index) {
      return fgwInfos_.get(index);
    }

    private void initFields() {
      code_ = 0;
      fgwInfos_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasCode()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getFgwInfosCount(); i++) {
        if (!getFgwInfos(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, code_);
      }
      for (int i = 0; i < fgwInfos_.size(); i++) {
        output.writeMessage(2, fgwInfos_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, code_);
      }
      for (int i = 0; i < fgwInfos_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, fgwInfos_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.letsmidi.monsys.protocol.push.Push.AdminClientLoginRsp parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.letsmidi.monsys.protocol.push.Push.AdminClientLoginRsp parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.letsmidi.monsys.protocol.push.Push.AdminClientLoginRsp parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.letsmidi.monsys.protocol.push.Push.AdminClientLoginRsp parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.letsmidi.monsys.protocol.push.Push.AdminClientLoginRsp parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.letsmidi.monsys.protocol.push.Push.AdminClientLoginRsp parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.letsmidi.monsys.protocol.push.Push.AdminClientLoginRsp parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.letsmidi.monsys.protocol.push.Push.AdminClientLoginRsp parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.letsmidi.monsys.protocol.push.Push.AdminClientLoginRsp parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.letsmidi.monsys.protocol.push.Push.AdminClientLoginRsp parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.letsmidi.monsys.protocol.push.Push.AdminClientLoginRsp prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.letsmidi.monsys.protocol.push.AdminClientLoginRsp}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.letsmidi.monsys.protocol.push.Push.AdminClientLoginRspOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.letsmidi.monsys.protocol.push.Push.internal_static_com_letsmidi_monsys_protocol_push_AdminClientLoginRsp_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.letsmidi.monsys.protocol.push.Push.internal_static_com_letsmidi_monsys_protocol_push_AdminClientLoginRsp_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.letsmidi.monsys.protocol.push.Push.AdminClientLoginRsp.class, com.letsmidi.monsys.protocol.push.Push.AdminClientLoginRsp.Builder.class);
      }

      // Construct using com.letsmidi.monsys.protocol.push.Push.AdminClientLoginRsp.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getFgwInfosFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        code_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (fgwInfosBuilder_ == null) {
          fgwInfos_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          fgwInfosBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.letsmidi.monsys.protocol.push.Push.internal_static_com_letsmidi_monsys_protocol_push_AdminClientLoginRsp_descriptor;
      }

      public com.letsmidi.monsys.protocol.push.Push.AdminClientLoginRsp getDefaultInstanceForType() {
        return com.letsmidi.monsys.protocol.push.Push.AdminClientLoginRsp.getDefaultInstance();
      }

      public com.letsmidi.monsys.protocol.push.Push.AdminClientLoginRsp build() {
        com.letsmidi.monsys.protocol.push.Push.AdminClientLoginRsp result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.letsmidi.monsys.protocol.push.Push.AdminClientLoginRsp buildPartial() {
        com.letsmidi.monsys.protocol.push.Push.AdminClientLoginRsp result = new com.letsmidi.monsys.protocol.push.Push.AdminClientLoginRsp(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.code_ = code_;
        if (fgwInfosBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            fgwInfos_ = java.util.Collections.unmodifiableList(fgwInfos_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.fgwInfos_ = fgwInfos_;
        } else {
          result.fgwInfos_ = fgwInfosBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.letsmidi.monsys.protocol.push.Push.AdminClientLoginRsp) {
          return mergeFrom((com.letsmidi.monsys.protocol.push.Push.AdminClientLoginRsp)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.letsmidi.monsys.protocol.push.Push.AdminClientLoginRsp other) {
        if (other == com.letsmidi.monsys.protocol.push.Push.AdminClientLoginRsp.getDefaultInstance()) return this;
        if (other.hasCode()) {
          setCode(other.getCode());
        }
        if (fgwInfosBuilder_ == null) {
          if (!other.fgwInfos_.isEmpty()) {
            if (fgwInfos_.isEmpty()) {
              fgwInfos_ = other.fgwInfos_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureFgwInfosIsMutable();
              fgwInfos_.addAll(other.fgwInfos_);
            }
            onChanged();
          }
        } else {
          if (!other.fgwInfos_.isEmpty()) {
            if (fgwInfosBuilder_.isEmpty()) {
              fgwInfosBuilder_.dispose();
              fgwInfosBuilder_ = null;
              fgwInfos_ = other.fgwInfos_;
              bitField0_ = (bitField0_ & ~0x00000002);
              fgwInfosBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getFgwInfosFieldBuilder() : null;
            } else {
              fgwInfosBuilder_.addAllMessages(other.fgwInfos_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasCode()) {
          
          return false;
        }
        for (int i = 0; i < getFgwInfosCount(); i++) {
          if (!getFgwInfos(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.letsmidi.monsys.protocol.push.Push.AdminClientLoginRsp parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.letsmidi.monsys.protocol.push.Push.AdminClientLoginRsp) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 code = 1;
      private int code_ ;
      /**
       * <code>required int32 code = 1;</code>
       */
      public boolean hasCode() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 code = 1;</code>
       */
      public int getCode() {
        return code_;
      }
      /**
       * <code>required int32 code = 1;</code>
       */
      public Builder setCode(int value) {
        bitField0_ |= 0x00000001;
        code_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 code = 1;</code>
       */
      public Builder clearCode() {
        bitField0_ = (bitField0_ & ~0x00000001);
        code_ = 0;
        onChanged();
        return this;
      }

      // repeated .com.letsmidi.monsys.protocol.push.FGatewayInfo fgw_infos = 2;
      private java.util.List<com.letsmidi.monsys.protocol.push.Push.FGatewayInfo> fgwInfos_ =
        java.util.Collections.emptyList();
      private void ensureFgwInfosIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          fgwInfos_ = new java.util.ArrayList<com.letsmidi.monsys.protocol.push.Push.FGatewayInfo>(fgwInfos_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.letsmidi.monsys.protocol.push.Push.FGatewayInfo, com.letsmidi.monsys.protocol.push.Push.FGatewayInfo.Builder, com.letsmidi.monsys.protocol.push.Push.FGatewayInfoOrBuilder> fgwInfosBuilder_;

      /**
       * <code>repeated .com.letsmidi.monsys.protocol.push.FGatewayInfo fgw_infos = 2;</code>
       */
      public java.util.List<com.letsmidi.monsys.protocol.push.Push.FGatewayInfo> getFgwInfosList() {
        if (fgwInfosBuilder_ == null) {
          return java.util.Collections.unmodifiableList(fgwInfos_);
        } else {
          return fgwInfosBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.letsmidi.monsys.protocol.push.FGatewayInfo fgw_infos = 2;</code>
       */
      public int getFgwInfosCount() {
        if (fgwInfosBuilder_ == null) {
          return fgwInfos_.size();
        } else {
          return fgwInfosBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.letsmidi.monsys.protocol.push.FGatewayInfo fgw_infos = 2;</code>
       */
      public com.letsmidi.monsys.protocol.push.Push.FGatewayInfo getFgwInfos(int index) {
        if (fgwInfosBuilder_ == null) {
          return fgwInfos_.get(index);
        } else {
          return fgwInfosBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.letsmidi.monsys.protocol.push.FGatewayInfo fgw_infos = 2;</code>
       */
      public Builder setFgwInfos(
          int index, com.letsmidi.monsys.protocol.push.Push.FGatewayInfo value) {
        if (fgwInfosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFgwInfosIsMutable();
          fgwInfos_.set(index, value);
          onChanged();
        } else {
          fgwInfosBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.letsmidi.monsys.protocol.push.FGatewayInfo fgw_infos = 2;</code>
       */
      public Builder setFgwInfos(
          int index, com.letsmidi.monsys.protocol.push.Push.FGatewayInfo.Builder builderForValue) {
        if (fgwInfosBuilder_ == null) {
          ensureFgwInfosIsMutable();
          fgwInfos_.set(index, builderForValue.build());
          onChanged();
        } else {
          fgwInfosBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.letsmidi.monsys.protocol.push.FGatewayInfo fgw_infos = 2;</code>
       */
      public Builder addFgwInfos(com.letsmidi.monsys.protocol.push.Push.FGatewayInfo value) {
        if (fgwInfosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFgwInfosIsMutable();
          fgwInfos_.add(value);
          onChanged();
        } else {
          fgwInfosBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.letsmidi.monsys.protocol.push.FGatewayInfo fgw_infos = 2;</code>
       */
      public Builder addFgwInfos(
          int index, com.letsmidi.monsys.protocol.push.Push.FGatewayInfo value) {
        if (fgwInfosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFgwInfosIsMutable();
          fgwInfos_.add(index, value);
          onChanged();
        } else {
          fgwInfosBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.letsmidi.monsys.protocol.push.FGatewayInfo fgw_infos = 2;</code>
       */
      public Builder addFgwInfos(
          com.letsmidi.monsys.protocol.push.Push.FGatewayInfo.Builder builderForValue) {
        if (fgwInfosBuilder_ == null) {
          ensureFgwInfosIsMutable();
          fgwInfos_.add(builderForValue.build());
          onChanged();
        } else {
          fgwInfosBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.letsmidi.monsys.protocol.push.FGatewayInfo fgw_infos = 2;</code>
       */
      public Builder addFgwInfos(
          int index, com.letsmidi.monsys.protocol.push.Push.FGatewayInfo.Builder builderForValue) {
        if (fgwInfosBuilder_ == null) {
          ensureFgwInfosIsMutable();
          fgwInfos_.add(index, builderForValue.build());
          onChanged();
        } else {
          fgwInfosBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.letsmidi.monsys.protocol.push.FGatewayInfo fgw_infos = 2;</code>
       */
      public Builder addAllFgwInfos(
          java.lang.Iterable<? extends com.letsmidi.monsys.protocol.push.Push.FGatewayInfo> values) {
        if (fgwInfosBuilder_ == null) {
          ensureFgwInfosIsMutable();
          super.addAll(values, fgwInfos_);
          onChanged();
        } else {
          fgwInfosBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.letsmidi.monsys.protocol.push.FGatewayInfo fgw_infos = 2;</code>
       */
      public Builder clearFgwInfos() {
        if (fgwInfosBuilder_ == null) {
          fgwInfos_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          fgwInfosBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.letsmidi.monsys.protocol.push.FGatewayInfo fgw_infos = 2;</code>
       */
      public Builder removeFgwInfos(int index) {
        if (fgwInfosBuilder_ == null) {
          ensureFgwInfosIsMutable();
          fgwInfos_.remove(index);
          onChanged();
        } else {
          fgwInfosBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.letsmidi.monsys.protocol.push.FGatewayInfo fgw_infos = 2;</code>
       */
      public com.letsmidi.monsys.protocol.push.Push.FGatewayInfo.Builder getFgwInfosBuilder(
          int index) {
        return getFgwInfosFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.letsmidi.monsys.protocol.push.FGatewayInfo fgw_infos = 2;</code>
       */
      public com.letsmidi.monsys.protocol.push.Push.FGatewayInfoOrBuilder getFgwInfosOrBuilder(
          int index) {
        if (fgwInfosBuilder_ == null) {
          return fgwInfos_.get(index);  } else {
          return fgwInfosBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.letsmidi.monsys.protocol.push.FGatewayInfo fgw_infos = 2;</code>
       */
      public java.util.List<? extends com.letsmidi.monsys.protocol.push.Push.FGatewayInfoOrBuilder> 
           getFgwInfosOrBuilderList() {
        if (fgwInfosBuilder_ != null) {
          return fgwInfosBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(fgwInfos_);
        }
      }
      /**
       * <code>repeated .com.letsmidi.monsys.protocol.push.FGatewayInfo fgw_infos = 2;</code>
       */
      public com.letsmidi.monsys.protocol.push.Push.FGatewayInfo.Builder addFgwInfosBuilder() {
        return getFgwInfosFieldBuilder().addBuilder(
            com.letsmidi.monsys.protocol.push.Push.FGatewayInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .com.letsmidi.monsys.protocol.push.FGatewayInfo fgw_infos = 2;</code>
       */
      public com.letsmidi.monsys.protocol.push.Push.FGatewayInfo.Builder addFgwInfosBuilder(
          int index) {
        return getFgwInfosFieldBuilder().addBuilder(
            index, com.letsmidi.monsys.protocol.push.Push.FGatewayInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .com.letsmidi.monsys.protocol.push.FGatewayInfo fgw_infos = 2;</code>
       */
      public java.util.List<com.letsmidi.monsys.protocol.push.Push.FGatewayInfo.Builder> 
           getFgwInfosBuilderList() {
        return getFgwInfosFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.letsmidi.monsys.protocol.push.Push.FGatewayInfo, com.letsmidi.monsys.protocol.push.Push.FGatewayInfo.Builder, com.letsmidi.monsys.protocol.push.Push.FGatewayInfoOrBuilder> 
          getFgwInfosFieldBuilder() {
        if (fgwInfosBuilder_ == null) {
          fgwInfosBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.letsmidi.monsys.protocol.push.Push.FGatewayInfo, com.letsmidi.monsys.protocol.push.Push.FGatewayInfo.Builder, com.letsmidi.monsys.protocol.push.Push.FGatewayInfoOrBuilder>(
                  fgwInfos_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          fgwInfos_ = null;
        }
        return fgwInfosBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:com.letsmidi.monsys.protocol.push.AdminClientLoginRsp)
    }

    static {
      defaultInstance = new AdminClientLoginRsp(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.letsmidi.monsys.protocol.push.AdminClientLoginRsp)
  }

  public interface BindOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string device_id = 1;
    /**
     * <code>required string device_id = 1;</code>
     */
    boolean hasDeviceId();
    /**
     * <code>required string device_id = 1;</code>
     */
    java.lang.String getDeviceId();
    /**
     * <code>required string device_id = 1;</code>
     */
    com.google.protobuf.ByteString
        getDeviceIdBytes();
  }
  /**
   * Protobuf type {@code com.letsmidi.monsys.protocol.push.Bind}
   */
  public static final class Bind extends
      com.google.protobuf.GeneratedMessage
      implements BindOrBuilder {
    // Use Bind.newBuilder() to construct.
    private Bind(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Bind(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Bind defaultInstance;
    public static Bind getDefaultInstance() {
      return defaultInstance;
    }

    public Bind getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Bind(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              deviceId_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.letsmidi.monsys.protocol.push.Push.internal_static_com_letsmidi_monsys_protocol_push_Bind_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.letsmidi.monsys.protocol.push.Push.internal_static_com_letsmidi_monsys_protocol_push_Bind_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.letsmidi.monsys.protocol.push.Push.Bind.class, com.letsmidi.monsys.protocol.push.Push.Bind.Builder.class);
    }

    public static com.google.protobuf.Parser<Bind> PARSER =
        new com.google.protobuf.AbstractParser<Bind>() {
      public Bind parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Bind(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Bind> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string device_id = 1;
    public static final int DEVICE_ID_FIELD_NUMBER = 1;
    private java.lang.Object deviceId_;
    /**
     * <code>required string device_id = 1;</code>
     */
    public boolean hasDeviceId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string device_id = 1;</code>
     */
    public java.lang.String getDeviceId() {
      java.lang.Object ref = deviceId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          deviceId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string device_id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getDeviceIdBytes() {
      java.lang.Object ref = deviceId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        deviceId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      deviceId_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasDeviceId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getDeviceIdBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getDeviceIdBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.letsmidi.monsys.protocol.push.Push.Bind parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.letsmidi.monsys.protocol.push.Push.Bind parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.letsmidi.monsys.protocol.push.Push.Bind parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.letsmidi.monsys.protocol.push.Push.Bind parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.letsmidi.monsys.protocol.push.Push.Bind parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.letsmidi.monsys.protocol.push.Push.Bind parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.letsmidi.monsys.protocol.push.Push.Bind parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.letsmidi.monsys.protocol.push.Push.Bind parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.letsmidi.monsys.protocol.push.Push.Bind parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.letsmidi.monsys.protocol.push.Push.Bind parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.letsmidi.monsys.protocol.push.Push.Bind prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.letsmidi.monsys.protocol.push.Bind}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.letsmidi.monsys.protocol.push.Push.BindOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.letsmidi.monsys.protocol.push.Push.internal_static_com_letsmidi_monsys_protocol_push_Bind_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.letsmidi.monsys.protocol.push.Push.internal_static_com_letsmidi_monsys_protocol_push_Bind_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.letsmidi.monsys.protocol.push.Push.Bind.class, com.letsmidi.monsys.protocol.push.Push.Bind.Builder.class);
      }

      // Construct using com.letsmidi.monsys.protocol.push.Push.Bind.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        deviceId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.letsmidi.monsys.protocol.push.Push.internal_static_com_letsmidi_monsys_protocol_push_Bind_descriptor;
      }

      public com.letsmidi.monsys.protocol.push.Push.Bind getDefaultInstanceForType() {
        return com.letsmidi.monsys.protocol.push.Push.Bind.getDefaultInstance();
      }

      public com.letsmidi.monsys.protocol.push.Push.Bind build() {
        com.letsmidi.monsys.protocol.push.Push.Bind result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.letsmidi.monsys.protocol.push.Push.Bind buildPartial() {
        com.letsmidi.monsys.protocol.push.Push.Bind result = new com.letsmidi.monsys.protocol.push.Push.Bind(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.deviceId_ = deviceId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.letsmidi.monsys.protocol.push.Push.Bind) {
          return mergeFrom((com.letsmidi.monsys.protocol.push.Push.Bind)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.letsmidi.monsys.protocol.push.Push.Bind other) {
        if (other == com.letsmidi.monsys.protocol.push.Push.Bind.getDefaultInstance()) return this;
        if (other.hasDeviceId()) {
          bitField0_ |= 0x00000001;
          deviceId_ = other.deviceId_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasDeviceId()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.letsmidi.monsys.protocol.push.Push.Bind parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.letsmidi.monsys.protocol.push.Push.Bind) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string device_id = 1;
      private java.lang.Object deviceId_ = "";
      /**
       * <code>required string device_id = 1;</code>
       */
      public boolean hasDeviceId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string device_id = 1;</code>
       */
      public java.lang.String getDeviceId() {
        java.lang.Object ref = deviceId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          deviceId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string device_id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getDeviceIdBytes() {
        java.lang.Object ref = deviceId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          deviceId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string device_id = 1;</code>
       */
      public Builder setDeviceId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        deviceId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string device_id = 1;</code>
       */
      public Builder clearDeviceId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        deviceId_ = getDefaultInstance().getDeviceId();
        onChanged();
        return this;
      }
      /**
       * <code>required string device_id = 1;</code>
       */
      public Builder setDeviceIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        deviceId_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.letsmidi.monsys.protocol.push.Bind)
    }

    static {
      defaultInstance = new Bind(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.letsmidi.monsys.protocol.push.Bind)
  }

  public interface BindRspOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 code = 1;
    /**
     * <code>required int32 code = 1;</code>
     */
    boolean hasCode();
    /**
     * <code>required int32 code = 1;</code>
     */
    int getCode();
  }
  /**
   * Protobuf type {@code com.letsmidi.monsys.protocol.push.BindRsp}
   */
  public static final class BindRsp extends
      com.google.protobuf.GeneratedMessage
      implements BindRspOrBuilder {
    // Use BindRsp.newBuilder() to construct.
    private BindRsp(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private BindRsp(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final BindRsp defaultInstance;
    public static BindRsp getDefaultInstance() {
      return defaultInstance;
    }

    public BindRsp getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private BindRsp(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              code_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.letsmidi.monsys.protocol.push.Push.internal_static_com_letsmidi_monsys_protocol_push_BindRsp_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.letsmidi.monsys.protocol.push.Push.internal_static_com_letsmidi_monsys_protocol_push_BindRsp_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.letsmidi.monsys.protocol.push.Push.BindRsp.class, com.letsmidi.monsys.protocol.push.Push.BindRsp.Builder.class);
    }

    public static com.google.protobuf.Parser<BindRsp> PARSER =
        new com.google.protobuf.AbstractParser<BindRsp>() {
      public BindRsp parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new BindRsp(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<BindRsp> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 code = 1;
    public static final int CODE_FIELD_NUMBER = 1;
    private int code_;
    /**
     * <code>required int32 code = 1;</code>
     */
    public boolean hasCode() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 code = 1;</code>
     */
    public int getCode() {
      return code_;
    }

    private void initFields() {
      code_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasCode()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, code_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, code_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.letsmidi.monsys.protocol.push.Push.BindRsp parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.letsmidi.monsys.protocol.push.Push.BindRsp parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.letsmidi.monsys.protocol.push.Push.BindRsp parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.letsmidi.monsys.protocol.push.Push.BindRsp parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.letsmidi.monsys.protocol.push.Push.BindRsp parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.letsmidi.monsys.protocol.push.Push.BindRsp parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.letsmidi.monsys.protocol.push.Push.BindRsp parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.letsmidi.monsys.protocol.push.Push.BindRsp parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.letsmidi.monsys.protocol.push.Push.BindRsp parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.letsmidi.monsys.protocol.push.Push.BindRsp parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.letsmidi.monsys.protocol.push.Push.BindRsp prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.letsmidi.monsys.protocol.push.BindRsp}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.letsmidi.monsys.protocol.push.Push.BindRspOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.letsmidi.monsys.protocol.push.Push.internal_static_com_letsmidi_monsys_protocol_push_BindRsp_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.letsmidi.monsys.protocol.push.Push.internal_static_com_letsmidi_monsys_protocol_push_BindRsp_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.letsmidi.monsys.protocol.push.Push.BindRsp.class, com.letsmidi.monsys.protocol.push.Push.BindRsp.Builder.class);
      }

      // Construct using com.letsmidi.monsys.protocol.push.Push.BindRsp.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        code_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.letsmidi.monsys.protocol.push.Push.internal_static_com_letsmidi_monsys_protocol_push_BindRsp_descriptor;
      }

      public com.letsmidi.monsys.protocol.push.Push.BindRsp getDefaultInstanceForType() {
        return com.letsmidi.monsys.protocol.push.Push.BindRsp.getDefaultInstance();
      }

      public com.letsmidi.monsys.protocol.push.Push.BindRsp build() {
        com.letsmidi.monsys.protocol.push.Push.BindRsp result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.letsmidi.monsys.protocol.push.Push.BindRsp buildPartial() {
        com.letsmidi.monsys.protocol.push.Push.BindRsp result = new com.letsmidi.monsys.protocol.push.Push.BindRsp(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.code_ = code_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.letsmidi.monsys.protocol.push.Push.BindRsp) {
          return mergeFrom((com.letsmidi.monsys.protocol.push.Push.BindRsp)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.letsmidi.monsys.protocol.push.Push.BindRsp other) {
        if (other == com.letsmidi.monsys.protocol.push.Push.BindRsp.getDefaultInstance()) return this;
        if (other.hasCode()) {
          setCode(other.getCode());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasCode()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.letsmidi.monsys.protocol.push.Push.BindRsp parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.letsmidi.monsys.protocol.push.Push.BindRsp) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 code = 1;
      private int code_ ;
      /**
       * <code>required int32 code = 1;</code>
       */
      public boolean hasCode() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 code = 1;</code>
       */
      public int getCode() {
        return code_;
      }
      /**
       * <code>required int32 code = 1;</code>
       */
      public Builder setCode(int value) {
        bitField0_ |= 0x00000001;
        code_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 code = 1;</code>
       */
      public Builder clearCode() {
        bitField0_ = (bitField0_ & ~0x00000001);
        code_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.letsmidi.monsys.protocol.push.BindRsp)
    }

    static {
      defaultInstance = new BindRsp(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.letsmidi.monsys.protocol.push.BindRsp)
  }

  public interface ConnectOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string device_id = 1;
    /**
     * <code>required string device_id = 1;</code>
     */
    boolean hasDeviceId();
    /**
     * <code>required string device_id = 1;</code>
     */
    java.lang.String getDeviceId();
    /**
     * <code>required string device_id = 1;</code>
     */
    com.google.protobuf.ByteString
        getDeviceIdBytes();
  }
  /**
   * Protobuf type {@code com.letsmidi.monsys.protocol.push.Connect}
   */
  public static final class Connect extends
      com.google.protobuf.GeneratedMessage
      implements ConnectOrBuilder {
    // Use Connect.newBuilder() to construct.
    private Connect(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Connect(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Connect defaultInstance;
    public static Connect getDefaultInstance() {
      return defaultInstance;
    }

    public Connect getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Connect(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              deviceId_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.letsmidi.monsys.protocol.push.Push.internal_static_com_letsmidi_monsys_protocol_push_Connect_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.letsmidi.monsys.protocol.push.Push.internal_static_com_letsmidi_monsys_protocol_push_Connect_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.letsmidi.monsys.protocol.push.Push.Connect.class, com.letsmidi.monsys.protocol.push.Push.Connect.Builder.class);
    }

    public static com.google.protobuf.Parser<Connect> PARSER =
        new com.google.protobuf.AbstractParser<Connect>() {
      public Connect parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Connect(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Connect> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string device_id = 1;
    public static final int DEVICE_ID_FIELD_NUMBER = 1;
    private java.lang.Object deviceId_;
    /**
     * <code>required string device_id = 1;</code>
     */
    public boolean hasDeviceId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string device_id = 1;</code>
     */
    public java.lang.String getDeviceId() {
      java.lang.Object ref = deviceId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          deviceId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string device_id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getDeviceIdBytes() {
      java.lang.Object ref = deviceId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        deviceId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      deviceId_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasDeviceId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getDeviceIdBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getDeviceIdBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.letsmidi.monsys.protocol.push.Push.Connect parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.letsmidi.monsys.protocol.push.Push.Connect parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.letsmidi.monsys.protocol.push.Push.Connect parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.letsmidi.monsys.protocol.push.Push.Connect parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.letsmidi.monsys.protocol.push.Push.Connect parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.letsmidi.monsys.protocol.push.Push.Connect parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.letsmidi.monsys.protocol.push.Push.Connect parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.letsmidi.monsys.protocol.push.Push.Connect parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.letsmidi.monsys.protocol.push.Push.Connect parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.letsmidi.monsys.protocol.push.Push.Connect parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.letsmidi.monsys.protocol.push.Push.Connect prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.letsmidi.monsys.protocol.push.Connect}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.letsmidi.monsys.protocol.push.Push.ConnectOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.letsmidi.monsys.protocol.push.Push.internal_static_com_letsmidi_monsys_protocol_push_Connect_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.letsmidi.monsys.protocol.push.Push.internal_static_com_letsmidi_monsys_protocol_push_Connect_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.letsmidi.monsys.protocol.push.Push.Connect.class, com.letsmidi.monsys.protocol.push.Push.Connect.Builder.class);
      }

      // Construct using com.letsmidi.monsys.protocol.push.Push.Connect.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        deviceId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.letsmidi.monsys.protocol.push.Push.internal_static_com_letsmidi_monsys_protocol_push_Connect_descriptor;
      }

      public com.letsmidi.monsys.protocol.push.Push.Connect getDefaultInstanceForType() {
        return com.letsmidi.monsys.protocol.push.Push.Connect.getDefaultInstance();
      }

      public com.letsmidi.monsys.protocol.push.Push.Connect build() {
        com.letsmidi.monsys.protocol.push.Push.Connect result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.letsmidi.monsys.protocol.push.Push.Connect buildPartial() {
        com.letsmidi.monsys.protocol.push.Push.Connect result = new com.letsmidi.monsys.protocol.push.Push.Connect(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.deviceId_ = deviceId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.letsmidi.monsys.protocol.push.Push.Connect) {
          return mergeFrom((com.letsmidi.monsys.protocol.push.Push.Connect)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.letsmidi.monsys.protocol.push.Push.Connect other) {
        if (other == com.letsmidi.monsys.protocol.push.Push.Connect.getDefaultInstance()) return this;
        if (other.hasDeviceId()) {
          bitField0_ |= 0x00000001;
          deviceId_ = other.deviceId_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasDeviceId()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.letsmidi.monsys.protocol.push.Push.Connect parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.letsmidi.monsys.protocol.push.Push.Connect) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string device_id = 1;
      private java.lang.Object deviceId_ = "";
      /**
       * <code>required string device_id = 1;</code>
       */
      public boolean hasDeviceId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string device_id = 1;</code>
       */
      public java.lang.String getDeviceId() {
        java.lang.Object ref = deviceId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          deviceId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string device_id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getDeviceIdBytes() {
        java.lang.Object ref = deviceId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          deviceId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string device_id = 1;</code>
       */
      public Builder setDeviceId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        deviceId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string device_id = 1;</code>
       */
      public Builder clearDeviceId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        deviceId_ = getDefaultInstance().getDeviceId();
        onChanged();
        return this;
      }
      /**
       * <code>required string device_id = 1;</code>
       */
      public Builder setDeviceIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        deviceId_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.letsmidi.monsys.protocol.push.Connect)
    }

    static {
      defaultInstance = new Connect(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.letsmidi.monsys.protocol.push.Connect)
  }

  public interface ConnectRspOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 code = 1;
    /**
     * <code>required int32 code = 1;</code>
     */
    boolean hasCode();
    /**
     * <code>required int32 code = 1;</code>
     */
    int getCode();
  }
  /**
   * Protobuf type {@code com.letsmidi.monsys.protocol.push.ConnectRsp}
   */
  public static final class ConnectRsp extends
      com.google.protobuf.GeneratedMessage
      implements ConnectRspOrBuilder {
    // Use ConnectRsp.newBuilder() to construct.
    private ConnectRsp(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ConnectRsp(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ConnectRsp defaultInstance;
    public static ConnectRsp getDefaultInstance() {
      return defaultInstance;
    }

    public ConnectRsp getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ConnectRsp(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              code_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.letsmidi.monsys.protocol.push.Push.internal_static_com_letsmidi_monsys_protocol_push_ConnectRsp_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.letsmidi.monsys.protocol.push.Push.internal_static_com_letsmidi_monsys_protocol_push_ConnectRsp_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.letsmidi.monsys.protocol.push.Push.ConnectRsp.class, com.letsmidi.monsys.protocol.push.Push.ConnectRsp.Builder.class);
    }

    public static com.google.protobuf.Parser<ConnectRsp> PARSER =
        new com.google.protobuf.AbstractParser<ConnectRsp>() {
      public ConnectRsp parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ConnectRsp(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ConnectRsp> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 code = 1;
    public static final int CODE_FIELD_NUMBER = 1;
    private int code_;
    /**
     * <code>required int32 code = 1;</code>
     */
    public boolean hasCode() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 code = 1;</code>
     */
    public int getCode() {
      return code_;
    }

    private void initFields() {
      code_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasCode()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, code_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, code_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.letsmidi.monsys.protocol.push.Push.ConnectRsp parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.letsmidi.monsys.protocol.push.Push.ConnectRsp parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.letsmidi.monsys.protocol.push.Push.ConnectRsp parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.letsmidi.monsys.protocol.push.Push.ConnectRsp parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.letsmidi.monsys.protocol.push.Push.ConnectRsp parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.letsmidi.monsys.protocol.push.Push.ConnectRsp parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.letsmidi.monsys.protocol.push.Push.ConnectRsp parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.letsmidi.monsys.protocol.push.Push.ConnectRsp parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.letsmidi.monsys.protocol.push.Push.ConnectRsp parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.letsmidi.monsys.protocol.push.Push.ConnectRsp parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.letsmidi.monsys.protocol.push.Push.ConnectRsp prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.letsmidi.monsys.protocol.push.ConnectRsp}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.letsmidi.monsys.protocol.push.Push.ConnectRspOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.letsmidi.monsys.protocol.push.Push.internal_static_com_letsmidi_monsys_protocol_push_ConnectRsp_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.letsmidi.monsys.protocol.push.Push.internal_static_com_letsmidi_monsys_protocol_push_ConnectRsp_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.letsmidi.monsys.protocol.push.Push.ConnectRsp.class, com.letsmidi.monsys.protocol.push.Push.ConnectRsp.Builder.class);
      }

      // Construct using com.letsmidi.monsys.protocol.push.Push.ConnectRsp.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        code_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.letsmidi.monsys.protocol.push.Push.internal_static_com_letsmidi_monsys_protocol_push_ConnectRsp_descriptor;
      }

      public com.letsmidi.monsys.protocol.push.Push.ConnectRsp getDefaultInstanceForType() {
        return com.letsmidi.monsys.protocol.push.Push.ConnectRsp.getDefaultInstance();
      }

      public com.letsmidi.monsys.protocol.push.Push.ConnectRsp build() {
        com.letsmidi.monsys.protocol.push.Push.ConnectRsp result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.letsmidi.monsys.protocol.push.Push.ConnectRsp buildPartial() {
        com.letsmidi.monsys.protocol.push.Push.ConnectRsp result = new com.letsmidi.monsys.protocol.push.Push.ConnectRsp(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.code_ = code_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.letsmidi.monsys.protocol.push.Push.ConnectRsp) {
          return mergeFrom((com.letsmidi.monsys.protocol.push.Push.ConnectRsp)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.letsmidi.monsys.protocol.push.Push.ConnectRsp other) {
        if (other == com.letsmidi.monsys.protocol.push.Push.ConnectRsp.getDefaultInstance()) return this;
        if (other.hasCode()) {
          setCode(other.getCode());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasCode()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.letsmidi.monsys.protocol.push.Push.ConnectRsp parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.letsmidi.monsys.protocol.push.Push.ConnectRsp) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 code = 1;
      private int code_ ;
      /**
       * <code>required int32 code = 1;</code>
       */
      public boolean hasCode() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 code = 1;</code>
       */
      public int getCode() {
        return code_;
      }
      /**
       * <code>required int32 code = 1;</code>
       */
      public Builder setCode(int value) {
        bitField0_ |= 0x00000001;
        code_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 code = 1;</code>
       */
      public Builder clearCode() {
        bitField0_ = (bitField0_ & ~0x00000001);
        code_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.letsmidi.monsys.protocol.push.ConnectRsp)
    }

    static {
      defaultInstance = new ConnectRsp(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.letsmidi.monsys.protocol.push.ConnectRsp)
  }

  public interface GetFgwListOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code com.letsmidi.monsys.protocol.push.GetFgwList}
   */
  public static final class GetFgwList extends
      com.google.protobuf.GeneratedMessage
      implements GetFgwListOrBuilder {
    // Use GetFgwList.newBuilder() to construct.
    private GetFgwList(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GetFgwList(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GetFgwList defaultInstance;
    public static GetFgwList getDefaultInstance() {
      return defaultInstance;
    }

    public GetFgwList getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GetFgwList(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.letsmidi.monsys.protocol.push.Push.internal_static_com_letsmidi_monsys_protocol_push_GetFgwList_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.letsmidi.monsys.protocol.push.Push.internal_static_com_letsmidi_monsys_protocol_push_GetFgwList_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.letsmidi.monsys.protocol.push.Push.GetFgwList.class, com.letsmidi.monsys.protocol.push.Push.GetFgwList.Builder.class);
    }

    public static com.google.protobuf.Parser<GetFgwList> PARSER =
        new com.google.protobuf.AbstractParser<GetFgwList>() {
      public GetFgwList parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetFgwList(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GetFgwList> getParserForType() {
      return PARSER;
    }

    private void initFields() {
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.letsmidi.monsys.protocol.push.Push.GetFgwList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.letsmidi.monsys.protocol.push.Push.GetFgwList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.letsmidi.monsys.protocol.push.Push.GetFgwList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.letsmidi.monsys.protocol.push.Push.GetFgwList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.letsmidi.monsys.protocol.push.Push.GetFgwList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.letsmidi.monsys.protocol.push.Push.GetFgwList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.letsmidi.monsys.protocol.push.Push.GetFgwList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.letsmidi.monsys.protocol.push.Push.GetFgwList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.letsmidi.monsys.protocol.push.Push.GetFgwList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.letsmidi.monsys.protocol.push.Push.GetFgwList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.letsmidi.monsys.protocol.push.Push.GetFgwList prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.letsmidi.monsys.protocol.push.GetFgwList}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.letsmidi.monsys.protocol.push.Push.GetFgwListOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.letsmidi.monsys.protocol.push.Push.internal_static_com_letsmidi_monsys_protocol_push_GetFgwList_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.letsmidi.monsys.protocol.push.Push.internal_static_com_letsmidi_monsys_protocol_push_GetFgwList_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.letsmidi.monsys.protocol.push.Push.GetFgwList.class, com.letsmidi.monsys.protocol.push.Push.GetFgwList.Builder.class);
      }

      // Construct using com.letsmidi.monsys.protocol.push.Push.GetFgwList.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.letsmidi.monsys.protocol.push.Push.internal_static_com_letsmidi_monsys_protocol_push_GetFgwList_descriptor;
      }

      public com.letsmidi.monsys.protocol.push.Push.GetFgwList getDefaultInstanceForType() {
        return com.letsmidi.monsys.protocol.push.Push.GetFgwList.getDefaultInstance();
      }

      public com.letsmidi.monsys.protocol.push.Push.GetFgwList build() {
        com.letsmidi.monsys.protocol.push.Push.GetFgwList result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.letsmidi.monsys.protocol.push.Push.GetFgwList buildPartial() {
        com.letsmidi.monsys.protocol.push.Push.GetFgwList result = new com.letsmidi.monsys.protocol.push.Push.GetFgwList(this);
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.letsmidi.monsys.protocol.push.Push.GetFgwList) {
          return mergeFrom((com.letsmidi.monsys.protocol.push.Push.GetFgwList)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.letsmidi.monsys.protocol.push.Push.GetFgwList other) {
        if (other == com.letsmidi.monsys.protocol.push.Push.GetFgwList.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.letsmidi.monsys.protocol.push.Push.GetFgwList parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.letsmidi.monsys.protocol.push.Push.GetFgwList) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.letsmidi.monsys.protocol.push.GetFgwList)
    }

    static {
      defaultInstance = new GetFgwList(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.letsmidi.monsys.protocol.push.GetFgwList)
  }

  public interface GetFgwListRspOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 code = 1;
    /**
     * <code>required int32 code = 1;</code>
     */
    boolean hasCode();
    /**
     * <code>required int32 code = 1;</code>
     */
    int getCode();

    // repeated .com.letsmidi.monsys.protocol.push.FGatewayInfo fgw_infos = 2;
    /**
     * <code>repeated .com.letsmidi.monsys.protocol.push.FGatewayInfo fgw_infos = 2;</code>
     */
    java.util.List<com.letsmidi.monsys.protocol.push.Push.FGatewayInfo> 
        getFgwInfosList();
    /**
     * <code>repeated .com.letsmidi.monsys.protocol.push.FGatewayInfo fgw_infos = 2;</code>
     */
    com.letsmidi.monsys.protocol.push.Push.FGatewayInfo getFgwInfos(int index);
    /**
     * <code>repeated .com.letsmidi.monsys.protocol.push.FGatewayInfo fgw_infos = 2;</code>
     */
    int getFgwInfosCount();
    /**
     * <code>repeated .com.letsmidi.monsys.protocol.push.FGatewayInfo fgw_infos = 2;</code>
     */
    java.util.List<? extends com.letsmidi.monsys.protocol.push.Push.FGatewayInfoOrBuilder> 
        getFgwInfosOrBuilderList();
    /**
     * <code>repeated .com.letsmidi.monsys.protocol.push.FGatewayInfo fgw_infos = 2;</code>
     */
    com.letsmidi.monsys.protocol.push.Push.FGatewayInfoOrBuilder getFgwInfosOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code com.letsmidi.monsys.protocol.push.GetFgwListRsp}
   */
  public static final class GetFgwListRsp extends
      com.google.protobuf.GeneratedMessage
      implements GetFgwListRspOrBuilder {
    // Use GetFgwListRsp.newBuilder() to construct.
    private GetFgwListRsp(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GetFgwListRsp(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GetFgwListRsp defaultInstance;
    public static GetFgwListRsp getDefaultInstance() {
      return defaultInstance;
    }

    public GetFgwListRsp getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GetFgwListRsp(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              code_ = input.readInt32();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                fgwInfos_ = new java.util.ArrayList<com.letsmidi.monsys.protocol.push.Push.FGatewayInfo>();
                mutable_bitField0_ |= 0x00000002;
              }
              fgwInfos_.add(input.readMessage(com.letsmidi.monsys.protocol.push.Push.FGatewayInfo.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          fgwInfos_ = java.util.Collections.unmodifiableList(fgwInfos_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.letsmidi.monsys.protocol.push.Push.internal_static_com_letsmidi_monsys_protocol_push_GetFgwListRsp_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.letsmidi.monsys.protocol.push.Push.internal_static_com_letsmidi_monsys_protocol_push_GetFgwListRsp_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.letsmidi.monsys.protocol.push.Push.GetFgwListRsp.class, com.letsmidi.monsys.protocol.push.Push.GetFgwListRsp.Builder.class);
    }

    public static com.google.protobuf.Parser<GetFgwListRsp> PARSER =
        new com.google.protobuf.AbstractParser<GetFgwListRsp>() {
      public GetFgwListRsp parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetFgwListRsp(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GetFgwListRsp> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 code = 1;
    public static final int CODE_FIELD_NUMBER = 1;
    private int code_;
    /**
     * <code>required int32 code = 1;</code>
     */
    public boolean hasCode() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 code = 1;</code>
     */
    public int getCode() {
      return code_;
    }

    // repeated .com.letsmidi.monsys.protocol.push.FGatewayInfo fgw_infos = 2;
    public static final int FGW_INFOS_FIELD_NUMBER = 2;
    private java.util.List<com.letsmidi.monsys.protocol.push.Push.FGatewayInfo> fgwInfos_;
    /**
     * <code>repeated .com.letsmidi.monsys.protocol.push.FGatewayInfo fgw_infos = 2;</code>
     */
    public java.util.List<com.letsmidi.monsys.protocol.push.Push.FGatewayInfo> getFgwInfosList() {
      return fgwInfos_;
    }
    /**
     * <code>repeated .com.letsmidi.monsys.protocol.push.FGatewayInfo fgw_infos = 2;</code>
     */
    public java.util.List<? extends com.letsmidi.monsys.protocol.push.Push.FGatewayInfoOrBuilder> 
        getFgwInfosOrBuilderList() {
      return fgwInfos_;
    }
    /**
     * <code>repeated .com.letsmidi.monsys.protocol.push.FGatewayInfo fgw_infos = 2;</code>
     */
    public int getFgwInfosCount() {
      return fgwInfos_.size();
    }
    /**
     * <code>repeated .com.letsmidi.monsys.protocol.push.FGatewayInfo fgw_infos = 2;</code>
     */
    public com.letsmidi.monsys.protocol.push.Push.FGatewayInfo getFgwInfos(int index) {
      return fgwInfos_.get(index);
    }
    /**
     * <code>repeated .com.letsmidi.monsys.protocol.push.FGatewayInfo fgw_infos = 2;</code>
     */
    public com.letsmidi.monsys.protocol.push.Push.FGatewayInfoOrBuilder getFgwInfosOrBuilder(
        int index) {
      return fgwInfos_.get(index);
    }

    private void initFields() {
      code_ = 0;
      fgwInfos_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasCode()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getFgwInfosCount(); i++) {
        if (!getFgwInfos(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, code_);
      }
      for (int i = 0; i < fgwInfos_.size(); i++) {
        output.writeMessage(2, fgwInfos_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, code_);
      }
      for (int i = 0; i < fgwInfos_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, fgwInfos_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.letsmidi.monsys.protocol.push.Push.GetFgwListRsp parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.letsmidi.monsys.protocol.push.Push.GetFgwListRsp parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.letsmidi.monsys.protocol.push.Push.GetFgwListRsp parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.letsmidi.monsys.protocol.push.Push.GetFgwListRsp parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.letsmidi.monsys.protocol.push.Push.GetFgwListRsp parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.letsmidi.monsys.protocol.push.Push.GetFgwListRsp parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.letsmidi.monsys.protocol.push.Push.GetFgwListRsp parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.letsmidi.monsys.protocol.push.Push.GetFgwListRsp parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.letsmidi.monsys.protocol.push.Push.GetFgwListRsp parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.letsmidi.monsys.protocol.push.Push.GetFgwListRsp parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.letsmidi.monsys.protocol.push.Push.GetFgwListRsp prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.letsmidi.monsys.protocol.push.GetFgwListRsp}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.letsmidi.monsys.protocol.push.Push.GetFgwListRspOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.letsmidi.monsys.protocol.push.Push.internal_static_com_letsmidi_monsys_protocol_push_GetFgwListRsp_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.letsmidi.monsys.protocol.push.Push.internal_static_com_letsmidi_monsys_protocol_push_GetFgwListRsp_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.letsmidi.monsys.protocol.push.Push.GetFgwListRsp.class, com.letsmidi.monsys.protocol.push.Push.GetFgwListRsp.Builder.class);
      }

      // Construct using com.letsmidi.monsys.protocol.push.Push.GetFgwListRsp.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getFgwInfosFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        code_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (fgwInfosBuilder_ == null) {
          fgwInfos_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          fgwInfosBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.letsmidi.monsys.protocol.push.Push.internal_static_com_letsmidi_monsys_protocol_push_GetFgwListRsp_descriptor;
      }

      public com.letsmidi.monsys.protocol.push.Push.GetFgwListRsp getDefaultInstanceForType() {
        return com.letsmidi.monsys.protocol.push.Push.GetFgwListRsp.getDefaultInstance();
      }

      public com.letsmidi.monsys.protocol.push.Push.GetFgwListRsp build() {
        com.letsmidi.monsys.protocol.push.Push.GetFgwListRsp result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.letsmidi.monsys.protocol.push.Push.GetFgwListRsp buildPartial() {
        com.letsmidi.monsys.protocol.push.Push.GetFgwListRsp result = new com.letsmidi.monsys.protocol.push.Push.GetFgwListRsp(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.code_ = code_;
        if (fgwInfosBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            fgwInfos_ = java.util.Collections.unmodifiableList(fgwInfos_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.fgwInfos_ = fgwInfos_;
        } else {
          result.fgwInfos_ = fgwInfosBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.letsmidi.monsys.protocol.push.Push.GetFgwListRsp) {
          return mergeFrom((com.letsmidi.monsys.protocol.push.Push.GetFgwListRsp)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.letsmidi.monsys.protocol.push.Push.GetFgwListRsp other) {
        if (other == com.letsmidi.monsys.protocol.push.Push.GetFgwListRsp.getDefaultInstance()) return this;
        if (other.hasCode()) {
          setCode(other.getCode());
        }
        if (fgwInfosBuilder_ == null) {
          if (!other.fgwInfos_.isEmpty()) {
            if (fgwInfos_.isEmpty()) {
              fgwInfos_ = other.fgwInfos_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureFgwInfosIsMutable();
              fgwInfos_.addAll(other.fgwInfos_);
            }
            onChanged();
          }
        } else {
          if (!other.fgwInfos_.isEmpty()) {
            if (fgwInfosBuilder_.isEmpty()) {
              fgwInfosBuilder_.dispose();
              fgwInfosBuilder_ = null;
              fgwInfos_ = other.fgwInfos_;
              bitField0_ = (bitField0_ & ~0x00000002);
              fgwInfosBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getFgwInfosFieldBuilder() : null;
            } else {
              fgwInfosBuilder_.addAllMessages(other.fgwInfos_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasCode()) {
          
          return false;
        }
        for (int i = 0; i < getFgwInfosCount(); i++) {
          if (!getFgwInfos(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.letsmidi.monsys.protocol.push.Push.GetFgwListRsp parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.letsmidi.monsys.protocol.push.Push.GetFgwListRsp) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 code = 1;
      private int code_ ;
      /**
       * <code>required int32 code = 1;</code>
       */
      public boolean hasCode() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 code = 1;</code>
       */
      public int getCode() {
        return code_;
      }
      /**
       * <code>required int32 code = 1;</code>
       */
      public Builder setCode(int value) {
        bitField0_ |= 0x00000001;
        code_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 code = 1;</code>
       */
      public Builder clearCode() {
        bitField0_ = (bitField0_ & ~0x00000001);
        code_ = 0;
        onChanged();
        return this;
      }

      // repeated .com.letsmidi.monsys.protocol.push.FGatewayInfo fgw_infos = 2;
      private java.util.List<com.letsmidi.monsys.protocol.push.Push.FGatewayInfo> fgwInfos_ =
        java.util.Collections.emptyList();
      private void ensureFgwInfosIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          fgwInfos_ = new java.util.ArrayList<com.letsmidi.monsys.protocol.push.Push.FGatewayInfo>(fgwInfos_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.letsmidi.monsys.protocol.push.Push.FGatewayInfo, com.letsmidi.monsys.protocol.push.Push.FGatewayInfo.Builder, com.letsmidi.monsys.protocol.push.Push.FGatewayInfoOrBuilder> fgwInfosBuilder_;

      /**
       * <code>repeated .com.letsmidi.monsys.protocol.push.FGatewayInfo fgw_infos = 2;</code>
       */
      public java.util.List<com.letsmidi.monsys.protocol.push.Push.FGatewayInfo> getFgwInfosList() {
        if (fgwInfosBuilder_ == null) {
          return java.util.Collections.unmodifiableList(fgwInfos_);
        } else {
          return fgwInfosBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.letsmidi.monsys.protocol.push.FGatewayInfo fgw_infos = 2;</code>
       */
      public int getFgwInfosCount() {
        if (fgwInfosBuilder_ == null) {
          return fgwInfos_.size();
        } else {
          return fgwInfosBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.letsmidi.monsys.protocol.push.FGatewayInfo fgw_infos = 2;</code>
       */
      public com.letsmidi.monsys.protocol.push.Push.FGatewayInfo getFgwInfos(int index) {
        if (fgwInfosBuilder_ == null) {
          return fgwInfos_.get(index);
        } else {
          return fgwInfosBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.letsmidi.monsys.protocol.push.FGatewayInfo fgw_infos = 2;</code>
       */
      public Builder setFgwInfos(
          int index, com.letsmidi.monsys.protocol.push.Push.FGatewayInfo value) {
        if (fgwInfosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFgwInfosIsMutable();
          fgwInfos_.set(index, value);
          onChanged();
        } else {
          fgwInfosBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.letsmidi.monsys.protocol.push.FGatewayInfo fgw_infos = 2;</code>
       */
      public Builder setFgwInfos(
          int index, com.letsmidi.monsys.protocol.push.Push.FGatewayInfo.Builder builderForValue) {
        if (fgwInfosBuilder_ == null) {
          ensureFgwInfosIsMutable();
          fgwInfos_.set(index, builderForValue.build());
          onChanged();
        } else {
          fgwInfosBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.letsmidi.monsys.protocol.push.FGatewayInfo fgw_infos = 2;</code>
       */
      public Builder addFgwInfos(com.letsmidi.monsys.protocol.push.Push.FGatewayInfo value) {
        if (fgwInfosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFgwInfosIsMutable();
          fgwInfos_.add(value);
          onChanged();
        } else {
          fgwInfosBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.letsmidi.monsys.protocol.push.FGatewayInfo fgw_infos = 2;</code>
       */
      public Builder addFgwInfos(
          int index, com.letsmidi.monsys.protocol.push.Push.FGatewayInfo value) {
        if (fgwInfosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFgwInfosIsMutable();
          fgwInfos_.add(index, value);
          onChanged();
        } else {
          fgwInfosBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.letsmidi.monsys.protocol.push.FGatewayInfo fgw_infos = 2;</code>
       */
      public Builder addFgwInfos(
          com.letsmidi.monsys.protocol.push.Push.FGatewayInfo.Builder builderForValue) {
        if (fgwInfosBuilder_ == null) {
          ensureFgwInfosIsMutable();
          fgwInfos_.add(builderForValue.build());
          onChanged();
        } else {
          fgwInfosBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.letsmidi.monsys.protocol.push.FGatewayInfo fgw_infos = 2;</code>
       */
      public Builder addFgwInfos(
          int index, com.letsmidi.monsys.protocol.push.Push.FGatewayInfo.Builder builderForValue) {
        if (fgwInfosBuilder_ == null) {
          ensureFgwInfosIsMutable();
          fgwInfos_.add(index, builderForValue.build());
          onChanged();
        } else {
          fgwInfosBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.letsmidi.monsys.protocol.push.FGatewayInfo fgw_infos = 2;</code>
       */
      public Builder addAllFgwInfos(
          java.lang.Iterable<? extends com.letsmidi.monsys.protocol.push.Push.FGatewayInfo> values) {
        if (fgwInfosBuilder_ == null) {
          ensureFgwInfosIsMutable();
          super.addAll(values, fgwInfos_);
          onChanged();
        } else {
          fgwInfosBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.letsmidi.monsys.protocol.push.FGatewayInfo fgw_infos = 2;</code>
       */
      public Builder clearFgwInfos() {
        if (fgwInfosBuilder_ == null) {
          fgwInfos_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          fgwInfosBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.letsmidi.monsys.protocol.push.FGatewayInfo fgw_infos = 2;</code>
       */
      public Builder removeFgwInfos(int index) {
        if (fgwInfosBuilder_ == null) {
          ensureFgwInfosIsMutable();
          fgwInfos_.remove(index);
          onChanged();
        } else {
          fgwInfosBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.letsmidi.monsys.protocol.push.FGatewayInfo fgw_infos = 2;</code>
       */
      public com.letsmidi.monsys.protocol.push.Push.FGatewayInfo.Builder getFgwInfosBuilder(
          int index) {
        return getFgwInfosFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.letsmidi.monsys.protocol.push.FGatewayInfo fgw_infos = 2;</code>
       */
      public com.letsmidi.monsys.protocol.push.Push.FGatewayInfoOrBuilder getFgwInfosOrBuilder(
          int index) {
        if (fgwInfosBuilder_ == null) {
          return fgwInfos_.get(index);  } else {
          return fgwInfosBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.letsmidi.monsys.protocol.push.FGatewayInfo fgw_infos = 2;</code>
       */
      public java.util.List<? extends com.letsmidi.monsys.protocol.push.Push.FGatewayInfoOrBuilder> 
           getFgwInfosOrBuilderList() {
        if (fgwInfosBuilder_ != null) {
          return fgwInfosBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(fgwInfos_);
        }
      }
      /**
       * <code>repeated .com.letsmidi.monsys.protocol.push.FGatewayInfo fgw_infos = 2;</code>
       */
      public com.letsmidi.monsys.protocol.push.Push.FGatewayInfo.Builder addFgwInfosBuilder() {
        return getFgwInfosFieldBuilder().addBuilder(
            com.letsmidi.monsys.protocol.push.Push.FGatewayInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .com.letsmidi.monsys.protocol.push.FGatewayInfo fgw_infos = 2;</code>
       */
      public com.letsmidi.monsys.protocol.push.Push.FGatewayInfo.Builder addFgwInfosBuilder(
          int index) {
        return getFgwInfosFieldBuilder().addBuilder(
            index, com.letsmidi.monsys.protocol.push.Push.FGatewayInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .com.letsmidi.monsys.protocol.push.FGatewayInfo fgw_infos = 2;</code>
       */
      public java.util.List<com.letsmidi.monsys.protocol.push.Push.FGatewayInfo.Builder> 
           getFgwInfosBuilderList() {
        return getFgwInfosFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.letsmidi.monsys.protocol.push.Push.FGatewayInfo, com.letsmidi.monsys.protocol.push.Push.FGatewayInfo.Builder, com.letsmidi.monsys.protocol.push.Push.FGatewayInfoOrBuilder> 
          getFgwInfosFieldBuilder() {
        if (fgwInfosBuilder_ == null) {
          fgwInfosBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.letsmidi.monsys.protocol.push.Push.FGatewayInfo, com.letsmidi.monsys.protocol.push.Push.FGatewayInfo.Builder, com.letsmidi.monsys.protocol.push.Push.FGatewayInfoOrBuilder>(
                  fgwInfos_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          fgwInfos_ = null;
        }
        return fgwInfosBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:com.letsmidi.monsys.protocol.push.GetFgwListRsp)
    }

    static {
      defaultInstance = new GetFgwListRsp(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.letsmidi.monsys.protocol.push.GetFgwListRsp)
  }

  public interface GetDevListOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string device_id = 1;
    /**
     * <code>required string device_id = 1;</code>
     */
    boolean hasDeviceId();
    /**
     * <code>required string device_id = 1;</code>
     */
    java.lang.String getDeviceId();
    /**
     * <code>required string device_id = 1;</code>
     */
    com.google.protobuf.ByteString
        getDeviceIdBytes();
  }
  /**
   * Protobuf type {@code com.letsmidi.monsys.protocol.push.GetDevList}
   */
  public static final class GetDevList extends
      com.google.protobuf.GeneratedMessage
      implements GetDevListOrBuilder {
    // Use GetDevList.newBuilder() to construct.
    private GetDevList(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GetDevList(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GetDevList defaultInstance;
    public static GetDevList getDefaultInstance() {
      return defaultInstance;
    }

    public GetDevList getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GetDevList(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              deviceId_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.letsmidi.monsys.protocol.push.Push.internal_static_com_letsmidi_monsys_protocol_push_GetDevList_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.letsmidi.monsys.protocol.push.Push.internal_static_com_letsmidi_monsys_protocol_push_GetDevList_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.letsmidi.monsys.protocol.push.Push.GetDevList.class, com.letsmidi.monsys.protocol.push.Push.GetDevList.Builder.class);
    }

    public static com.google.protobuf.Parser<GetDevList> PARSER =
        new com.google.protobuf.AbstractParser<GetDevList>() {
      public GetDevList parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetDevList(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GetDevList> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string device_id = 1;
    public static final int DEVICE_ID_FIELD_NUMBER = 1;
    private java.lang.Object deviceId_;
    /**
     * <code>required string device_id = 1;</code>
     */
    public boolean hasDeviceId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string device_id = 1;</code>
     */
    public java.lang.String getDeviceId() {
      java.lang.Object ref = deviceId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          deviceId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string device_id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getDeviceIdBytes() {
      java.lang.Object ref = deviceId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        deviceId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      deviceId_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasDeviceId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getDeviceIdBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getDeviceIdBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.letsmidi.monsys.protocol.push.Push.GetDevList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.letsmidi.monsys.protocol.push.Push.GetDevList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.letsmidi.monsys.protocol.push.Push.GetDevList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.letsmidi.monsys.protocol.push.Push.GetDevList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.letsmidi.monsys.protocol.push.Push.GetDevList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.letsmidi.monsys.protocol.push.Push.GetDevList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.letsmidi.monsys.protocol.push.Push.GetDevList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.letsmidi.monsys.protocol.push.Push.GetDevList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.letsmidi.monsys.protocol.push.Push.GetDevList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.letsmidi.monsys.protocol.push.Push.GetDevList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.letsmidi.monsys.protocol.push.Push.GetDevList prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.letsmidi.monsys.protocol.push.GetDevList}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.letsmidi.monsys.protocol.push.Push.GetDevListOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.letsmidi.monsys.protocol.push.Push.internal_static_com_letsmidi_monsys_protocol_push_GetDevList_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.letsmidi.monsys.protocol.push.Push.internal_static_com_letsmidi_monsys_protocol_push_GetDevList_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.letsmidi.monsys.protocol.push.Push.GetDevList.class, com.letsmidi.monsys.protocol.push.Push.GetDevList.Builder.class);
      }

      // Construct using com.letsmidi.monsys.protocol.push.Push.GetDevList.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        deviceId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.letsmidi.monsys.protocol.push.Push.internal_static_com_letsmidi_monsys_protocol_push_GetDevList_descriptor;
      }

      public com.letsmidi.monsys.protocol.push.Push.GetDevList getDefaultInstanceForType() {
        return com.letsmidi.monsys.protocol.push.Push.GetDevList.getDefaultInstance();
      }

      public com.letsmidi.monsys.protocol.push.Push.GetDevList build() {
        com.letsmidi.monsys.protocol.push.Push.GetDevList result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.letsmidi.monsys.protocol.push.Push.GetDevList buildPartial() {
        com.letsmidi.monsys.protocol.push.Push.GetDevList result = new com.letsmidi.monsys.protocol.push.Push.GetDevList(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.deviceId_ = deviceId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.letsmidi.monsys.protocol.push.Push.GetDevList) {
          return mergeFrom((com.letsmidi.monsys.protocol.push.Push.GetDevList)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.letsmidi.monsys.protocol.push.Push.GetDevList other) {
        if (other == com.letsmidi.monsys.protocol.push.Push.GetDevList.getDefaultInstance()) return this;
        if (other.hasDeviceId()) {
          bitField0_ |= 0x00000001;
          deviceId_ = other.deviceId_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasDeviceId()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.letsmidi.monsys.protocol.push.Push.GetDevList parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.letsmidi.monsys.protocol.push.Push.GetDevList) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string device_id = 1;
      private java.lang.Object deviceId_ = "";
      /**
       * <code>required string device_id = 1;</code>
       */
      public boolean hasDeviceId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string device_id = 1;</code>
       */
      public java.lang.String getDeviceId() {
        java.lang.Object ref = deviceId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          deviceId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string device_id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getDeviceIdBytes() {
        java.lang.Object ref = deviceId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          deviceId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string device_id = 1;</code>
       */
      public Builder setDeviceId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        deviceId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string device_id = 1;</code>
       */
      public Builder clearDeviceId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        deviceId_ = getDefaultInstance().getDeviceId();
        onChanged();
        return this;
      }
      /**
       * <code>required string device_id = 1;</code>
       */
      public Builder setDeviceIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        deviceId_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.letsmidi.monsys.protocol.push.GetDevList)
    }

    static {
      defaultInstance = new GetDevList(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.letsmidi.monsys.protocol.push.GetDevList)
  }

  public interface GetDevListRspOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 code = 1;
    /**
     * <code>required int32 code = 1;</code>
     */
    boolean hasCode();
    /**
     * <code>required int32 code = 1;</code>
     */
    int getCode();

    // repeated .com.letsmidi.monsys.protocol.push.DeviceInfo dev_infos = 2;
    /**
     * <code>repeated .com.letsmidi.monsys.protocol.push.DeviceInfo dev_infos = 2;</code>
     */
    java.util.List<com.letsmidi.monsys.protocol.push.Push.DeviceInfo> 
        getDevInfosList();
    /**
     * <code>repeated .com.letsmidi.monsys.protocol.push.DeviceInfo dev_infos = 2;</code>
     */
    com.letsmidi.monsys.protocol.push.Push.DeviceInfo getDevInfos(int index);
    /**
     * <code>repeated .com.letsmidi.monsys.protocol.push.DeviceInfo dev_infos = 2;</code>
     */
    int getDevInfosCount();
    /**
     * <code>repeated .com.letsmidi.monsys.protocol.push.DeviceInfo dev_infos = 2;</code>
     */
    java.util.List<? extends com.letsmidi.monsys.protocol.push.Push.DeviceInfoOrBuilder> 
        getDevInfosOrBuilderList();
    /**
     * <code>repeated .com.letsmidi.monsys.protocol.push.DeviceInfo dev_infos = 2;</code>
     */
    com.letsmidi.monsys.protocol.push.Push.DeviceInfoOrBuilder getDevInfosOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code com.letsmidi.monsys.protocol.push.GetDevListRsp}
   */
  public static final class GetDevListRsp extends
      com.google.protobuf.GeneratedMessage
      implements GetDevListRspOrBuilder {
    // Use GetDevListRsp.newBuilder() to construct.
    private GetDevListRsp(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GetDevListRsp(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GetDevListRsp defaultInstance;
    public static GetDevListRsp getDefaultInstance() {
      return defaultInstance;
    }

    public GetDevListRsp getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GetDevListRsp(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              code_ = input.readInt32();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                devInfos_ = new java.util.ArrayList<com.letsmidi.monsys.protocol.push.Push.DeviceInfo>();
                mutable_bitField0_ |= 0x00000002;
              }
              devInfos_.add(input.readMessage(com.letsmidi.monsys.protocol.push.Push.DeviceInfo.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          devInfos_ = java.util.Collections.unmodifiableList(devInfos_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.letsmidi.monsys.protocol.push.Push.internal_static_com_letsmidi_monsys_protocol_push_GetDevListRsp_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.letsmidi.monsys.protocol.push.Push.internal_static_com_letsmidi_monsys_protocol_push_GetDevListRsp_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.letsmidi.monsys.protocol.push.Push.GetDevListRsp.class, com.letsmidi.monsys.protocol.push.Push.GetDevListRsp.Builder.class);
    }

    public static com.google.protobuf.Parser<GetDevListRsp> PARSER =
        new com.google.protobuf.AbstractParser<GetDevListRsp>() {
      public GetDevListRsp parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetDevListRsp(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GetDevListRsp> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 code = 1;
    public static final int CODE_FIELD_NUMBER = 1;
    private int code_;
    /**
     * <code>required int32 code = 1;</code>
     */
    public boolean hasCode() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 code = 1;</code>
     */
    public int getCode() {
      return code_;
    }

    // repeated .com.letsmidi.monsys.protocol.push.DeviceInfo dev_infos = 2;
    public static final int DEV_INFOS_FIELD_NUMBER = 2;
    private java.util.List<com.letsmidi.monsys.protocol.push.Push.DeviceInfo> devInfos_;
    /**
     * <code>repeated .com.letsmidi.monsys.protocol.push.DeviceInfo dev_infos = 2;</code>
     */
    public java.util.List<com.letsmidi.monsys.protocol.push.Push.DeviceInfo> getDevInfosList() {
      return devInfos_;
    }
    /**
     * <code>repeated .com.letsmidi.monsys.protocol.push.DeviceInfo dev_infos = 2;</code>
     */
    public java.util.List<? extends com.letsmidi.monsys.protocol.push.Push.DeviceInfoOrBuilder> 
        getDevInfosOrBuilderList() {
      return devInfos_;
    }
    /**
     * <code>repeated .com.letsmidi.monsys.protocol.push.DeviceInfo dev_infos = 2;</code>
     */
    public int getDevInfosCount() {
      return devInfos_.size();
    }
    /**
     * <code>repeated .com.letsmidi.monsys.protocol.push.DeviceInfo dev_infos = 2;</code>
     */
    public com.letsmidi.monsys.protocol.push.Push.DeviceInfo getDevInfos(int index) {
      return devInfos_.get(index);
    }
    /**
     * <code>repeated .com.letsmidi.monsys.protocol.push.DeviceInfo dev_infos = 2;</code>
     */
    public com.letsmidi.monsys.protocol.push.Push.DeviceInfoOrBuilder getDevInfosOrBuilder(
        int index) {
      return devInfos_.get(index);
    }

    private void initFields() {
      code_ = 0;
      devInfos_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasCode()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getDevInfosCount(); i++) {
        if (!getDevInfos(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, code_);
      }
      for (int i = 0; i < devInfos_.size(); i++) {
        output.writeMessage(2, devInfos_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, code_);
      }
      for (int i = 0; i < devInfos_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, devInfos_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.letsmidi.monsys.protocol.push.Push.GetDevListRsp parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.letsmidi.monsys.protocol.push.Push.GetDevListRsp parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.letsmidi.monsys.protocol.push.Push.GetDevListRsp parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.letsmidi.monsys.protocol.push.Push.GetDevListRsp parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.letsmidi.monsys.protocol.push.Push.GetDevListRsp parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.letsmidi.monsys.protocol.push.Push.GetDevListRsp parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.letsmidi.monsys.protocol.push.Push.GetDevListRsp parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.letsmidi.monsys.protocol.push.Push.GetDevListRsp parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.letsmidi.monsys.protocol.push.Push.GetDevListRsp parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.letsmidi.monsys.protocol.push.Push.GetDevListRsp parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.letsmidi.monsys.protocol.push.Push.GetDevListRsp prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.letsmidi.monsys.protocol.push.GetDevListRsp}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.letsmidi.monsys.protocol.push.Push.GetDevListRspOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.letsmidi.monsys.protocol.push.Push.internal_static_com_letsmidi_monsys_protocol_push_GetDevListRsp_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.letsmidi.monsys.protocol.push.Push.internal_static_com_letsmidi_monsys_protocol_push_GetDevListRsp_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.letsmidi.monsys.protocol.push.Push.GetDevListRsp.class, com.letsmidi.monsys.protocol.push.Push.GetDevListRsp.Builder.class);
      }

      // Construct using com.letsmidi.monsys.protocol.push.Push.GetDevListRsp.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getDevInfosFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        code_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (devInfosBuilder_ == null) {
          devInfos_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          devInfosBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.letsmidi.monsys.protocol.push.Push.internal_static_com_letsmidi_monsys_protocol_push_GetDevListRsp_descriptor;
      }

      public com.letsmidi.monsys.protocol.push.Push.GetDevListRsp getDefaultInstanceForType() {
        return com.letsmidi.monsys.protocol.push.Push.GetDevListRsp.getDefaultInstance();
      }

      public com.letsmidi.monsys.protocol.push.Push.GetDevListRsp build() {
        com.letsmidi.monsys.protocol.push.Push.GetDevListRsp result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.letsmidi.monsys.protocol.push.Push.GetDevListRsp buildPartial() {
        com.letsmidi.monsys.protocol.push.Push.GetDevListRsp result = new com.letsmidi.monsys.protocol.push.Push.GetDevListRsp(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.code_ = code_;
        if (devInfosBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            devInfos_ = java.util.Collections.unmodifiableList(devInfos_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.devInfos_ = devInfos_;
        } else {
          result.devInfos_ = devInfosBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.letsmidi.monsys.protocol.push.Push.GetDevListRsp) {
          return mergeFrom((com.letsmidi.monsys.protocol.push.Push.GetDevListRsp)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.letsmidi.monsys.protocol.push.Push.GetDevListRsp other) {
        if (other == com.letsmidi.monsys.protocol.push.Push.GetDevListRsp.getDefaultInstance()) return this;
        if (other.hasCode()) {
          setCode(other.getCode());
        }
        if (devInfosBuilder_ == null) {
          if (!other.devInfos_.isEmpty()) {
            if (devInfos_.isEmpty()) {
              devInfos_ = other.devInfos_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureDevInfosIsMutable();
              devInfos_.addAll(other.devInfos_);
            }
            onChanged();
          }
        } else {
          if (!other.devInfos_.isEmpty()) {
            if (devInfosBuilder_.isEmpty()) {
              devInfosBuilder_.dispose();
              devInfosBuilder_ = null;
              devInfos_ = other.devInfos_;
              bitField0_ = (bitField0_ & ~0x00000002);
              devInfosBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getDevInfosFieldBuilder() : null;
            } else {
              devInfosBuilder_.addAllMessages(other.devInfos_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasCode()) {
          
          return false;
        }
        for (int i = 0; i < getDevInfosCount(); i++) {
          if (!getDevInfos(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.letsmidi.monsys.protocol.push.Push.GetDevListRsp parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.letsmidi.monsys.protocol.push.Push.GetDevListRsp) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 code = 1;
      private int code_ ;
      /**
       * <code>required int32 code = 1;</code>
       */
      public boolean hasCode() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 code = 1;</code>
       */
      public int getCode() {
        return code_;
      }
      /**
       * <code>required int32 code = 1;</code>
       */
      public Builder setCode(int value) {
        bitField0_ |= 0x00000001;
        code_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 code = 1;</code>
       */
      public Builder clearCode() {
        bitField0_ = (bitField0_ & ~0x00000001);
        code_ = 0;
        onChanged();
        return this;
      }

      // repeated .com.letsmidi.monsys.protocol.push.DeviceInfo dev_infos = 2;
      private java.util.List<com.letsmidi.monsys.protocol.push.Push.DeviceInfo> devInfos_ =
        java.util.Collections.emptyList();
      private void ensureDevInfosIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          devInfos_ = new java.util.ArrayList<com.letsmidi.monsys.protocol.push.Push.DeviceInfo>(devInfos_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.letsmidi.monsys.protocol.push.Push.DeviceInfo, com.letsmidi.monsys.protocol.push.Push.DeviceInfo.Builder, com.letsmidi.monsys.protocol.push.Push.DeviceInfoOrBuilder> devInfosBuilder_;

      /**
       * <code>repeated .com.letsmidi.monsys.protocol.push.DeviceInfo dev_infos = 2;</code>
       */
      public java.util.List<com.letsmidi.monsys.protocol.push.Push.DeviceInfo> getDevInfosList() {
        if (devInfosBuilder_ == null) {
          return java.util.Collections.unmodifiableList(devInfos_);
        } else {
          return devInfosBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.letsmidi.monsys.protocol.push.DeviceInfo dev_infos = 2;</code>
       */
      public int getDevInfosCount() {
        if (devInfosBuilder_ == null) {
          return devInfos_.size();
        } else {
          return devInfosBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.letsmidi.monsys.protocol.push.DeviceInfo dev_infos = 2;</code>
       */
      public com.letsmidi.monsys.protocol.push.Push.DeviceInfo getDevInfos(int index) {
        if (devInfosBuilder_ == null) {
          return devInfos_.get(index);
        } else {
          return devInfosBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.letsmidi.monsys.protocol.push.DeviceInfo dev_infos = 2;</code>
       */
      public Builder setDevInfos(
          int index, com.letsmidi.monsys.protocol.push.Push.DeviceInfo value) {
        if (devInfosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDevInfosIsMutable();
          devInfos_.set(index, value);
          onChanged();
        } else {
          devInfosBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.letsmidi.monsys.protocol.push.DeviceInfo dev_infos = 2;</code>
       */
      public Builder setDevInfos(
          int index, com.letsmidi.monsys.protocol.push.Push.DeviceInfo.Builder builderForValue) {
        if (devInfosBuilder_ == null) {
          ensureDevInfosIsMutable();
          devInfos_.set(index, builderForValue.build());
          onChanged();
        } else {
          devInfosBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.letsmidi.monsys.protocol.push.DeviceInfo dev_infos = 2;</code>
       */
      public Builder addDevInfos(com.letsmidi.monsys.protocol.push.Push.DeviceInfo value) {
        if (devInfosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDevInfosIsMutable();
          devInfos_.add(value);
          onChanged();
        } else {
          devInfosBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.letsmidi.monsys.protocol.push.DeviceInfo dev_infos = 2;</code>
       */
      public Builder addDevInfos(
          int index, com.letsmidi.monsys.protocol.push.Push.DeviceInfo value) {
        if (devInfosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDevInfosIsMutable();
          devInfos_.add(index, value);
          onChanged();
        } else {
          devInfosBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.letsmidi.monsys.protocol.push.DeviceInfo dev_infos = 2;</code>
       */
      public Builder addDevInfos(
          com.letsmidi.monsys.protocol.push.Push.DeviceInfo.Builder builderForValue) {
        if (devInfosBuilder_ == null) {
          ensureDevInfosIsMutable();
          devInfos_.add(builderForValue.build());
          onChanged();
        } else {
          devInfosBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.letsmidi.monsys.protocol.push.DeviceInfo dev_infos = 2;</code>
       */
      public Builder addDevInfos(
          int index, com.letsmidi.monsys.protocol.push.Push.DeviceInfo.Builder builderForValue) {
        if (devInfosBuilder_ == null) {
          ensureDevInfosIsMutable();
          devInfos_.add(index, builderForValue.build());
          onChanged();
        } else {
          devInfosBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.letsmidi.monsys.protocol.push.DeviceInfo dev_infos = 2;</code>
       */
      public Builder addAllDevInfos(
          java.lang.Iterable<? extends com.letsmidi.monsys.protocol.push.Push.DeviceInfo> values) {
        if (devInfosBuilder_ == null) {
          ensureDevInfosIsMutable();
          super.addAll(values, devInfos_);
          onChanged();
        } else {
          devInfosBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.letsmidi.monsys.protocol.push.DeviceInfo dev_infos = 2;</code>
       */
      public Builder clearDevInfos() {
        if (devInfosBuilder_ == null) {
          devInfos_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          devInfosBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.letsmidi.monsys.protocol.push.DeviceInfo dev_infos = 2;</code>
       */
      public Builder removeDevInfos(int index) {
        if (devInfosBuilder_ == null) {
          ensureDevInfosIsMutable();
          devInfos_.remove(index);
          onChanged();
        } else {
          devInfosBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.letsmidi.monsys.protocol.push.DeviceInfo dev_infos = 2;</code>
       */
      public com.letsmidi.monsys.protocol.push.Push.DeviceInfo.Builder getDevInfosBuilder(
          int index) {
        return getDevInfosFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.letsmidi.monsys.protocol.push.DeviceInfo dev_infos = 2;</code>
       */
      public com.letsmidi.monsys.protocol.push.Push.DeviceInfoOrBuilder getDevInfosOrBuilder(
          int index) {
        if (devInfosBuilder_ == null) {
          return devInfos_.get(index);  } else {
          return devInfosBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.letsmidi.monsys.protocol.push.DeviceInfo dev_infos = 2;</code>
       */
      public java.util.List<? extends com.letsmidi.monsys.protocol.push.Push.DeviceInfoOrBuilder> 
           getDevInfosOrBuilderList() {
        if (devInfosBuilder_ != null) {
          return devInfosBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(devInfos_);
        }
      }
      /**
       * <code>repeated .com.letsmidi.monsys.protocol.push.DeviceInfo dev_infos = 2;</code>
       */
      public com.letsmidi.monsys.protocol.push.Push.DeviceInfo.Builder addDevInfosBuilder() {
        return getDevInfosFieldBuilder().addBuilder(
            com.letsmidi.monsys.protocol.push.Push.DeviceInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .com.letsmidi.monsys.protocol.push.DeviceInfo dev_infos = 2;</code>
       */
      public com.letsmidi.monsys.protocol.push.Push.DeviceInfo.Builder addDevInfosBuilder(
          int index) {
        return getDevInfosFieldBuilder().addBuilder(
            index, com.letsmidi.monsys.protocol.push.Push.DeviceInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .com.letsmidi.monsys.protocol.push.DeviceInfo dev_infos = 2;</code>
       */
      public java.util.List<com.letsmidi.monsys.protocol.push.Push.DeviceInfo.Builder> 
           getDevInfosBuilderList() {
        return getDevInfosFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.letsmidi.monsys.protocol.push.Push.DeviceInfo, com.letsmidi.monsys.protocol.push.Push.DeviceInfo.Builder, com.letsmidi.monsys.protocol.push.Push.DeviceInfoOrBuilder> 
          getDevInfosFieldBuilder() {
        if (devInfosBuilder_ == null) {
          devInfosBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.letsmidi.monsys.protocol.push.Push.DeviceInfo, com.letsmidi.monsys.protocol.push.Push.DeviceInfo.Builder, com.letsmidi.monsys.protocol.push.Push.DeviceInfoOrBuilder>(
                  devInfos_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          devInfos_ = null;
        }
        return devInfosBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:com.letsmidi.monsys.protocol.push.GetDevListRsp)
    }

    static {
      defaultInstance = new GetDevListRsp(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.letsmidi.monsys.protocol.push.GetDevListRsp)
  }

  public interface GetDevInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 addr = 1;
    /**
     * <code>required int32 addr = 1;</code>
     */
    boolean hasAddr();
    /**
     * <code>required int32 addr = 1;</code>
     */
    int getAddr();

    // repeated int32 item_ids = 2 [packed = true];
    /**
     * <code>repeated int32 item_ids = 2 [packed = true];</code>
     */
    java.util.List<java.lang.Integer> getItemIdsList();
    /**
     * <code>repeated int32 item_ids = 2 [packed = true];</code>
     */
    int getItemIdsCount();
    /**
     * <code>repeated int32 item_ids = 2 [packed = true];</code>
     */
    int getItemIds(int index);
  }
  /**
   * Protobuf type {@code com.letsmidi.monsys.protocol.push.GetDevInfo}
   */
  public static final class GetDevInfo extends
      com.google.protobuf.GeneratedMessage
      implements GetDevInfoOrBuilder {
    // Use GetDevInfo.newBuilder() to construct.
    private GetDevInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GetDevInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GetDevInfo defaultInstance;
    public static GetDevInfo getDefaultInstance() {
      return defaultInstance;
    }

    public GetDevInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GetDevInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              addr_ = input.readInt32();
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                itemIds_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              itemIds_.add(input.readInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                itemIds_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                itemIds_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          itemIds_ = java.util.Collections.unmodifiableList(itemIds_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.letsmidi.monsys.protocol.push.Push.internal_static_com_letsmidi_monsys_protocol_push_GetDevInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.letsmidi.monsys.protocol.push.Push.internal_static_com_letsmidi_monsys_protocol_push_GetDevInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.letsmidi.monsys.protocol.push.Push.GetDevInfo.class, com.letsmidi.monsys.protocol.push.Push.GetDevInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<GetDevInfo> PARSER =
        new com.google.protobuf.AbstractParser<GetDevInfo>() {
      public GetDevInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetDevInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GetDevInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 addr = 1;
    public static final int ADDR_FIELD_NUMBER = 1;
    private int addr_;
    /**
     * <code>required int32 addr = 1;</code>
     */
    public boolean hasAddr() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 addr = 1;</code>
     */
    public int getAddr() {
      return addr_;
    }

    // repeated int32 item_ids = 2 [packed = true];
    public static final int ITEM_IDS_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Integer> itemIds_;
    /**
     * <code>repeated int32 item_ids = 2 [packed = true];</code>
     */
    public java.util.List<java.lang.Integer>
        getItemIdsList() {
      return itemIds_;
    }
    /**
     * <code>repeated int32 item_ids = 2 [packed = true];</code>
     */
    public int getItemIdsCount() {
      return itemIds_.size();
    }
    /**
     * <code>repeated int32 item_ids = 2 [packed = true];</code>
     */
    public int getItemIds(int index) {
      return itemIds_.get(index);
    }
    private int itemIdsMemoizedSerializedSize = -1;

    private void initFields() {
      addr_ = 0;
      itemIds_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasAddr()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, addr_);
      }
      if (getItemIdsList().size() > 0) {
        output.writeRawVarint32(18);
        output.writeRawVarint32(itemIdsMemoizedSerializedSize);
      }
      for (int i = 0; i < itemIds_.size(); i++) {
        output.writeInt32NoTag(itemIds_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, addr_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < itemIds_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(itemIds_.get(i));
        }
        size += dataSize;
        if (!getItemIdsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        itemIdsMemoizedSerializedSize = dataSize;
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.letsmidi.monsys.protocol.push.Push.GetDevInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.letsmidi.monsys.protocol.push.Push.GetDevInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.letsmidi.monsys.protocol.push.Push.GetDevInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.letsmidi.monsys.protocol.push.Push.GetDevInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.letsmidi.monsys.protocol.push.Push.GetDevInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.letsmidi.monsys.protocol.push.Push.GetDevInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.letsmidi.monsys.protocol.push.Push.GetDevInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.letsmidi.monsys.protocol.push.Push.GetDevInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.letsmidi.monsys.protocol.push.Push.GetDevInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.letsmidi.monsys.protocol.push.Push.GetDevInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.letsmidi.monsys.protocol.push.Push.GetDevInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.letsmidi.monsys.protocol.push.GetDevInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.letsmidi.monsys.protocol.push.Push.GetDevInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.letsmidi.monsys.protocol.push.Push.internal_static_com_letsmidi_monsys_protocol_push_GetDevInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.letsmidi.monsys.protocol.push.Push.internal_static_com_letsmidi_monsys_protocol_push_GetDevInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.letsmidi.monsys.protocol.push.Push.GetDevInfo.class, com.letsmidi.monsys.protocol.push.Push.GetDevInfo.Builder.class);
      }

      // Construct using com.letsmidi.monsys.protocol.push.Push.GetDevInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        addr_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        itemIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.letsmidi.monsys.protocol.push.Push.internal_static_com_letsmidi_monsys_protocol_push_GetDevInfo_descriptor;
      }

      public com.letsmidi.monsys.protocol.push.Push.GetDevInfo getDefaultInstanceForType() {
        return com.letsmidi.monsys.protocol.push.Push.GetDevInfo.getDefaultInstance();
      }

      public com.letsmidi.monsys.protocol.push.Push.GetDevInfo build() {
        com.letsmidi.monsys.protocol.push.Push.GetDevInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.letsmidi.monsys.protocol.push.Push.GetDevInfo buildPartial() {
        com.letsmidi.monsys.protocol.push.Push.GetDevInfo result = new com.letsmidi.monsys.protocol.push.Push.GetDevInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.addr_ = addr_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          itemIds_ = java.util.Collections.unmodifiableList(itemIds_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.itemIds_ = itemIds_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.letsmidi.monsys.protocol.push.Push.GetDevInfo) {
          return mergeFrom((com.letsmidi.monsys.protocol.push.Push.GetDevInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.letsmidi.monsys.protocol.push.Push.GetDevInfo other) {
        if (other == com.letsmidi.monsys.protocol.push.Push.GetDevInfo.getDefaultInstance()) return this;
        if (other.hasAddr()) {
          setAddr(other.getAddr());
        }
        if (!other.itemIds_.isEmpty()) {
          if (itemIds_.isEmpty()) {
            itemIds_ = other.itemIds_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureItemIdsIsMutable();
            itemIds_.addAll(other.itemIds_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasAddr()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.letsmidi.monsys.protocol.push.Push.GetDevInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.letsmidi.monsys.protocol.push.Push.GetDevInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 addr = 1;
      private int addr_ ;
      /**
       * <code>required int32 addr = 1;</code>
       */
      public boolean hasAddr() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 addr = 1;</code>
       */
      public int getAddr() {
        return addr_;
      }
      /**
       * <code>required int32 addr = 1;</code>
       */
      public Builder setAddr(int value) {
        bitField0_ |= 0x00000001;
        addr_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 addr = 1;</code>
       */
      public Builder clearAddr() {
        bitField0_ = (bitField0_ & ~0x00000001);
        addr_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 item_ids = 2 [packed = true];
      private java.util.List<java.lang.Integer> itemIds_ = java.util.Collections.emptyList();
      private void ensureItemIdsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          itemIds_ = new java.util.ArrayList<java.lang.Integer>(itemIds_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated int32 item_ids = 2 [packed = true];</code>
       */
      public java.util.List<java.lang.Integer>
          getItemIdsList() {
        return java.util.Collections.unmodifiableList(itemIds_);
      }
      /**
       * <code>repeated int32 item_ids = 2 [packed = true];</code>
       */
      public int getItemIdsCount() {
        return itemIds_.size();
      }
      /**
       * <code>repeated int32 item_ids = 2 [packed = true];</code>
       */
      public int getItemIds(int index) {
        return itemIds_.get(index);
      }
      /**
       * <code>repeated int32 item_ids = 2 [packed = true];</code>
       */
      public Builder setItemIds(
          int index, int value) {
        ensureItemIdsIsMutable();
        itemIds_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 item_ids = 2 [packed = true];</code>
       */
      public Builder addItemIds(int value) {
        ensureItemIdsIsMutable();
        itemIds_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 item_ids = 2 [packed = true];</code>
       */
      public Builder addAllItemIds(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureItemIdsIsMutable();
        super.addAll(values, itemIds_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 item_ids = 2 [packed = true];</code>
       */
      public Builder clearItemIds() {
        itemIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.letsmidi.monsys.protocol.push.GetDevInfo)
    }

    static {
      defaultInstance = new GetDevInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.letsmidi.monsys.protocol.push.GetDevInfo)
  }

  public interface GetDevInfoRspOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 code = 1;
    /**
     * <code>required int32 code = 1;</code>
     */
    boolean hasCode();
    /**
     * <code>required int32 code = 1;</code>
     */
    int getCode();

    // repeated .com.letsmidi.monsys.protocol.push.IdValuePair id_value_pairs = 2;
    /**
     * <code>repeated .com.letsmidi.monsys.protocol.push.IdValuePair id_value_pairs = 2;</code>
     */
    java.util.List<com.letsmidi.monsys.protocol.push.Push.IdValuePair> 
        getIdValuePairsList();
    /**
     * <code>repeated .com.letsmidi.monsys.protocol.push.IdValuePair id_value_pairs = 2;</code>
     */
    com.letsmidi.monsys.protocol.push.Push.IdValuePair getIdValuePairs(int index);
    /**
     * <code>repeated .com.letsmidi.monsys.protocol.push.IdValuePair id_value_pairs = 2;</code>
     */
    int getIdValuePairsCount();
    /**
     * <code>repeated .com.letsmidi.monsys.protocol.push.IdValuePair id_value_pairs = 2;</code>
     */
    java.util.List<? extends com.letsmidi.monsys.protocol.push.Push.IdValuePairOrBuilder> 
        getIdValuePairsOrBuilderList();
    /**
     * <code>repeated .com.letsmidi.monsys.protocol.push.IdValuePair id_value_pairs = 2;</code>
     */
    com.letsmidi.monsys.protocol.push.Push.IdValuePairOrBuilder getIdValuePairsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code com.letsmidi.monsys.protocol.push.GetDevInfoRsp}
   */
  public static final class GetDevInfoRsp extends
      com.google.protobuf.GeneratedMessage
      implements GetDevInfoRspOrBuilder {
    // Use GetDevInfoRsp.newBuilder() to construct.
    private GetDevInfoRsp(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GetDevInfoRsp(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GetDevInfoRsp defaultInstance;
    public static GetDevInfoRsp getDefaultInstance() {
      return defaultInstance;
    }

    public GetDevInfoRsp getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GetDevInfoRsp(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              code_ = input.readInt32();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                idValuePairs_ = new java.util.ArrayList<com.letsmidi.monsys.protocol.push.Push.IdValuePair>();
                mutable_bitField0_ |= 0x00000002;
              }
              idValuePairs_.add(input.readMessage(com.letsmidi.monsys.protocol.push.Push.IdValuePair.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          idValuePairs_ = java.util.Collections.unmodifiableList(idValuePairs_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.letsmidi.monsys.protocol.push.Push.internal_static_com_letsmidi_monsys_protocol_push_GetDevInfoRsp_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.letsmidi.monsys.protocol.push.Push.internal_static_com_letsmidi_monsys_protocol_push_GetDevInfoRsp_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.letsmidi.monsys.protocol.push.Push.GetDevInfoRsp.class, com.letsmidi.monsys.protocol.push.Push.GetDevInfoRsp.Builder.class);
    }

    public static com.google.protobuf.Parser<GetDevInfoRsp> PARSER =
        new com.google.protobuf.AbstractParser<GetDevInfoRsp>() {
      public GetDevInfoRsp parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetDevInfoRsp(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GetDevInfoRsp> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 code = 1;
    public static final int CODE_FIELD_NUMBER = 1;
    private int code_;
    /**
     * <code>required int32 code = 1;</code>
     */
    public boolean hasCode() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 code = 1;</code>
     */
    public int getCode() {
      return code_;
    }

    // repeated .com.letsmidi.monsys.protocol.push.IdValuePair id_value_pairs = 2;
    public static final int ID_VALUE_PAIRS_FIELD_NUMBER = 2;
    private java.util.List<com.letsmidi.monsys.protocol.push.Push.IdValuePair> idValuePairs_;
    /**
     * <code>repeated .com.letsmidi.monsys.protocol.push.IdValuePair id_value_pairs = 2;</code>
     */
    public java.util.List<com.letsmidi.monsys.protocol.push.Push.IdValuePair> getIdValuePairsList() {
      return idValuePairs_;
    }
    /**
     * <code>repeated .com.letsmidi.monsys.protocol.push.IdValuePair id_value_pairs = 2;</code>
     */
    public java.util.List<? extends com.letsmidi.monsys.protocol.push.Push.IdValuePairOrBuilder> 
        getIdValuePairsOrBuilderList() {
      return idValuePairs_;
    }
    /**
     * <code>repeated .com.letsmidi.monsys.protocol.push.IdValuePair id_value_pairs = 2;</code>
     */
    public int getIdValuePairsCount() {
      return idValuePairs_.size();
    }
    /**
     * <code>repeated .com.letsmidi.monsys.protocol.push.IdValuePair id_value_pairs = 2;</code>
     */
    public com.letsmidi.monsys.protocol.push.Push.IdValuePair getIdValuePairs(int index) {
      return idValuePairs_.get(index);
    }
    /**
     * <code>repeated .com.letsmidi.monsys.protocol.push.IdValuePair id_value_pairs = 2;</code>
     */
    public com.letsmidi.monsys.protocol.push.Push.IdValuePairOrBuilder getIdValuePairsOrBuilder(
        int index) {
      return idValuePairs_.get(index);
    }

    private void initFields() {
      code_ = 0;
      idValuePairs_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasCode()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getIdValuePairsCount(); i++) {
        if (!getIdValuePairs(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, code_);
      }
      for (int i = 0; i < idValuePairs_.size(); i++) {
        output.writeMessage(2, idValuePairs_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, code_);
      }
      for (int i = 0; i < idValuePairs_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, idValuePairs_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.letsmidi.monsys.protocol.push.Push.GetDevInfoRsp parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.letsmidi.monsys.protocol.push.Push.GetDevInfoRsp parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.letsmidi.monsys.protocol.push.Push.GetDevInfoRsp parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.letsmidi.monsys.protocol.push.Push.GetDevInfoRsp parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.letsmidi.monsys.protocol.push.Push.GetDevInfoRsp parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.letsmidi.monsys.protocol.push.Push.GetDevInfoRsp parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.letsmidi.monsys.protocol.push.Push.GetDevInfoRsp parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.letsmidi.monsys.protocol.push.Push.GetDevInfoRsp parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.letsmidi.monsys.protocol.push.Push.GetDevInfoRsp parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.letsmidi.monsys.protocol.push.Push.GetDevInfoRsp parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.letsmidi.monsys.protocol.push.Push.GetDevInfoRsp prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.letsmidi.monsys.protocol.push.GetDevInfoRsp}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.letsmidi.monsys.protocol.push.Push.GetDevInfoRspOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.letsmidi.monsys.protocol.push.Push.internal_static_com_letsmidi_monsys_protocol_push_GetDevInfoRsp_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.letsmidi.monsys.protocol.push.Push.internal_static_com_letsmidi_monsys_protocol_push_GetDevInfoRsp_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.letsmidi.monsys.protocol.push.Push.GetDevInfoRsp.class, com.letsmidi.monsys.protocol.push.Push.GetDevInfoRsp.Builder.class);
      }

      // Construct using com.letsmidi.monsys.protocol.push.Push.GetDevInfoRsp.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getIdValuePairsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        code_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (idValuePairsBuilder_ == null) {
          idValuePairs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          idValuePairsBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.letsmidi.monsys.protocol.push.Push.internal_static_com_letsmidi_monsys_protocol_push_GetDevInfoRsp_descriptor;
      }

      public com.letsmidi.monsys.protocol.push.Push.GetDevInfoRsp getDefaultInstanceForType() {
        return com.letsmidi.monsys.protocol.push.Push.GetDevInfoRsp.getDefaultInstance();
      }

      public com.letsmidi.monsys.protocol.push.Push.GetDevInfoRsp build() {
        com.letsmidi.monsys.protocol.push.Push.GetDevInfoRsp result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.letsmidi.monsys.protocol.push.Push.GetDevInfoRsp buildPartial() {
        com.letsmidi.monsys.protocol.push.Push.GetDevInfoRsp result = new com.letsmidi.monsys.protocol.push.Push.GetDevInfoRsp(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.code_ = code_;
        if (idValuePairsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            idValuePairs_ = java.util.Collections.unmodifiableList(idValuePairs_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.idValuePairs_ = idValuePairs_;
        } else {
          result.idValuePairs_ = idValuePairsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.letsmidi.monsys.protocol.push.Push.GetDevInfoRsp) {
          return mergeFrom((com.letsmidi.monsys.protocol.push.Push.GetDevInfoRsp)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.letsmidi.monsys.protocol.push.Push.GetDevInfoRsp other) {
        if (other == com.letsmidi.monsys.protocol.push.Push.GetDevInfoRsp.getDefaultInstance()) return this;
        if (other.hasCode()) {
          setCode(other.getCode());
        }
        if (idValuePairsBuilder_ == null) {
          if (!other.idValuePairs_.isEmpty()) {
            if (idValuePairs_.isEmpty()) {
              idValuePairs_ = other.idValuePairs_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureIdValuePairsIsMutable();
              idValuePairs_.addAll(other.idValuePairs_);
            }
            onChanged();
          }
        } else {
          if (!other.idValuePairs_.isEmpty()) {
            if (idValuePairsBuilder_.isEmpty()) {
              idValuePairsBuilder_.dispose();
              idValuePairsBuilder_ = null;
              idValuePairs_ = other.idValuePairs_;
              bitField0_ = (bitField0_ & ~0x00000002);
              idValuePairsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getIdValuePairsFieldBuilder() : null;
            } else {
              idValuePairsBuilder_.addAllMessages(other.idValuePairs_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasCode()) {
          
          return false;
        }
        for (int i = 0; i < getIdValuePairsCount(); i++) {
          if (!getIdValuePairs(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.letsmidi.monsys.protocol.push.Push.GetDevInfoRsp parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.letsmidi.monsys.protocol.push.Push.GetDevInfoRsp) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 code = 1;
      private int code_ ;
      /**
       * <code>required int32 code = 1;</code>
       */
      public boolean hasCode() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 code = 1;</code>
       */
      public int getCode() {
        return code_;
      }
      /**
       * <code>required int32 code = 1;</code>
       */
      public Builder setCode(int value) {
        bitField0_ |= 0x00000001;
        code_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 code = 1;</code>
       */
      public Builder clearCode() {
        bitField0_ = (bitField0_ & ~0x00000001);
        code_ = 0;
        onChanged();
        return this;
      }

      // repeated .com.letsmidi.monsys.protocol.push.IdValuePair id_value_pairs = 2;
      private java.util.List<com.letsmidi.monsys.protocol.push.Push.IdValuePair> idValuePairs_ =
        java.util.Collections.emptyList();
      private void ensureIdValuePairsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          idValuePairs_ = new java.util.ArrayList<com.letsmidi.monsys.protocol.push.Push.IdValuePair>(idValuePairs_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.letsmidi.monsys.protocol.push.Push.IdValuePair, com.letsmidi.monsys.protocol.push.Push.IdValuePair.Builder, com.letsmidi.monsys.protocol.push.Push.IdValuePairOrBuilder> idValuePairsBuilder_;

      /**
       * <code>repeated .com.letsmidi.monsys.protocol.push.IdValuePair id_value_pairs = 2;</code>
       */
      public java.util.List<com.letsmidi.monsys.protocol.push.Push.IdValuePair> getIdValuePairsList() {
        if (idValuePairsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(idValuePairs_);
        } else {
          return idValuePairsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.letsmidi.monsys.protocol.push.IdValuePair id_value_pairs = 2;</code>
       */
      public int getIdValuePairsCount() {
        if (idValuePairsBuilder_ == null) {
          return idValuePairs_.size();
        } else {
          return idValuePairsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.letsmidi.monsys.protocol.push.IdValuePair id_value_pairs = 2;</code>
       */
      public com.letsmidi.monsys.protocol.push.Push.IdValuePair getIdValuePairs(int index) {
        if (idValuePairsBuilder_ == null) {
          return idValuePairs_.get(index);
        } else {
          return idValuePairsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.letsmidi.monsys.protocol.push.IdValuePair id_value_pairs = 2;</code>
       */
      public Builder setIdValuePairs(
          int index, com.letsmidi.monsys.protocol.push.Push.IdValuePair value) {
        if (idValuePairsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureIdValuePairsIsMutable();
          idValuePairs_.set(index, value);
          onChanged();
        } else {
          idValuePairsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.letsmidi.monsys.protocol.push.IdValuePair id_value_pairs = 2;</code>
       */
      public Builder setIdValuePairs(
          int index, com.letsmidi.monsys.protocol.push.Push.IdValuePair.Builder builderForValue) {
        if (idValuePairsBuilder_ == null) {
          ensureIdValuePairsIsMutable();
          idValuePairs_.set(index, builderForValue.build());
          onChanged();
        } else {
          idValuePairsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.letsmidi.monsys.protocol.push.IdValuePair id_value_pairs = 2;</code>
       */
      public Builder addIdValuePairs(com.letsmidi.monsys.protocol.push.Push.IdValuePair value) {
        if (idValuePairsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureIdValuePairsIsMutable();
          idValuePairs_.add(value);
          onChanged();
        } else {
          idValuePairsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.letsmidi.monsys.protocol.push.IdValuePair id_value_pairs = 2;</code>
       */
      public Builder addIdValuePairs(
          int index, com.letsmidi.monsys.protocol.push.Push.IdValuePair value) {
        if (idValuePairsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureIdValuePairsIsMutable();
          idValuePairs_.add(index, value);
          onChanged();
        } else {
          idValuePairsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.letsmidi.monsys.protocol.push.IdValuePair id_value_pairs = 2;</code>
       */
      public Builder addIdValuePairs(
          com.letsmidi.monsys.protocol.push.Push.IdValuePair.Builder builderForValue) {
        if (idValuePairsBuilder_ == null) {
          ensureIdValuePairsIsMutable();
          idValuePairs_.add(builderForValue.build());
          onChanged();
        } else {
          idValuePairsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.letsmidi.monsys.protocol.push.IdValuePair id_value_pairs = 2;</code>
       */
      public Builder addIdValuePairs(
          int index, com.letsmidi.monsys.protocol.push.Push.IdValuePair.Builder builderForValue) {
        if (idValuePairsBuilder_ == null) {
          ensureIdValuePairsIsMutable();
          idValuePairs_.add(index, builderForValue.build());
          onChanged();
        } else {
          idValuePairsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.letsmidi.monsys.protocol.push.IdValuePair id_value_pairs = 2;</code>
       */
      public Builder addAllIdValuePairs(
          java.lang.Iterable<? extends com.letsmidi.monsys.protocol.push.Push.IdValuePair> values) {
        if (idValuePairsBuilder_ == null) {
          ensureIdValuePairsIsMutable();
          super.addAll(values, idValuePairs_);
          onChanged();
        } else {
          idValuePairsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.letsmidi.monsys.protocol.push.IdValuePair id_value_pairs = 2;</code>
       */
      public Builder clearIdValuePairs() {
        if (idValuePairsBuilder_ == null) {
          idValuePairs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          idValuePairsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.letsmidi.monsys.protocol.push.IdValuePair id_value_pairs = 2;</code>
       */
      public Builder removeIdValuePairs(int index) {
        if (idValuePairsBuilder_ == null) {
          ensureIdValuePairsIsMutable();
          idValuePairs_.remove(index);
          onChanged();
        } else {
          idValuePairsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.letsmidi.monsys.protocol.push.IdValuePair id_value_pairs = 2;</code>
       */
      public com.letsmidi.monsys.protocol.push.Push.IdValuePair.Builder getIdValuePairsBuilder(
          int index) {
        return getIdValuePairsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.letsmidi.monsys.protocol.push.IdValuePair id_value_pairs = 2;</code>
       */
      public com.letsmidi.monsys.protocol.push.Push.IdValuePairOrBuilder getIdValuePairsOrBuilder(
          int index) {
        if (idValuePairsBuilder_ == null) {
          return idValuePairs_.get(index);  } else {
          return idValuePairsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.letsmidi.monsys.protocol.push.IdValuePair id_value_pairs = 2;</code>
       */
      public java.util.List<? extends com.letsmidi.monsys.protocol.push.Push.IdValuePairOrBuilder> 
           getIdValuePairsOrBuilderList() {
        if (idValuePairsBuilder_ != null) {
          return idValuePairsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(idValuePairs_);
        }
      }
      /**
       * <code>repeated .com.letsmidi.monsys.protocol.push.IdValuePair id_value_pairs = 2;</code>
       */
      public com.letsmidi.monsys.protocol.push.Push.IdValuePair.Builder addIdValuePairsBuilder() {
        return getIdValuePairsFieldBuilder().addBuilder(
            com.letsmidi.monsys.protocol.push.Push.IdValuePair.getDefaultInstance());
      }
      /**
       * <code>repeated .com.letsmidi.monsys.protocol.push.IdValuePair id_value_pairs = 2;</code>
       */
      public com.letsmidi.monsys.protocol.push.Push.IdValuePair.Builder addIdValuePairsBuilder(
          int index) {
        return getIdValuePairsFieldBuilder().addBuilder(
            index, com.letsmidi.monsys.protocol.push.Push.IdValuePair.getDefaultInstance());
      }
      /**
       * <code>repeated .com.letsmidi.monsys.protocol.push.IdValuePair id_value_pairs = 2;</code>
       */
      public java.util.List<com.letsmidi.monsys.protocol.push.Push.IdValuePair.Builder> 
           getIdValuePairsBuilderList() {
        return getIdValuePairsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.letsmidi.monsys.protocol.push.Push.IdValuePair, com.letsmidi.monsys.protocol.push.Push.IdValuePair.Builder, com.letsmidi.monsys.protocol.push.Push.IdValuePairOrBuilder> 
          getIdValuePairsFieldBuilder() {
        if (idValuePairsBuilder_ == null) {
          idValuePairsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.letsmidi.monsys.protocol.push.Push.IdValuePair, com.letsmidi.monsys.protocol.push.Push.IdValuePair.Builder, com.letsmidi.monsys.protocol.push.Push.IdValuePairOrBuilder>(
                  idValuePairs_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          idValuePairs_ = null;
        }
        return idValuePairsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:com.letsmidi.monsys.protocol.push.GetDevInfoRsp)
    }

    static {
      defaultInstance = new GetDevInfoRsp(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.letsmidi.monsys.protocol.push.GetDevInfoRsp)
  }

  public interface SetDevInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 addr = 1;
    /**
     * <code>required int32 addr = 1;</code>
     */
    boolean hasAddr();
    /**
     * <code>required int32 addr = 1;</code>
     */
    int getAddr();

    // repeated .com.letsmidi.monsys.protocol.push.IdValuePair id_value_pairs = 2;
    /**
     * <code>repeated .com.letsmidi.monsys.protocol.push.IdValuePair id_value_pairs = 2;</code>
     */
    java.util.List<com.letsmidi.monsys.protocol.push.Push.IdValuePair> 
        getIdValuePairsList();
    /**
     * <code>repeated .com.letsmidi.monsys.protocol.push.IdValuePair id_value_pairs = 2;</code>
     */
    com.letsmidi.monsys.protocol.push.Push.IdValuePair getIdValuePairs(int index);
    /**
     * <code>repeated .com.letsmidi.monsys.protocol.push.IdValuePair id_value_pairs = 2;</code>
     */
    int getIdValuePairsCount();
    /**
     * <code>repeated .com.letsmidi.monsys.protocol.push.IdValuePair id_value_pairs = 2;</code>
     */
    java.util.List<? extends com.letsmidi.monsys.protocol.push.Push.IdValuePairOrBuilder> 
        getIdValuePairsOrBuilderList();
    /**
     * <code>repeated .com.letsmidi.monsys.protocol.push.IdValuePair id_value_pairs = 2;</code>
     */
    com.letsmidi.monsys.protocol.push.Push.IdValuePairOrBuilder getIdValuePairsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code com.letsmidi.monsys.protocol.push.SetDevInfo}
   */
  public static final class SetDevInfo extends
      com.google.protobuf.GeneratedMessage
      implements SetDevInfoOrBuilder {
    // Use SetDevInfo.newBuilder() to construct.
    private SetDevInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SetDevInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SetDevInfo defaultInstance;
    public static SetDevInfo getDefaultInstance() {
      return defaultInstance;
    }

    public SetDevInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SetDevInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              addr_ = input.readInt32();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                idValuePairs_ = new java.util.ArrayList<com.letsmidi.monsys.protocol.push.Push.IdValuePair>();
                mutable_bitField0_ |= 0x00000002;
              }
              idValuePairs_.add(input.readMessage(com.letsmidi.monsys.protocol.push.Push.IdValuePair.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          idValuePairs_ = java.util.Collections.unmodifiableList(idValuePairs_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.letsmidi.monsys.protocol.push.Push.internal_static_com_letsmidi_monsys_protocol_push_SetDevInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.letsmidi.monsys.protocol.push.Push.internal_static_com_letsmidi_monsys_protocol_push_SetDevInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.letsmidi.monsys.protocol.push.Push.SetDevInfo.class, com.letsmidi.monsys.protocol.push.Push.SetDevInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<SetDevInfo> PARSER =
        new com.google.protobuf.AbstractParser<SetDevInfo>() {
      public SetDevInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SetDevInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SetDevInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 addr = 1;
    public static final int ADDR_FIELD_NUMBER = 1;
    private int addr_;
    /**
     * <code>required int32 addr = 1;</code>
     */
    public boolean hasAddr() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 addr = 1;</code>
     */
    public int getAddr() {
      return addr_;
    }

    // repeated .com.letsmidi.monsys.protocol.push.IdValuePair id_value_pairs = 2;
    public static final int ID_VALUE_PAIRS_FIELD_NUMBER = 2;
    private java.util.List<com.letsmidi.monsys.protocol.push.Push.IdValuePair> idValuePairs_;
    /**
     * <code>repeated .com.letsmidi.monsys.protocol.push.IdValuePair id_value_pairs = 2;</code>
     */
    public java.util.List<com.letsmidi.monsys.protocol.push.Push.IdValuePair> getIdValuePairsList() {
      return idValuePairs_;
    }
    /**
     * <code>repeated .com.letsmidi.monsys.protocol.push.IdValuePair id_value_pairs = 2;</code>
     */
    public java.util.List<? extends com.letsmidi.monsys.protocol.push.Push.IdValuePairOrBuilder> 
        getIdValuePairsOrBuilderList() {
      return idValuePairs_;
    }
    /**
     * <code>repeated .com.letsmidi.monsys.protocol.push.IdValuePair id_value_pairs = 2;</code>
     */
    public int getIdValuePairsCount() {
      return idValuePairs_.size();
    }
    /**
     * <code>repeated .com.letsmidi.monsys.protocol.push.IdValuePair id_value_pairs = 2;</code>
     */
    public com.letsmidi.monsys.protocol.push.Push.IdValuePair getIdValuePairs(int index) {
      return idValuePairs_.get(index);
    }
    /**
     * <code>repeated .com.letsmidi.monsys.protocol.push.IdValuePair id_value_pairs = 2;</code>
     */
    public com.letsmidi.monsys.protocol.push.Push.IdValuePairOrBuilder getIdValuePairsOrBuilder(
        int index) {
      return idValuePairs_.get(index);
    }

    private void initFields() {
      addr_ = 0;
      idValuePairs_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasAddr()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getIdValuePairsCount(); i++) {
        if (!getIdValuePairs(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, addr_);
      }
      for (int i = 0; i < idValuePairs_.size(); i++) {
        output.writeMessage(2, idValuePairs_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, addr_);
      }
      for (int i = 0; i < idValuePairs_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, idValuePairs_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.letsmidi.monsys.protocol.push.Push.SetDevInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.letsmidi.monsys.protocol.push.Push.SetDevInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.letsmidi.monsys.protocol.push.Push.SetDevInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.letsmidi.monsys.protocol.push.Push.SetDevInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.letsmidi.monsys.protocol.push.Push.SetDevInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.letsmidi.monsys.protocol.push.Push.SetDevInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.letsmidi.monsys.protocol.push.Push.SetDevInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.letsmidi.monsys.protocol.push.Push.SetDevInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.letsmidi.monsys.protocol.push.Push.SetDevInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.letsmidi.monsys.protocol.push.Push.SetDevInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.letsmidi.monsys.protocol.push.Push.SetDevInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.letsmidi.monsys.protocol.push.SetDevInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.letsmidi.monsys.protocol.push.Push.SetDevInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.letsmidi.monsys.protocol.push.Push.internal_static_com_letsmidi_monsys_protocol_push_SetDevInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.letsmidi.monsys.protocol.push.Push.internal_static_com_letsmidi_monsys_protocol_push_SetDevInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.letsmidi.monsys.protocol.push.Push.SetDevInfo.class, com.letsmidi.monsys.protocol.push.Push.SetDevInfo.Builder.class);
      }

      // Construct using com.letsmidi.monsys.protocol.push.Push.SetDevInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getIdValuePairsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        addr_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (idValuePairsBuilder_ == null) {
          idValuePairs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          idValuePairsBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.letsmidi.monsys.protocol.push.Push.internal_static_com_letsmidi_monsys_protocol_push_SetDevInfo_descriptor;
      }

      public com.letsmidi.monsys.protocol.push.Push.SetDevInfo getDefaultInstanceForType() {
        return com.letsmidi.monsys.protocol.push.Push.SetDevInfo.getDefaultInstance();
      }

      public com.letsmidi.monsys.protocol.push.Push.SetDevInfo build() {
        com.letsmidi.monsys.protocol.push.Push.SetDevInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.letsmidi.monsys.protocol.push.Push.SetDevInfo buildPartial() {
        com.letsmidi.monsys.protocol.push.Push.SetDevInfo result = new com.letsmidi.monsys.protocol.push.Push.SetDevInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.addr_ = addr_;
        if (idValuePairsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            idValuePairs_ = java.util.Collections.unmodifiableList(idValuePairs_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.idValuePairs_ = idValuePairs_;
        } else {
          result.idValuePairs_ = idValuePairsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.letsmidi.monsys.protocol.push.Push.SetDevInfo) {
          return mergeFrom((com.letsmidi.monsys.protocol.push.Push.SetDevInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.letsmidi.monsys.protocol.push.Push.SetDevInfo other) {
        if (other == com.letsmidi.monsys.protocol.push.Push.SetDevInfo.getDefaultInstance()) return this;
        if (other.hasAddr()) {
          setAddr(other.getAddr());
        }
        if (idValuePairsBuilder_ == null) {
          if (!other.idValuePairs_.isEmpty()) {
            if (idValuePairs_.isEmpty()) {
              idValuePairs_ = other.idValuePairs_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureIdValuePairsIsMutable();
              idValuePairs_.addAll(other.idValuePairs_);
            }
            onChanged();
          }
        } else {
          if (!other.idValuePairs_.isEmpty()) {
            if (idValuePairsBuilder_.isEmpty()) {
              idValuePairsBuilder_.dispose();
              idValuePairsBuilder_ = null;
              idValuePairs_ = other.idValuePairs_;
              bitField0_ = (bitField0_ & ~0x00000002);
              idValuePairsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getIdValuePairsFieldBuilder() : null;
            } else {
              idValuePairsBuilder_.addAllMessages(other.idValuePairs_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasAddr()) {
          
          return false;
        }
        for (int i = 0; i < getIdValuePairsCount(); i++) {
          if (!getIdValuePairs(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.letsmidi.monsys.protocol.push.Push.SetDevInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.letsmidi.monsys.protocol.push.Push.SetDevInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 addr = 1;
      private int addr_ ;
      /**
       * <code>required int32 addr = 1;</code>
       */
      public boolean hasAddr() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 addr = 1;</code>
       */
      public int getAddr() {
        return addr_;
      }
      /**
       * <code>required int32 addr = 1;</code>
       */
      public Builder setAddr(int value) {
        bitField0_ |= 0x00000001;
        addr_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 addr = 1;</code>
       */
      public Builder clearAddr() {
        bitField0_ = (bitField0_ & ~0x00000001);
        addr_ = 0;
        onChanged();
        return this;
      }

      // repeated .com.letsmidi.monsys.protocol.push.IdValuePair id_value_pairs = 2;
      private java.util.List<com.letsmidi.monsys.protocol.push.Push.IdValuePair> idValuePairs_ =
        java.util.Collections.emptyList();
      private void ensureIdValuePairsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          idValuePairs_ = new java.util.ArrayList<com.letsmidi.monsys.protocol.push.Push.IdValuePair>(idValuePairs_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.letsmidi.monsys.protocol.push.Push.IdValuePair, com.letsmidi.monsys.protocol.push.Push.IdValuePair.Builder, com.letsmidi.monsys.protocol.push.Push.IdValuePairOrBuilder> idValuePairsBuilder_;

      /**
       * <code>repeated .com.letsmidi.monsys.protocol.push.IdValuePair id_value_pairs = 2;</code>
       */
      public java.util.List<com.letsmidi.monsys.protocol.push.Push.IdValuePair> getIdValuePairsList() {
        if (idValuePairsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(idValuePairs_);
        } else {
          return idValuePairsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.letsmidi.monsys.protocol.push.IdValuePair id_value_pairs = 2;</code>
       */
      public int getIdValuePairsCount() {
        if (idValuePairsBuilder_ == null) {
          return idValuePairs_.size();
        } else {
          return idValuePairsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.letsmidi.monsys.protocol.push.IdValuePair id_value_pairs = 2;</code>
       */
      public com.letsmidi.monsys.protocol.push.Push.IdValuePair getIdValuePairs(int index) {
        if (idValuePairsBuilder_ == null) {
          return idValuePairs_.get(index);
        } else {
          return idValuePairsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.letsmidi.monsys.protocol.push.IdValuePair id_value_pairs = 2;</code>
       */
      public Builder setIdValuePairs(
          int index, com.letsmidi.monsys.protocol.push.Push.IdValuePair value) {
        if (idValuePairsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureIdValuePairsIsMutable();
          idValuePairs_.set(index, value);
          onChanged();
        } else {
          idValuePairsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.letsmidi.monsys.protocol.push.IdValuePair id_value_pairs = 2;</code>
       */
      public Builder setIdValuePairs(
          int index, com.letsmidi.monsys.protocol.push.Push.IdValuePair.Builder builderForValue) {
        if (idValuePairsBuilder_ == null) {
          ensureIdValuePairsIsMutable();
          idValuePairs_.set(index, builderForValue.build());
          onChanged();
        } else {
          idValuePairsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.letsmidi.monsys.protocol.push.IdValuePair id_value_pairs = 2;</code>
       */
      public Builder addIdValuePairs(com.letsmidi.monsys.protocol.push.Push.IdValuePair value) {
        if (idValuePairsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureIdValuePairsIsMutable();
          idValuePairs_.add(value);
          onChanged();
        } else {
          idValuePairsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.letsmidi.monsys.protocol.push.IdValuePair id_value_pairs = 2;</code>
       */
      public Builder addIdValuePairs(
          int index, com.letsmidi.monsys.protocol.push.Push.IdValuePair value) {
        if (idValuePairsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureIdValuePairsIsMutable();
          idValuePairs_.add(index, value);
          onChanged();
        } else {
          idValuePairsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.letsmidi.monsys.protocol.push.IdValuePair id_value_pairs = 2;</code>
       */
      public Builder addIdValuePairs(
          com.letsmidi.monsys.protocol.push.Push.IdValuePair.Builder builderForValue) {
        if (idValuePairsBuilder_ == null) {
          ensureIdValuePairsIsMutable();
          idValuePairs_.add(builderForValue.build());
          onChanged();
        } else {
          idValuePairsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.letsmidi.monsys.protocol.push.IdValuePair id_value_pairs = 2;</code>
       */
      public Builder addIdValuePairs(
          int index, com.letsmidi.monsys.protocol.push.Push.IdValuePair.Builder builderForValue) {
        if (idValuePairsBuilder_ == null) {
          ensureIdValuePairsIsMutable();
          idValuePairs_.add(index, builderForValue.build());
          onChanged();
        } else {
          idValuePairsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.letsmidi.monsys.protocol.push.IdValuePair id_value_pairs = 2;</code>
       */
      public Builder addAllIdValuePairs(
          java.lang.Iterable<? extends com.letsmidi.monsys.protocol.push.Push.IdValuePair> values) {
        if (idValuePairsBuilder_ == null) {
          ensureIdValuePairsIsMutable();
          super.addAll(values, idValuePairs_);
          onChanged();
        } else {
          idValuePairsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.letsmidi.monsys.protocol.push.IdValuePair id_value_pairs = 2;</code>
       */
      public Builder clearIdValuePairs() {
        if (idValuePairsBuilder_ == null) {
          idValuePairs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          idValuePairsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.letsmidi.monsys.protocol.push.IdValuePair id_value_pairs = 2;</code>
       */
      public Builder removeIdValuePairs(int index) {
        if (idValuePairsBuilder_ == null) {
          ensureIdValuePairsIsMutable();
          idValuePairs_.remove(index);
          onChanged();
        } else {
          idValuePairsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.letsmidi.monsys.protocol.push.IdValuePair id_value_pairs = 2;</code>
       */
      public com.letsmidi.monsys.protocol.push.Push.IdValuePair.Builder getIdValuePairsBuilder(
          int index) {
        return getIdValuePairsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.letsmidi.monsys.protocol.push.IdValuePair id_value_pairs = 2;</code>
       */
      public com.letsmidi.monsys.protocol.push.Push.IdValuePairOrBuilder getIdValuePairsOrBuilder(
          int index) {
        if (idValuePairsBuilder_ == null) {
          return idValuePairs_.get(index);  } else {
          return idValuePairsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.letsmidi.monsys.protocol.push.IdValuePair id_value_pairs = 2;</code>
       */
      public java.util.List<? extends com.letsmidi.monsys.protocol.push.Push.IdValuePairOrBuilder> 
           getIdValuePairsOrBuilderList() {
        if (idValuePairsBuilder_ != null) {
          return idValuePairsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(idValuePairs_);
        }
      }
      /**
       * <code>repeated .com.letsmidi.monsys.protocol.push.IdValuePair id_value_pairs = 2;</code>
       */
      public com.letsmidi.monsys.protocol.push.Push.IdValuePair.Builder addIdValuePairsBuilder() {
        return getIdValuePairsFieldBuilder().addBuilder(
            com.letsmidi.monsys.protocol.push.Push.IdValuePair.getDefaultInstance());
      }
      /**
       * <code>repeated .com.letsmidi.monsys.protocol.push.IdValuePair id_value_pairs = 2;</code>
       */
      public com.letsmidi.monsys.protocol.push.Push.IdValuePair.Builder addIdValuePairsBuilder(
          int index) {
        return getIdValuePairsFieldBuilder().addBuilder(
            index, com.letsmidi.monsys.protocol.push.Push.IdValuePair.getDefaultInstance());
      }
      /**
       * <code>repeated .com.letsmidi.monsys.protocol.push.IdValuePair id_value_pairs = 2;</code>
       */
      public java.util.List<com.letsmidi.monsys.protocol.push.Push.IdValuePair.Builder> 
           getIdValuePairsBuilderList() {
        return getIdValuePairsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.letsmidi.monsys.protocol.push.Push.IdValuePair, com.letsmidi.monsys.protocol.push.Push.IdValuePair.Builder, com.letsmidi.monsys.protocol.push.Push.IdValuePairOrBuilder> 
          getIdValuePairsFieldBuilder() {
        if (idValuePairsBuilder_ == null) {
          idValuePairsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.letsmidi.monsys.protocol.push.Push.IdValuePair, com.letsmidi.monsys.protocol.push.Push.IdValuePair.Builder, com.letsmidi.monsys.protocol.push.Push.IdValuePairOrBuilder>(
                  idValuePairs_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          idValuePairs_ = null;
        }
        return idValuePairsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:com.letsmidi.monsys.protocol.push.SetDevInfo)
    }

    static {
      defaultInstance = new SetDevInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.letsmidi.monsys.protocol.push.SetDevInfo)
  }

  public interface SetDevInfoRspOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 code = 1;
    /**
     * <code>required int32 code = 1;</code>
     */
    boolean hasCode();
    /**
     * <code>required int32 code = 1;</code>
     */
    int getCode();
  }
  /**
   * Protobuf type {@code com.letsmidi.monsys.protocol.push.SetDevInfoRsp}
   */
  public static final class SetDevInfoRsp extends
      com.google.protobuf.GeneratedMessage
      implements SetDevInfoRspOrBuilder {
    // Use SetDevInfoRsp.newBuilder() to construct.
    private SetDevInfoRsp(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SetDevInfoRsp(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SetDevInfoRsp defaultInstance;
    public static SetDevInfoRsp getDefaultInstance() {
      return defaultInstance;
    }

    public SetDevInfoRsp getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SetDevInfoRsp(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              code_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.letsmidi.monsys.protocol.push.Push.internal_static_com_letsmidi_monsys_protocol_push_SetDevInfoRsp_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.letsmidi.monsys.protocol.push.Push.internal_static_com_letsmidi_monsys_protocol_push_SetDevInfoRsp_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.letsmidi.monsys.protocol.push.Push.SetDevInfoRsp.class, com.letsmidi.monsys.protocol.push.Push.SetDevInfoRsp.Builder.class);
    }

    public static com.google.protobuf.Parser<SetDevInfoRsp> PARSER =
        new com.google.protobuf.AbstractParser<SetDevInfoRsp>() {
      public SetDevInfoRsp parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SetDevInfoRsp(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SetDevInfoRsp> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 code = 1;
    public static final int CODE_FIELD_NUMBER = 1;
    private int code_;
    /**
     * <code>required int32 code = 1;</code>
     */
    public boolean hasCode() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 code = 1;</code>
     */
    public int getCode() {
      return code_;
    }

    private void initFields() {
      code_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasCode()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, code_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, code_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.letsmidi.monsys.protocol.push.Push.SetDevInfoRsp parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.letsmidi.monsys.protocol.push.Push.SetDevInfoRsp parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.letsmidi.monsys.protocol.push.Push.SetDevInfoRsp parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.letsmidi.monsys.protocol.push.Push.SetDevInfoRsp parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.letsmidi.monsys.protocol.push.Push.SetDevInfoRsp parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.letsmidi.monsys.protocol.push.Push.SetDevInfoRsp parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.letsmidi.monsys.protocol.push.Push.SetDevInfoRsp parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.letsmidi.monsys.protocol.push.Push.SetDevInfoRsp parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.letsmidi.monsys.protocol.push.Push.SetDevInfoRsp parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.letsmidi.monsys.protocol.push.Push.SetDevInfoRsp parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.letsmidi.monsys.protocol.push.Push.SetDevInfoRsp prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.letsmidi.monsys.protocol.push.SetDevInfoRsp}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.letsmidi.monsys.protocol.push.Push.SetDevInfoRspOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.letsmidi.monsys.protocol.push.Push.internal_static_com_letsmidi_monsys_protocol_push_SetDevInfoRsp_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.letsmidi.monsys.protocol.push.Push.internal_static_com_letsmidi_monsys_protocol_push_SetDevInfoRsp_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.letsmidi.monsys.protocol.push.Push.SetDevInfoRsp.class, com.letsmidi.monsys.protocol.push.Push.SetDevInfoRsp.Builder.class);
      }

      // Construct using com.letsmidi.monsys.protocol.push.Push.SetDevInfoRsp.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        code_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.letsmidi.monsys.protocol.push.Push.internal_static_com_letsmidi_monsys_protocol_push_SetDevInfoRsp_descriptor;
      }

      public com.letsmidi.monsys.protocol.push.Push.SetDevInfoRsp getDefaultInstanceForType() {
        return com.letsmidi.monsys.protocol.push.Push.SetDevInfoRsp.getDefaultInstance();
      }

      public com.letsmidi.monsys.protocol.push.Push.SetDevInfoRsp build() {
        com.letsmidi.monsys.protocol.push.Push.SetDevInfoRsp result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.letsmidi.monsys.protocol.push.Push.SetDevInfoRsp buildPartial() {
        com.letsmidi.monsys.protocol.push.Push.SetDevInfoRsp result = new com.letsmidi.monsys.protocol.push.Push.SetDevInfoRsp(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.code_ = code_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.letsmidi.monsys.protocol.push.Push.SetDevInfoRsp) {
          return mergeFrom((com.letsmidi.monsys.protocol.push.Push.SetDevInfoRsp)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.letsmidi.monsys.protocol.push.Push.SetDevInfoRsp other) {
        if (other == com.letsmidi.monsys.protocol.push.Push.SetDevInfoRsp.getDefaultInstance()) return this;
        if (other.hasCode()) {
          setCode(other.getCode());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasCode()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.letsmidi.monsys.protocol.push.Push.SetDevInfoRsp parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.letsmidi.monsys.protocol.push.Push.SetDevInfoRsp) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 code = 1;
      private int code_ ;
      /**
       * <code>required int32 code = 1;</code>
       */
      public boolean hasCode() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 code = 1;</code>
       */
      public int getCode() {
        return code_;
      }
      /**
       * <code>required int32 code = 1;</code>
       */
      public Builder setCode(int value) {
        bitField0_ |= 0x00000001;
        code_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 code = 1;</code>
       */
      public Builder clearCode() {
        bitField0_ = (bitField0_ & ~0x00000001);
        code_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.letsmidi.monsys.protocol.push.SetDevInfoRsp)
    }

    static {
      defaultInstance = new SetDevInfoRsp(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.letsmidi.monsys.protocol.push.SetDevInfoRsp)
  }

  public interface UserRegisterOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string nickname = 1;
    /**
     * <code>required string nickname = 1;</code>
     */
    boolean hasNickname();
    /**
     * <code>required string nickname = 1;</code>
     */
    java.lang.String getNickname();
    /**
     * <code>required string nickname = 1;</code>
     */
    com.google.protobuf.ByteString
        getNicknameBytes();

    // required string account = 2;
    /**
     * <code>required string account = 2;</code>
     */
    boolean hasAccount();
    /**
     * <code>required string account = 2;</code>
     */
    java.lang.String getAccount();
    /**
     * <code>required string account = 2;</code>
     */
    com.google.protobuf.ByteString
        getAccountBytes();

    // required string password = 3;
    /**
     * <code>required string password = 3;</code>
     */
    boolean hasPassword();
    /**
     * <code>required string password = 3;</code>
     */
    java.lang.String getPassword();
    /**
     * <code>required string password = 3;</code>
     */
    com.google.protobuf.ByteString
        getPasswordBytes();
  }
  /**
   * Protobuf type {@code com.letsmidi.monsys.protocol.push.UserRegister}
   */
  public static final class UserRegister extends
      com.google.protobuf.GeneratedMessage
      implements UserRegisterOrBuilder {
    // Use UserRegister.newBuilder() to construct.
    private UserRegister(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private UserRegister(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final UserRegister defaultInstance;
    public static UserRegister getDefaultInstance() {
      return defaultInstance;
    }

    public UserRegister getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private UserRegister(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              nickname_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              account_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              password_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.letsmidi.monsys.protocol.push.Push.internal_static_com_letsmidi_monsys_protocol_push_UserRegister_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.letsmidi.monsys.protocol.push.Push.internal_static_com_letsmidi_monsys_protocol_push_UserRegister_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.letsmidi.monsys.protocol.push.Push.UserRegister.class, com.letsmidi.monsys.protocol.push.Push.UserRegister.Builder.class);
    }

    public static com.google.protobuf.Parser<UserRegister> PARSER =
        new com.google.protobuf.AbstractParser<UserRegister>() {
      public UserRegister parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new UserRegister(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<UserRegister> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string nickname = 1;
    public static final int NICKNAME_FIELD_NUMBER = 1;
    private java.lang.Object nickname_;
    /**
     * <code>required string nickname = 1;</code>
     */
    public boolean hasNickname() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string nickname = 1;</code>
     */
    public java.lang.String getNickname() {
      java.lang.Object ref = nickname_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          nickname_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string nickname = 1;</code>
     */
    public com.google.protobuf.ByteString
        getNicknameBytes() {
      java.lang.Object ref = nickname_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        nickname_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required string account = 2;
    public static final int ACCOUNT_FIELD_NUMBER = 2;
    private java.lang.Object account_;
    /**
     * <code>required string account = 2;</code>
     */
    public boolean hasAccount() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string account = 2;</code>
     */
    public java.lang.String getAccount() {
      java.lang.Object ref = account_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          account_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string account = 2;</code>
     */
    public com.google.protobuf.ByteString
        getAccountBytes() {
      java.lang.Object ref = account_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        account_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required string password = 3;
    public static final int PASSWORD_FIELD_NUMBER = 3;
    private java.lang.Object password_;
    /**
     * <code>required string password = 3;</code>
     */
    public boolean hasPassword() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required string password = 3;</code>
     */
    public java.lang.String getPassword() {
      java.lang.Object ref = password_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          password_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string password = 3;</code>
     */
    public com.google.protobuf.ByteString
        getPasswordBytes() {
      java.lang.Object ref = password_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        password_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      nickname_ = "";
      account_ = "";
      password_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasNickname()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAccount()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPassword()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getNicknameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getAccountBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getPasswordBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getNicknameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getAccountBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getPasswordBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.letsmidi.monsys.protocol.push.Push.UserRegister parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.letsmidi.monsys.protocol.push.Push.UserRegister parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.letsmidi.monsys.protocol.push.Push.UserRegister parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.letsmidi.monsys.protocol.push.Push.UserRegister parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.letsmidi.monsys.protocol.push.Push.UserRegister parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.letsmidi.monsys.protocol.push.Push.UserRegister parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.letsmidi.monsys.protocol.push.Push.UserRegister parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.letsmidi.monsys.protocol.push.Push.UserRegister parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.letsmidi.monsys.protocol.push.Push.UserRegister parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.letsmidi.monsys.protocol.push.Push.UserRegister parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.letsmidi.monsys.protocol.push.Push.UserRegister prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.letsmidi.monsys.protocol.push.UserRegister}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.letsmidi.monsys.protocol.push.Push.UserRegisterOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.letsmidi.monsys.protocol.push.Push.internal_static_com_letsmidi_monsys_protocol_push_UserRegister_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.letsmidi.monsys.protocol.push.Push.internal_static_com_letsmidi_monsys_protocol_push_UserRegister_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.letsmidi.monsys.protocol.push.Push.UserRegister.class, com.letsmidi.monsys.protocol.push.Push.UserRegister.Builder.class);
      }

      // Construct using com.letsmidi.monsys.protocol.push.Push.UserRegister.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        nickname_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        account_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        password_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.letsmidi.monsys.protocol.push.Push.internal_static_com_letsmidi_monsys_protocol_push_UserRegister_descriptor;
      }

      public com.letsmidi.monsys.protocol.push.Push.UserRegister getDefaultInstanceForType() {
        return com.letsmidi.monsys.protocol.push.Push.UserRegister.getDefaultInstance();
      }

      public com.letsmidi.monsys.protocol.push.Push.UserRegister build() {
        com.letsmidi.monsys.protocol.push.Push.UserRegister result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.letsmidi.monsys.protocol.push.Push.UserRegister buildPartial() {
        com.letsmidi.monsys.protocol.push.Push.UserRegister result = new com.letsmidi.monsys.protocol.push.Push.UserRegister(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.nickname_ = nickname_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.account_ = account_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.password_ = password_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.letsmidi.monsys.protocol.push.Push.UserRegister) {
          return mergeFrom((com.letsmidi.monsys.protocol.push.Push.UserRegister)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.letsmidi.monsys.protocol.push.Push.UserRegister other) {
        if (other == com.letsmidi.monsys.protocol.push.Push.UserRegister.getDefaultInstance()) return this;
        if (other.hasNickname()) {
          bitField0_ |= 0x00000001;
          nickname_ = other.nickname_;
          onChanged();
        }
        if (other.hasAccount()) {
          bitField0_ |= 0x00000002;
          account_ = other.account_;
          onChanged();
        }
        if (other.hasPassword()) {
          bitField0_ |= 0x00000004;
          password_ = other.password_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasNickname()) {
          
          return false;
        }
        if (!hasAccount()) {
          
          return false;
        }
        if (!hasPassword()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.letsmidi.monsys.protocol.push.Push.UserRegister parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.letsmidi.monsys.protocol.push.Push.UserRegister) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string nickname = 1;
      private java.lang.Object nickname_ = "";
      /**
       * <code>required string nickname = 1;</code>
       */
      public boolean hasNickname() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string nickname = 1;</code>
       */
      public java.lang.String getNickname() {
        java.lang.Object ref = nickname_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          nickname_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string nickname = 1;</code>
       */
      public com.google.protobuf.ByteString
          getNicknameBytes() {
        java.lang.Object ref = nickname_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          nickname_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string nickname = 1;</code>
       */
      public Builder setNickname(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        nickname_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string nickname = 1;</code>
       */
      public Builder clearNickname() {
        bitField0_ = (bitField0_ & ~0x00000001);
        nickname_ = getDefaultInstance().getNickname();
        onChanged();
        return this;
      }
      /**
       * <code>required string nickname = 1;</code>
       */
      public Builder setNicknameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        nickname_ = value;
        onChanged();
        return this;
      }

      // required string account = 2;
      private java.lang.Object account_ = "";
      /**
       * <code>required string account = 2;</code>
       */
      public boolean hasAccount() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string account = 2;</code>
       */
      public java.lang.String getAccount() {
        java.lang.Object ref = account_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          account_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string account = 2;</code>
       */
      public com.google.protobuf.ByteString
          getAccountBytes() {
        java.lang.Object ref = account_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          account_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string account = 2;</code>
       */
      public Builder setAccount(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        account_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string account = 2;</code>
       */
      public Builder clearAccount() {
        bitField0_ = (bitField0_ & ~0x00000002);
        account_ = getDefaultInstance().getAccount();
        onChanged();
        return this;
      }
      /**
       * <code>required string account = 2;</code>
       */
      public Builder setAccountBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        account_ = value;
        onChanged();
        return this;
      }

      // required string password = 3;
      private java.lang.Object password_ = "";
      /**
       * <code>required string password = 3;</code>
       */
      public boolean hasPassword() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required string password = 3;</code>
       */
      public java.lang.String getPassword() {
        java.lang.Object ref = password_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          password_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string password = 3;</code>
       */
      public com.google.protobuf.ByteString
          getPasswordBytes() {
        java.lang.Object ref = password_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          password_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string password = 3;</code>
       */
      public Builder setPassword(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        password_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string password = 3;</code>
       */
      public Builder clearPassword() {
        bitField0_ = (bitField0_ & ~0x00000004);
        password_ = getDefaultInstance().getPassword();
        onChanged();
        return this;
      }
      /**
       * <code>required string password = 3;</code>
       */
      public Builder setPasswordBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        password_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.letsmidi.monsys.protocol.push.UserRegister)
    }

    static {
      defaultInstance = new UserRegister(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.letsmidi.monsys.protocol.push.UserRegister)
  }

  public interface UserRegisterRspOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 code = 1;
    /**
     * <code>required int32 code = 1;</code>
     */
    boolean hasCode();
    /**
     * <code>required int32 code = 1;</code>
     */
    int getCode();
  }
  /**
   * Protobuf type {@code com.letsmidi.monsys.protocol.push.UserRegisterRsp}
   */
  public static final class UserRegisterRsp extends
      com.google.protobuf.GeneratedMessage
      implements UserRegisterRspOrBuilder {
    // Use UserRegisterRsp.newBuilder() to construct.
    private UserRegisterRsp(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private UserRegisterRsp(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final UserRegisterRsp defaultInstance;
    public static UserRegisterRsp getDefaultInstance() {
      return defaultInstance;
    }

    public UserRegisterRsp getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private UserRegisterRsp(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              code_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.letsmidi.monsys.protocol.push.Push.internal_static_com_letsmidi_monsys_protocol_push_UserRegisterRsp_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.letsmidi.monsys.protocol.push.Push.internal_static_com_letsmidi_monsys_protocol_push_UserRegisterRsp_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.letsmidi.monsys.protocol.push.Push.UserRegisterRsp.class, com.letsmidi.monsys.protocol.push.Push.UserRegisterRsp.Builder.class);
    }

    public static com.google.protobuf.Parser<UserRegisterRsp> PARSER =
        new com.google.protobuf.AbstractParser<UserRegisterRsp>() {
      public UserRegisterRsp parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new UserRegisterRsp(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<UserRegisterRsp> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 code = 1;
    public static final int CODE_FIELD_NUMBER = 1;
    private int code_;
    /**
     * <code>required int32 code = 1;</code>
     */
    public boolean hasCode() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 code = 1;</code>
     */
    public int getCode() {
      return code_;
    }

    private void initFields() {
      code_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasCode()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, code_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, code_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.letsmidi.monsys.protocol.push.Push.UserRegisterRsp parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.letsmidi.monsys.protocol.push.Push.UserRegisterRsp parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.letsmidi.monsys.protocol.push.Push.UserRegisterRsp parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.letsmidi.monsys.protocol.push.Push.UserRegisterRsp parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.letsmidi.monsys.protocol.push.Push.UserRegisterRsp parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.letsmidi.monsys.protocol.push.Push.UserRegisterRsp parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.letsmidi.monsys.protocol.push.Push.UserRegisterRsp parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.letsmidi.monsys.protocol.push.Push.UserRegisterRsp parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.letsmidi.monsys.protocol.push.Push.UserRegisterRsp parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.letsmidi.monsys.protocol.push.Push.UserRegisterRsp parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.letsmidi.monsys.protocol.push.Push.UserRegisterRsp prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.letsmidi.monsys.protocol.push.UserRegisterRsp}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.letsmidi.monsys.protocol.push.Push.UserRegisterRspOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.letsmidi.monsys.protocol.push.Push.internal_static_com_letsmidi_monsys_protocol_push_UserRegisterRsp_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.letsmidi.monsys.protocol.push.Push.internal_static_com_letsmidi_monsys_protocol_push_UserRegisterRsp_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.letsmidi.monsys.protocol.push.Push.UserRegisterRsp.class, com.letsmidi.monsys.protocol.push.Push.UserRegisterRsp.Builder.class);
      }

      // Construct using com.letsmidi.monsys.protocol.push.Push.UserRegisterRsp.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        code_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.letsmidi.monsys.protocol.push.Push.internal_static_com_letsmidi_monsys_protocol_push_UserRegisterRsp_descriptor;
      }

      public com.letsmidi.monsys.protocol.push.Push.UserRegisterRsp getDefaultInstanceForType() {
        return com.letsmidi.monsys.protocol.push.Push.UserRegisterRsp.getDefaultInstance();
      }

      public com.letsmidi.monsys.protocol.push.Push.UserRegisterRsp build() {
        com.letsmidi.monsys.protocol.push.Push.UserRegisterRsp result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.letsmidi.monsys.protocol.push.Push.UserRegisterRsp buildPartial() {
        com.letsmidi.monsys.protocol.push.Push.UserRegisterRsp result = new com.letsmidi.monsys.protocol.push.Push.UserRegisterRsp(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.code_ = code_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.letsmidi.monsys.protocol.push.Push.UserRegisterRsp) {
          return mergeFrom((com.letsmidi.monsys.protocol.push.Push.UserRegisterRsp)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.letsmidi.monsys.protocol.push.Push.UserRegisterRsp other) {
        if (other == com.letsmidi.monsys.protocol.push.Push.UserRegisterRsp.getDefaultInstance()) return this;
        if (other.hasCode()) {
          setCode(other.getCode());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasCode()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.letsmidi.monsys.protocol.push.Push.UserRegisterRsp parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.letsmidi.monsys.protocol.push.Push.UserRegisterRsp) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 code = 1;
      private int code_ ;
      /**
       * <code>required int32 code = 1;</code>
       */
      public boolean hasCode() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 code = 1;</code>
       */
      public int getCode() {
        return code_;
      }
      /**
       * <code>required int32 code = 1;</code>
       */
      public Builder setCode(int value) {
        bitField0_ |= 0x00000001;
        code_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 code = 1;</code>
       */
      public Builder clearCode() {
        bitField0_ = (bitField0_ & ~0x00000001);
        code_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.letsmidi.monsys.protocol.push.UserRegisterRsp)
    }

    static {
      defaultInstance = new UserRegisterRsp(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.letsmidi.monsys.protocol.push.UserRegisterRsp)
  }

  public interface HeartbeatOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code com.letsmidi.monsys.protocol.push.Heartbeat}
   *
   * <pre>
   * required string payload = 1;
   * </pre>
   */
  public static final class Heartbeat extends
      com.google.protobuf.GeneratedMessage
      implements HeartbeatOrBuilder {
    // Use Heartbeat.newBuilder() to construct.
    private Heartbeat(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Heartbeat(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Heartbeat defaultInstance;
    public static Heartbeat getDefaultInstance() {
      return defaultInstance;
    }

    public Heartbeat getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Heartbeat(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.letsmidi.monsys.protocol.push.Push.internal_static_com_letsmidi_monsys_protocol_push_Heartbeat_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.letsmidi.monsys.protocol.push.Push.internal_static_com_letsmidi_monsys_protocol_push_Heartbeat_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.letsmidi.monsys.protocol.push.Push.Heartbeat.class, com.letsmidi.monsys.protocol.push.Push.Heartbeat.Builder.class);
    }

    public static com.google.protobuf.Parser<Heartbeat> PARSER =
        new com.google.protobuf.AbstractParser<Heartbeat>() {
      public Heartbeat parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Heartbeat(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Heartbeat> getParserForType() {
      return PARSER;
    }

    private void initFields() {
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.letsmidi.monsys.protocol.push.Push.Heartbeat parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.letsmidi.monsys.protocol.push.Push.Heartbeat parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.letsmidi.monsys.protocol.push.Push.Heartbeat parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.letsmidi.monsys.protocol.push.Push.Heartbeat parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.letsmidi.monsys.protocol.push.Push.Heartbeat parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.letsmidi.monsys.protocol.push.Push.Heartbeat parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.letsmidi.monsys.protocol.push.Push.Heartbeat parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.letsmidi.monsys.protocol.push.Push.Heartbeat parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.letsmidi.monsys.protocol.push.Push.Heartbeat parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.letsmidi.monsys.protocol.push.Push.Heartbeat parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.letsmidi.monsys.protocol.push.Push.Heartbeat prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.letsmidi.monsys.protocol.push.Heartbeat}
     *
     * <pre>
     * required string payload = 1;
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.letsmidi.monsys.protocol.push.Push.HeartbeatOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.letsmidi.monsys.protocol.push.Push.internal_static_com_letsmidi_monsys_protocol_push_Heartbeat_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.letsmidi.monsys.protocol.push.Push.internal_static_com_letsmidi_monsys_protocol_push_Heartbeat_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.letsmidi.monsys.protocol.push.Push.Heartbeat.class, com.letsmidi.monsys.protocol.push.Push.Heartbeat.Builder.class);
      }

      // Construct using com.letsmidi.monsys.protocol.push.Push.Heartbeat.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.letsmidi.monsys.protocol.push.Push.internal_static_com_letsmidi_monsys_protocol_push_Heartbeat_descriptor;
      }

      public com.letsmidi.monsys.protocol.push.Push.Heartbeat getDefaultInstanceForType() {
        return com.letsmidi.monsys.protocol.push.Push.Heartbeat.getDefaultInstance();
      }

      public com.letsmidi.monsys.protocol.push.Push.Heartbeat build() {
        com.letsmidi.monsys.protocol.push.Push.Heartbeat result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.letsmidi.monsys.protocol.push.Push.Heartbeat buildPartial() {
        com.letsmidi.monsys.protocol.push.Push.Heartbeat result = new com.letsmidi.monsys.protocol.push.Push.Heartbeat(this);
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.letsmidi.monsys.protocol.push.Push.Heartbeat) {
          return mergeFrom((com.letsmidi.monsys.protocol.push.Push.Heartbeat)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.letsmidi.monsys.protocol.push.Push.Heartbeat other) {
        if (other == com.letsmidi.monsys.protocol.push.Push.Heartbeat.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.letsmidi.monsys.protocol.push.Push.Heartbeat parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.letsmidi.monsys.protocol.push.Push.Heartbeat) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.letsmidi.monsys.protocol.push.Heartbeat)
    }

    static {
      defaultInstance = new Heartbeat(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.letsmidi.monsys.protocol.push.Heartbeat)
  }

  public interface ResponseOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 code = 1;
    /**
     * <code>required int32 code = 1;</code>
     */
    boolean hasCode();
    /**
     * <code>required int32 code = 1;</code>
     */
    int getCode();
  }
  /**
   * Protobuf type {@code com.letsmidi.monsys.protocol.push.Response}
   */
  public static final class Response extends
      com.google.protobuf.GeneratedMessage
      implements ResponseOrBuilder {
    // Use Response.newBuilder() to construct.
    private Response(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Response(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Response defaultInstance;
    public static Response getDefaultInstance() {
      return defaultInstance;
    }

    public Response getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Response(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              code_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.letsmidi.monsys.protocol.push.Push.internal_static_com_letsmidi_monsys_protocol_push_Response_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.letsmidi.monsys.protocol.push.Push.internal_static_com_letsmidi_monsys_protocol_push_Response_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.letsmidi.monsys.protocol.push.Push.Response.class, com.letsmidi.monsys.protocol.push.Push.Response.Builder.class);
    }

    public static com.google.protobuf.Parser<Response> PARSER =
        new com.google.protobuf.AbstractParser<Response>() {
      public Response parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Response(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Response> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 code = 1;
    public static final int CODE_FIELD_NUMBER = 1;
    private int code_;
    /**
     * <code>required int32 code = 1;</code>
     */
    public boolean hasCode() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 code = 1;</code>
     */
    public int getCode() {
      return code_;
    }

    private void initFields() {
      code_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasCode()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, code_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, code_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.letsmidi.monsys.protocol.push.Push.Response parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.letsmidi.monsys.protocol.push.Push.Response parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.letsmidi.monsys.protocol.push.Push.Response parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.letsmidi.monsys.protocol.push.Push.Response parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.letsmidi.monsys.protocol.push.Push.Response parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.letsmidi.monsys.protocol.push.Push.Response parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.letsmidi.monsys.protocol.push.Push.Response parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.letsmidi.monsys.protocol.push.Push.Response parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.letsmidi.monsys.protocol.push.Push.Response parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.letsmidi.monsys.protocol.push.Push.Response parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.letsmidi.monsys.protocol.push.Push.Response prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.letsmidi.monsys.protocol.push.Response}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.letsmidi.monsys.protocol.push.Push.ResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.letsmidi.monsys.protocol.push.Push.internal_static_com_letsmidi_monsys_protocol_push_Response_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.letsmidi.monsys.protocol.push.Push.internal_static_com_letsmidi_monsys_protocol_push_Response_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.letsmidi.monsys.protocol.push.Push.Response.class, com.letsmidi.monsys.protocol.push.Push.Response.Builder.class);
      }

      // Construct using com.letsmidi.monsys.protocol.push.Push.Response.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        code_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.letsmidi.monsys.protocol.push.Push.internal_static_com_letsmidi_monsys_protocol_push_Response_descriptor;
      }

      public com.letsmidi.monsys.protocol.push.Push.Response getDefaultInstanceForType() {
        return com.letsmidi.monsys.protocol.push.Push.Response.getDefaultInstance();
      }

      public com.letsmidi.monsys.protocol.push.Push.Response build() {
        com.letsmidi.monsys.protocol.push.Push.Response result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.letsmidi.monsys.protocol.push.Push.Response buildPartial() {
        com.letsmidi.monsys.protocol.push.Push.Response result = new com.letsmidi.monsys.protocol.push.Push.Response(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.code_ = code_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.letsmidi.monsys.protocol.push.Push.Response) {
          return mergeFrom((com.letsmidi.monsys.protocol.push.Push.Response)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.letsmidi.monsys.protocol.push.Push.Response other) {
        if (other == com.letsmidi.monsys.protocol.push.Push.Response.getDefaultInstance()) return this;
        if (other.hasCode()) {
          setCode(other.getCode());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasCode()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.letsmidi.monsys.protocol.push.Push.Response parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.letsmidi.monsys.protocol.push.Push.Response) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 code = 1;
      private int code_ ;
      /**
       * <code>required int32 code = 1;</code>
       */
      public boolean hasCode() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 code = 1;</code>
       */
      public int getCode() {
        return code_;
      }
      /**
       * <code>required int32 code = 1;</code>
       */
      public Builder setCode(int value) {
        bitField0_ |= 0x00000001;
        code_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 code = 1;</code>
       */
      public Builder clearCode() {
        bitField0_ = (bitField0_ & ~0x00000001);
        code_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.letsmidi.monsys.protocol.push.Response)
    }

    static {
      defaultInstance = new Response(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.letsmidi.monsys.protocol.push.Response)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_letsmidi_monsys_protocol_push_IdValuePair_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_letsmidi_monsys_protocol_push_IdValuePair_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_letsmidi_monsys_protocol_push_FGatewayInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_letsmidi_monsys_protocol_push_FGatewayInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_letsmidi_monsys_protocol_push_DeviceInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_letsmidi_monsys_protocol_push_DeviceInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_letsmidi_monsys_protocol_push_PushMsg_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_letsmidi_monsys_protocol_push_PushMsg_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_letsmidi_monsys_protocol_push_PushClientLogin_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_letsmidi_monsys_protocol_push_PushClientLogin_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_letsmidi_monsys_protocol_push_PushClientLoginRsp_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_letsmidi_monsys_protocol_push_PushClientLoginRsp_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_letsmidi_monsys_protocol_push_AdminClientLogin_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_letsmidi_monsys_protocol_push_AdminClientLogin_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_letsmidi_monsys_protocol_push_AdminClientLoginRsp_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_letsmidi_monsys_protocol_push_AdminClientLoginRsp_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_letsmidi_monsys_protocol_push_Bind_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_letsmidi_monsys_protocol_push_Bind_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_letsmidi_monsys_protocol_push_BindRsp_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_letsmidi_monsys_protocol_push_BindRsp_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_letsmidi_monsys_protocol_push_Connect_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_letsmidi_monsys_protocol_push_Connect_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_letsmidi_monsys_protocol_push_ConnectRsp_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_letsmidi_monsys_protocol_push_ConnectRsp_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_letsmidi_monsys_protocol_push_GetFgwList_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_letsmidi_monsys_protocol_push_GetFgwList_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_letsmidi_monsys_protocol_push_GetFgwListRsp_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_letsmidi_monsys_protocol_push_GetFgwListRsp_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_letsmidi_monsys_protocol_push_GetDevList_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_letsmidi_monsys_protocol_push_GetDevList_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_letsmidi_monsys_protocol_push_GetDevListRsp_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_letsmidi_monsys_protocol_push_GetDevListRsp_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_letsmidi_monsys_protocol_push_GetDevInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_letsmidi_monsys_protocol_push_GetDevInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_letsmidi_monsys_protocol_push_GetDevInfoRsp_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_letsmidi_monsys_protocol_push_GetDevInfoRsp_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_letsmidi_monsys_protocol_push_SetDevInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_letsmidi_monsys_protocol_push_SetDevInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_letsmidi_monsys_protocol_push_SetDevInfoRsp_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_letsmidi_monsys_protocol_push_SetDevInfoRsp_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_letsmidi_monsys_protocol_push_UserRegister_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_letsmidi_monsys_protocol_push_UserRegister_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_letsmidi_monsys_protocol_push_UserRegisterRsp_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_letsmidi_monsys_protocol_push_UserRegisterRsp_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_letsmidi_monsys_protocol_push_Heartbeat_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_letsmidi_monsys_protocol_push_Heartbeat_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_letsmidi_monsys_protocol_push_Response_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_letsmidi_monsys_protocol_push_Response_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\npush.proto\022!com.letsmidi.monsys.protoc" +
      "ol.push\"(\n\013IdValuePair\022\n\n\002id\030\001 \002(\005\022\r\n\005va" +
      "lue\030\002 \002(\005\"6\n\014FGatewayInfo\022\n\n\002id\030\001 \002(\t\022\014\n" +
      "\004name\030\002 \002(\t\022\014\n\004desc\030\003 \002(\t\"6\n\nDeviceInfo\022" +
      "\014\n\004addr\030\001 \002(\005\022\014\n\004type\030\002 \002(\005\022\014\n\004name\030\003 \002(" +
      "\t\"\242\013\n\007PushMsg\022\017\n\007version\030\001 \002(\005\0228\n\004type\030\002" +
      " \002(\0162*.com.letsmidi.monsys.protocol.push" +
      ".MsgType\022\020\n\010sequence\030\003 \002(\005\022A\n\005login\030\n \001(" +
      "\01322.com.letsmidi.monsys.protocol.push.Pu" +
      "shClientLogin\022H\n\tlogin_rsp\030\013 \001(\01325.com.l",
      "etsmidi.monsys.protocol.push.PushClientL" +
      "oginRsp\0225\n\004bind\030\014 \001(\0132\'.com.letsmidi.mon" +
      "sys.protocol.push.Bind\022<\n\010bind_rsp\030\r \001(\013" +
      "2*.com.letsmidi.monsys.protocol.push.Bin" +
      "dRsp\022;\n\007connect\030\016 \001(\0132*.com.letsmidi.mon" +
      "sys.protocol.push.Connect\022B\n\013connect_rsp" +
      "\030\017 \001(\0132-.com.letsmidi.monsys.protocol.pu" +
      "sh.ConnectRsp\022C\n\014get_fgw_list\030\020 \001(\0132-.co" +
      "m.letsmidi.monsys.protocol.push.GetFgwLi" +
      "st\022J\n\020get_fgw_list_rsp\030\021 \001(\01320.com.letsm",
      "idi.monsys.protocol.push.GetFgwListRsp\022C" +
      "\n\014get_dev_list\030\022 \001(\0132-.com.letsmidi.mons" +
      "ys.protocol.push.GetDevList\022J\n\020get_dev_l" +
      "ist_rsp\030\023 \001(\01320.com.letsmidi.monsys.prot" +
      "ocol.push.GetDevListRsp\022C\n\014get_dev_info\030" +
      "\024 \001(\0132-.com.letsmidi.monsys.protocol.pus" +
      "h.GetDevInfo\022J\n\020get_dev_info_rsp\030\025 \001(\01320" +
      ".com.letsmidi.monsys.protocol.push.GetDe" +
      "vInfoRsp\022C\n\014set_dev_info\030\026 \001(\0132-.com.let" +
      "smidi.monsys.protocol.push.SetDevInfo\022J\n",
      "\020set_dev_info_rsp\030\027 \001(\01320.com.letsmidi.m" +
      "onsys.protocol.push.SetDevInfoRsp\022I\n\014cli" +
      "ent_login\030\030 \001(\01323.com.letsmidi.monsys.pr" +
      "otocol.push.AdminClientLogin\022P\n\020client_l" +
      "ogin_rsp\030\031 \001(\01326.com.letsmidi.monsys.pro" +
      "tocol.push.AdminClientLoginRsp\022F\n\ruser_r" +
      "egister\030\032 \001(\0132/.com.letsmidi.monsys.prot" +
      "ocol.push.UserRegister\022M\n\021user_register_" +
      "rsp\030\033 \001(\01322.com.letsmidi.monsys.protocol" +
      ".push.UserRegisterRsp\022?\n\theartbeat\030\034 \001(\013",
      "2,.com.letsmidi.monsys.protocol.push.Hea" +
      "rtbeat\"$\n\017PushClientLogin\022\021\n\tdevice_id\030\001" +
      " \002(\t\"\"\n\022PushClientLoginRsp\022\014\n\004code\030\001 \002(\005" +
      "\"5\n\020AdminClientLogin\022\017\n\007account\030\001 \002(\t\022\020\n" +
      "\010password\030\002 \002(\t\"g\n\023AdminClientLoginRsp\022\014" +
      "\n\004code\030\001 \002(\005\022B\n\tfgw_infos\030\002 \003(\0132/.com.le" +
      "tsmidi.monsys.protocol.push.FGatewayInfo" +
      "\"\031\n\004Bind\022\021\n\tdevice_id\030\001 \002(\t\"\027\n\007BindRsp\022\014" +
      "\n\004code\030\001 \002(\005\"\034\n\007Connect\022\021\n\tdevice_id\030\001 \002" +
      "(\t\"\032\n\nConnectRsp\022\014\n\004code\030\001 \002(\005\"\014\n\nGetFgw",
      "List\"a\n\rGetFgwListRsp\022\014\n\004code\030\001 \002(\005\022B\n\tf" +
      "gw_infos\030\002 \003(\0132/.com.letsmidi.monsys.pro" +
      "tocol.push.FGatewayInfo\"\037\n\nGetDevList\022\021\n" +
      "\tdevice_id\030\001 \002(\t\"_\n\rGetDevListRsp\022\014\n\004cod" +
      "e\030\001 \002(\005\022@\n\tdev_infos\030\002 \003(\0132-.com.letsmid" +
      "i.monsys.protocol.push.DeviceInfo\"0\n\nGet" +
      "DevInfo\022\014\n\004addr\030\001 \002(\005\022\024\n\010item_ids\030\002 \003(\005B" +
      "\002\020\001\"e\n\rGetDevInfoRsp\022\014\n\004code\030\001 \002(\005\022F\n\016id" +
      "_value_pairs\030\002 \003(\0132..com.letsmidi.monsys" +
      ".protocol.push.IdValuePair\"b\n\nSetDevInfo",
      "\022\014\n\004addr\030\001 \002(\005\022F\n\016id_value_pairs\030\002 \003(\0132." +
      ".com.letsmidi.monsys.protocol.push.IdVal" +
      "uePair\"\035\n\rSetDevInfoRsp\022\014\n\004code\030\001 \002(\005\"C\n" +
      "\014UserRegister\022\020\n\010nickname\030\001 \002(\t\022\017\n\007accou" +
      "nt\030\002 \002(\t\022\020\n\010password\030\003 \002(\t\"\037\n\017UserRegist" +
      "erRsp\022\014\n\004code\030\001 \002(\005\"\013\n\tHeartbeat\"\030\n\010Resp" +
      "onse\022\014\n\004code\030\001 \002(\005*\214\003\n\007MsgType\022\025\n\021PUSH_C" +
      "LIENT_LOGIN\020\001\022\031\n\025PUSH_CLIENT_LOGIN_RSP\020e" +
      "\022\010\n\004BIND\020\002\022\014\n\010BIND_RSP\020f\022\013\n\007CONNECT\020\003\022\017\n" +
      "\013CONNECT_RSP\020g\022\020\n\014GET_FGW_LIST\020\004\022\024\n\020GET_",
      "FGW_LIST_RSP\020h\022\020\n\014GET_DEV_LIST\020\005\022\024\n\020GET_" +
      "DEV_LIST_RSP\020i\022\020\n\014GET_DEV_INFO\020\006\022\024\n\020GET_" +
      "DEV_INFO_RSP\020j\022\020\n\014SET_DEV_INFO\020\007\022\024\n\020SET_" +
      "DEV_INFO_RSP\020k\022\026\n\022ADMIN_CLIENT_LOGIN\020\010\022\032" +
      "\n\026ADMIN_CLIENT_LOGIN_RSP\020l\022\021\n\rUSER_REGIS" +
      "TER\020\t\022\025\n\021USER_REGISTER_RSP\020m\022\r\n\tHEARTBEA" +
      "T\020\n\022\014\n\010RESPONSE\020c"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_com_letsmidi_monsys_protocol_push_IdValuePair_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_com_letsmidi_monsys_protocol_push_IdValuePair_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_letsmidi_monsys_protocol_push_IdValuePair_descriptor,
              new java.lang.String[] { "Id", "Value", });
          internal_static_com_letsmidi_monsys_protocol_push_FGatewayInfo_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_com_letsmidi_monsys_protocol_push_FGatewayInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_letsmidi_monsys_protocol_push_FGatewayInfo_descriptor,
              new java.lang.String[] { "Id", "Name", "Desc", });
          internal_static_com_letsmidi_monsys_protocol_push_DeviceInfo_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_com_letsmidi_monsys_protocol_push_DeviceInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_letsmidi_monsys_protocol_push_DeviceInfo_descriptor,
              new java.lang.String[] { "Addr", "Type", "Name", });
          internal_static_com_letsmidi_monsys_protocol_push_PushMsg_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_com_letsmidi_monsys_protocol_push_PushMsg_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_letsmidi_monsys_protocol_push_PushMsg_descriptor,
              new java.lang.String[] { "Version", "Type", "Sequence", "Login", "LoginRsp", "Bind", "BindRsp", "Connect", "ConnectRsp", "GetFgwList", "GetFgwListRsp", "GetDevList", "GetDevListRsp", "GetDevInfo", "GetDevInfoRsp", "SetDevInfo", "SetDevInfoRsp", "ClientLogin", "ClientLoginRsp", "UserRegister", "UserRegisterRsp", "Heartbeat", });
          internal_static_com_letsmidi_monsys_protocol_push_PushClientLogin_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_com_letsmidi_monsys_protocol_push_PushClientLogin_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_letsmidi_monsys_protocol_push_PushClientLogin_descriptor,
              new java.lang.String[] { "DeviceId", });
          internal_static_com_letsmidi_monsys_protocol_push_PushClientLoginRsp_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_com_letsmidi_monsys_protocol_push_PushClientLoginRsp_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_letsmidi_monsys_protocol_push_PushClientLoginRsp_descriptor,
              new java.lang.String[] { "Code", });
          internal_static_com_letsmidi_monsys_protocol_push_AdminClientLogin_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_com_letsmidi_monsys_protocol_push_AdminClientLogin_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_letsmidi_monsys_protocol_push_AdminClientLogin_descriptor,
              new java.lang.String[] { "Account", "Password", });
          internal_static_com_letsmidi_monsys_protocol_push_AdminClientLoginRsp_descriptor =
            getDescriptor().getMessageTypes().get(7);
          internal_static_com_letsmidi_monsys_protocol_push_AdminClientLoginRsp_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_letsmidi_monsys_protocol_push_AdminClientLoginRsp_descriptor,
              new java.lang.String[] { "Code", "FgwInfos", });
          internal_static_com_letsmidi_monsys_protocol_push_Bind_descriptor =
            getDescriptor().getMessageTypes().get(8);
          internal_static_com_letsmidi_monsys_protocol_push_Bind_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_letsmidi_monsys_protocol_push_Bind_descriptor,
              new java.lang.String[] { "DeviceId", });
          internal_static_com_letsmidi_monsys_protocol_push_BindRsp_descriptor =
            getDescriptor().getMessageTypes().get(9);
          internal_static_com_letsmidi_monsys_protocol_push_BindRsp_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_letsmidi_monsys_protocol_push_BindRsp_descriptor,
              new java.lang.String[] { "Code", });
          internal_static_com_letsmidi_monsys_protocol_push_Connect_descriptor =
            getDescriptor().getMessageTypes().get(10);
          internal_static_com_letsmidi_monsys_protocol_push_Connect_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_letsmidi_monsys_protocol_push_Connect_descriptor,
              new java.lang.String[] { "DeviceId", });
          internal_static_com_letsmidi_monsys_protocol_push_ConnectRsp_descriptor =
            getDescriptor().getMessageTypes().get(11);
          internal_static_com_letsmidi_monsys_protocol_push_ConnectRsp_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_letsmidi_monsys_protocol_push_ConnectRsp_descriptor,
              new java.lang.String[] { "Code", });
          internal_static_com_letsmidi_monsys_protocol_push_GetFgwList_descriptor =
            getDescriptor().getMessageTypes().get(12);
          internal_static_com_letsmidi_monsys_protocol_push_GetFgwList_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_letsmidi_monsys_protocol_push_GetFgwList_descriptor,
              new java.lang.String[] { });
          internal_static_com_letsmidi_monsys_protocol_push_GetFgwListRsp_descriptor =
            getDescriptor().getMessageTypes().get(13);
          internal_static_com_letsmidi_monsys_protocol_push_GetFgwListRsp_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_letsmidi_monsys_protocol_push_GetFgwListRsp_descriptor,
              new java.lang.String[] { "Code", "FgwInfos", });
          internal_static_com_letsmidi_monsys_protocol_push_GetDevList_descriptor =
            getDescriptor().getMessageTypes().get(14);
          internal_static_com_letsmidi_monsys_protocol_push_GetDevList_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_letsmidi_monsys_protocol_push_GetDevList_descriptor,
              new java.lang.String[] { "DeviceId", });
          internal_static_com_letsmidi_monsys_protocol_push_GetDevListRsp_descriptor =
            getDescriptor().getMessageTypes().get(15);
          internal_static_com_letsmidi_monsys_protocol_push_GetDevListRsp_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_letsmidi_monsys_protocol_push_GetDevListRsp_descriptor,
              new java.lang.String[] { "Code", "DevInfos", });
          internal_static_com_letsmidi_monsys_protocol_push_GetDevInfo_descriptor =
            getDescriptor().getMessageTypes().get(16);
          internal_static_com_letsmidi_monsys_protocol_push_GetDevInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_letsmidi_monsys_protocol_push_GetDevInfo_descriptor,
              new java.lang.String[] { "Addr", "ItemIds", });
          internal_static_com_letsmidi_monsys_protocol_push_GetDevInfoRsp_descriptor =
            getDescriptor().getMessageTypes().get(17);
          internal_static_com_letsmidi_monsys_protocol_push_GetDevInfoRsp_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_letsmidi_monsys_protocol_push_GetDevInfoRsp_descriptor,
              new java.lang.String[] { "Code", "IdValuePairs", });
          internal_static_com_letsmidi_monsys_protocol_push_SetDevInfo_descriptor =
            getDescriptor().getMessageTypes().get(18);
          internal_static_com_letsmidi_monsys_protocol_push_SetDevInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_letsmidi_monsys_protocol_push_SetDevInfo_descriptor,
              new java.lang.String[] { "Addr", "IdValuePairs", });
          internal_static_com_letsmidi_monsys_protocol_push_SetDevInfoRsp_descriptor =
            getDescriptor().getMessageTypes().get(19);
          internal_static_com_letsmidi_monsys_protocol_push_SetDevInfoRsp_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_letsmidi_monsys_protocol_push_SetDevInfoRsp_descriptor,
              new java.lang.String[] { "Code", });
          internal_static_com_letsmidi_monsys_protocol_push_UserRegister_descriptor =
            getDescriptor().getMessageTypes().get(20);
          internal_static_com_letsmidi_monsys_protocol_push_UserRegister_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_letsmidi_monsys_protocol_push_UserRegister_descriptor,
              new java.lang.String[] { "Nickname", "Account", "Password", });
          internal_static_com_letsmidi_monsys_protocol_push_UserRegisterRsp_descriptor =
            getDescriptor().getMessageTypes().get(21);
          internal_static_com_letsmidi_monsys_protocol_push_UserRegisterRsp_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_letsmidi_monsys_protocol_push_UserRegisterRsp_descriptor,
              new java.lang.String[] { "Code", });
          internal_static_com_letsmidi_monsys_protocol_push_Heartbeat_descriptor =
            getDescriptor().getMessageTypes().get(22);
          internal_static_com_letsmidi_monsys_protocol_push_Heartbeat_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_letsmidi_monsys_protocol_push_Heartbeat_descriptor,
              new java.lang.String[] { });
          internal_static_com_letsmidi_monsys_protocol_push_Response_descriptor =
            getDescriptor().getMessageTypes().get(23);
          internal_static_com_letsmidi_monsys_protocol_push_Response_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_letsmidi_monsys_protocol_push_Response_descriptor,
              new java.lang.String[] { "Code", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
