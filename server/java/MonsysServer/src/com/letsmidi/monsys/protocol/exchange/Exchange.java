// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: exchange.proto

package com.letsmidi.monsys.protocol.exchange;

public final class Exchange {
  private Exchange() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  /**
   * Protobuf enum {@code com.letsmidi.monsys.protocol.exchange.MsgType}
   */
  public enum MsgType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>REQUEST_EXCHANGE = 1;</code>
     */
    REQUEST_EXCHANGE(0, 1),
    /**
     * <code>REQUEST_EXCHANGE_RSP = 2;</code>
     */
    REQUEST_EXCHANGE_RSP(1, 2),
    /**
     * <code>CONNECT = 3;</code>
     */
    CONNECT(2, 3),
    /**
     * <code>CONNECT_RSP = 4;</code>
     */
    CONNECT_RSP(3, 4),
    ;

    /**
     * <code>REQUEST_EXCHANGE = 1;</code>
     */
    public static final int REQUEST_EXCHANGE_VALUE = 1;
    /**
     * <code>REQUEST_EXCHANGE_RSP = 2;</code>
     */
    public static final int REQUEST_EXCHANGE_RSP_VALUE = 2;
    /**
     * <code>CONNECT = 3;</code>
     */
    public static final int CONNECT_VALUE = 3;
    /**
     * <code>CONNECT_RSP = 4;</code>
     */
    public static final int CONNECT_RSP_VALUE = 4;


    public final int getNumber() { return value; }

    public static MsgType valueOf(int value) {
      switch (value) {
        case 1: return REQUEST_EXCHANGE;
        case 2: return REQUEST_EXCHANGE_RSP;
        case 3: return CONNECT;
        case 4: return CONNECT_RSP;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<MsgType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<MsgType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<MsgType>() {
            public MsgType findValueByNumber(int number) {
              return MsgType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.letsmidi.monsys.protocol.exchange.Exchange.getDescriptor().getEnumTypes().get(0);
    }

    private static final MsgType[] VALUES = values();

    public static MsgType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private MsgType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.letsmidi.monsys.protocol.exchange.MsgType)
  }

  public interface ExchangeMsgOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.letsmidi.monsys.protocol.exchange.ExchangeMsg)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required uint32 version = 1;</code>
     *
     * <pre>
     * head
     * </pre>
     */
    boolean hasVersion();
    /**
     * <code>required uint32 version = 1;</code>
     *
     * <pre>
     * head
     * </pre>
     */
    int getVersion();

    /**
     * <code>required .com.letsmidi.monsys.protocol.exchange.MsgType type = 2;</code>
     */
    boolean hasType();
    /**
     * <code>required .com.letsmidi.monsys.protocol.exchange.MsgType type = 2;</code>
     */
    com.letsmidi.monsys.protocol.exchange.Exchange.MsgType getType();

    /**
     * <code>required uint32 sequence = 3;</code>
     *
     * <pre>
     * required uint32 reserved = 4;
     * </pre>
     */
    boolean hasSequence();
    /**
     * <code>required uint32 sequence = 3;</code>
     *
     * <pre>
     * required uint32 reserved = 4;
     * </pre>
     */
    int getSequence();

    /**
     * <code>optional .com.letsmidi.monsys.protocol.exchange.RequestExchange request_exchange = 5;</code>
     *
     * <pre>
     * request
     * </pre>
     */
    boolean hasRequestExchange();
    /**
     * <code>optional .com.letsmidi.monsys.protocol.exchange.RequestExchange request_exchange = 5;</code>
     *
     * <pre>
     * request
     * </pre>
     */
    com.letsmidi.monsys.protocol.exchange.Exchange.RequestExchange getRequestExchange();
    /**
     * <code>optional .com.letsmidi.monsys.protocol.exchange.RequestExchange request_exchange = 5;</code>
     *
     * <pre>
     * request
     * </pre>
     */
    com.letsmidi.monsys.protocol.exchange.Exchange.RequestExchangeOrBuilder getRequestExchangeOrBuilder();

    /**
     * <code>optional .com.letsmidi.monsys.protocol.exchange.RequestExchangeRsp request_exchange_rsp = 6;</code>
     */
    boolean hasRequestExchangeRsp();
    /**
     * <code>optional .com.letsmidi.monsys.protocol.exchange.RequestExchangeRsp request_exchange_rsp = 6;</code>
     */
    com.letsmidi.monsys.protocol.exchange.Exchange.RequestExchangeRsp getRequestExchangeRsp();
    /**
     * <code>optional .com.letsmidi.monsys.protocol.exchange.RequestExchangeRsp request_exchange_rsp = 6;</code>
     */
    com.letsmidi.monsys.protocol.exchange.Exchange.RequestExchangeRspOrBuilder getRequestExchangeRspOrBuilder();

    /**
     * <code>optional .com.letsmidi.monsys.protocol.exchange.Connect connect = 7;</code>
     *
     * <pre>
     * connect
     * </pre>
     */
    boolean hasConnect();
    /**
     * <code>optional .com.letsmidi.monsys.protocol.exchange.Connect connect = 7;</code>
     *
     * <pre>
     * connect
     * </pre>
     */
    com.letsmidi.monsys.protocol.exchange.Exchange.Connect getConnect();
    /**
     * <code>optional .com.letsmidi.monsys.protocol.exchange.Connect connect = 7;</code>
     *
     * <pre>
     * connect
     * </pre>
     */
    com.letsmidi.monsys.protocol.exchange.Exchange.ConnectOrBuilder getConnectOrBuilder();

    /**
     * <code>optional .com.letsmidi.monsys.protocol.exchange.ConnectRsp connect_rsp = 8;</code>
     */
    boolean hasConnectRsp();
    /**
     * <code>optional .com.letsmidi.monsys.protocol.exchange.ConnectRsp connect_rsp = 8;</code>
     */
    com.letsmidi.monsys.protocol.exchange.Exchange.ConnectRsp getConnectRsp();
    /**
     * <code>optional .com.letsmidi.monsys.protocol.exchange.ConnectRsp connect_rsp = 8;</code>
     */
    com.letsmidi.monsys.protocol.exchange.Exchange.ConnectRspOrBuilder getConnectRspOrBuilder();
  }
  /**
   * Protobuf type {@code com.letsmidi.monsys.protocol.exchange.ExchangeMsg}
   */
  public static final class ExchangeMsg extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.letsmidi.monsys.protocol.exchange.ExchangeMsg)
      ExchangeMsgOrBuilder {
    // Use ExchangeMsg.newBuilder() to construct.
    private ExchangeMsg(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ExchangeMsg(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ExchangeMsg defaultInstance;
    public static ExchangeMsg getDefaultInstance() {
      return defaultInstance;
    }

    public ExchangeMsg getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ExchangeMsg(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              version_ = input.readUInt32();
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              com.letsmidi.monsys.protocol.exchange.Exchange.MsgType value = com.letsmidi.monsys.protocol.exchange.Exchange.MsgType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                type_ = value;
              }
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              sequence_ = input.readUInt32();
              break;
            }
            case 42: {
              com.letsmidi.monsys.protocol.exchange.Exchange.RequestExchange.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = requestExchange_.toBuilder();
              }
              requestExchange_ = input.readMessage(com.letsmidi.monsys.protocol.exchange.Exchange.RequestExchange.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(requestExchange_);
                requestExchange_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
            case 50: {
              com.letsmidi.monsys.protocol.exchange.Exchange.RequestExchangeRsp.Builder subBuilder = null;
              if (((bitField0_ & 0x00000010) == 0x00000010)) {
                subBuilder = requestExchangeRsp_.toBuilder();
              }
              requestExchangeRsp_ = input.readMessage(com.letsmidi.monsys.protocol.exchange.Exchange.RequestExchangeRsp.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(requestExchangeRsp_);
                requestExchangeRsp_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000010;
              break;
            }
            case 58: {
              com.letsmidi.monsys.protocol.exchange.Exchange.Connect.Builder subBuilder = null;
              if (((bitField0_ & 0x00000020) == 0x00000020)) {
                subBuilder = connect_.toBuilder();
              }
              connect_ = input.readMessage(com.letsmidi.monsys.protocol.exchange.Exchange.Connect.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(connect_);
                connect_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000020;
              break;
            }
            case 66: {
              com.letsmidi.monsys.protocol.exchange.Exchange.ConnectRsp.Builder subBuilder = null;
              if (((bitField0_ & 0x00000040) == 0x00000040)) {
                subBuilder = connectRsp_.toBuilder();
              }
              connectRsp_ = input.readMessage(com.letsmidi.monsys.protocol.exchange.Exchange.ConnectRsp.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(connectRsp_);
                connectRsp_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000040;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.letsmidi.monsys.protocol.exchange.Exchange.internal_static_com_letsmidi_monsys_protocol_exchange_ExchangeMsg_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.letsmidi.monsys.protocol.exchange.Exchange.internal_static_com_letsmidi_monsys_protocol_exchange_ExchangeMsg_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.letsmidi.monsys.protocol.exchange.Exchange.ExchangeMsg.class, com.letsmidi.monsys.protocol.exchange.Exchange.ExchangeMsg.Builder.class);
    }

    public static com.google.protobuf.Parser<ExchangeMsg> PARSER =
        new com.google.protobuf.AbstractParser<ExchangeMsg>() {
      public ExchangeMsg parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ExchangeMsg(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ExchangeMsg> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int VERSION_FIELD_NUMBER = 1;
    private int version_;
    /**
     * <code>required uint32 version = 1;</code>
     *
     * <pre>
     * head
     * </pre>
     */
    public boolean hasVersion() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 version = 1;</code>
     *
     * <pre>
     * head
     * </pre>
     */
    public int getVersion() {
      return version_;
    }

    public static final int TYPE_FIELD_NUMBER = 2;
    private com.letsmidi.monsys.protocol.exchange.Exchange.MsgType type_;
    /**
     * <code>required .com.letsmidi.monsys.protocol.exchange.MsgType type = 2;</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .com.letsmidi.monsys.protocol.exchange.MsgType type = 2;</code>
     */
    public com.letsmidi.monsys.protocol.exchange.Exchange.MsgType getType() {
      return type_;
    }

    public static final int SEQUENCE_FIELD_NUMBER = 3;
    private int sequence_;
    /**
     * <code>required uint32 sequence = 3;</code>
     *
     * <pre>
     * required uint32 reserved = 4;
     * </pre>
     */
    public boolean hasSequence() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required uint32 sequence = 3;</code>
     *
     * <pre>
     * required uint32 reserved = 4;
     * </pre>
     */
    public int getSequence() {
      return sequence_;
    }

    public static final int REQUEST_EXCHANGE_FIELD_NUMBER = 5;
    private com.letsmidi.monsys.protocol.exchange.Exchange.RequestExchange requestExchange_;
    /**
     * <code>optional .com.letsmidi.monsys.protocol.exchange.RequestExchange request_exchange = 5;</code>
     *
     * <pre>
     * request
     * </pre>
     */
    public boolean hasRequestExchange() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .com.letsmidi.monsys.protocol.exchange.RequestExchange request_exchange = 5;</code>
     *
     * <pre>
     * request
     * </pre>
     */
    public com.letsmidi.monsys.protocol.exchange.Exchange.RequestExchange getRequestExchange() {
      return requestExchange_;
    }
    /**
     * <code>optional .com.letsmidi.monsys.protocol.exchange.RequestExchange request_exchange = 5;</code>
     *
     * <pre>
     * request
     * </pre>
     */
    public com.letsmidi.monsys.protocol.exchange.Exchange.RequestExchangeOrBuilder getRequestExchangeOrBuilder() {
      return requestExchange_;
    }

    public static final int REQUEST_EXCHANGE_RSP_FIELD_NUMBER = 6;
    private com.letsmidi.monsys.protocol.exchange.Exchange.RequestExchangeRsp requestExchangeRsp_;
    /**
     * <code>optional .com.letsmidi.monsys.protocol.exchange.RequestExchangeRsp request_exchange_rsp = 6;</code>
     */
    public boolean hasRequestExchangeRsp() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .com.letsmidi.monsys.protocol.exchange.RequestExchangeRsp request_exchange_rsp = 6;</code>
     */
    public com.letsmidi.monsys.protocol.exchange.Exchange.RequestExchangeRsp getRequestExchangeRsp() {
      return requestExchangeRsp_;
    }
    /**
     * <code>optional .com.letsmidi.monsys.protocol.exchange.RequestExchangeRsp request_exchange_rsp = 6;</code>
     */
    public com.letsmidi.monsys.protocol.exchange.Exchange.RequestExchangeRspOrBuilder getRequestExchangeRspOrBuilder() {
      return requestExchangeRsp_;
    }

    public static final int CONNECT_FIELD_NUMBER = 7;
    private com.letsmidi.monsys.protocol.exchange.Exchange.Connect connect_;
    /**
     * <code>optional .com.letsmidi.monsys.protocol.exchange.Connect connect = 7;</code>
     *
     * <pre>
     * connect
     * </pre>
     */
    public boolean hasConnect() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional .com.letsmidi.monsys.protocol.exchange.Connect connect = 7;</code>
     *
     * <pre>
     * connect
     * </pre>
     */
    public com.letsmidi.monsys.protocol.exchange.Exchange.Connect getConnect() {
      return connect_;
    }
    /**
     * <code>optional .com.letsmidi.monsys.protocol.exchange.Connect connect = 7;</code>
     *
     * <pre>
     * connect
     * </pre>
     */
    public com.letsmidi.monsys.protocol.exchange.Exchange.ConnectOrBuilder getConnectOrBuilder() {
      return connect_;
    }

    public static final int CONNECT_RSP_FIELD_NUMBER = 8;
    private com.letsmidi.monsys.protocol.exchange.Exchange.ConnectRsp connectRsp_;
    /**
     * <code>optional .com.letsmidi.monsys.protocol.exchange.ConnectRsp connect_rsp = 8;</code>
     */
    public boolean hasConnectRsp() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional .com.letsmidi.monsys.protocol.exchange.ConnectRsp connect_rsp = 8;</code>
     */
    public com.letsmidi.monsys.protocol.exchange.Exchange.ConnectRsp getConnectRsp() {
      return connectRsp_;
    }
    /**
     * <code>optional .com.letsmidi.monsys.protocol.exchange.ConnectRsp connect_rsp = 8;</code>
     */
    public com.letsmidi.monsys.protocol.exchange.Exchange.ConnectRspOrBuilder getConnectRspOrBuilder() {
      return connectRsp_;
    }

    private void initFields() {
      version_ = 0;
      type_ = com.letsmidi.monsys.protocol.exchange.Exchange.MsgType.REQUEST_EXCHANGE;
      sequence_ = 0;
      requestExchange_ = com.letsmidi.monsys.protocol.exchange.Exchange.RequestExchange.getDefaultInstance();
      requestExchangeRsp_ = com.letsmidi.monsys.protocol.exchange.Exchange.RequestExchangeRsp.getDefaultInstance();
      connect_ = com.letsmidi.monsys.protocol.exchange.Exchange.Connect.getDefaultInstance();
      connectRsp_ = com.letsmidi.monsys.protocol.exchange.Exchange.ConnectRsp.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasVersion()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSequence()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasRequestExchangeRsp()) {
        if (!getRequestExchangeRsp().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasConnect()) {
        if (!getConnect().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasConnectRsp()) {
        if (!getConnectRsp().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, version_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, type_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, sequence_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(5, requestExchange_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(6, requestExchangeRsp_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeMessage(7, connect_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeMessage(8, connectRsp_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, version_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, type_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, sequence_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, requestExchange_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, requestExchangeRsp_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, connect_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, connectRsp_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.letsmidi.monsys.protocol.exchange.Exchange.ExchangeMsg parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.letsmidi.monsys.protocol.exchange.Exchange.ExchangeMsg parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.letsmidi.monsys.protocol.exchange.Exchange.ExchangeMsg parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.letsmidi.monsys.protocol.exchange.Exchange.ExchangeMsg parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.letsmidi.monsys.protocol.exchange.Exchange.ExchangeMsg parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.letsmidi.monsys.protocol.exchange.Exchange.ExchangeMsg parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.letsmidi.monsys.protocol.exchange.Exchange.ExchangeMsg parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.letsmidi.monsys.protocol.exchange.Exchange.ExchangeMsg parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.letsmidi.monsys.protocol.exchange.Exchange.ExchangeMsg parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.letsmidi.monsys.protocol.exchange.Exchange.ExchangeMsg parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.letsmidi.monsys.protocol.exchange.Exchange.ExchangeMsg prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.letsmidi.monsys.protocol.exchange.ExchangeMsg}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.letsmidi.monsys.protocol.exchange.ExchangeMsg)
        com.letsmidi.monsys.protocol.exchange.Exchange.ExchangeMsgOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.letsmidi.monsys.protocol.exchange.Exchange.internal_static_com_letsmidi_monsys_protocol_exchange_ExchangeMsg_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.letsmidi.monsys.protocol.exchange.Exchange.internal_static_com_letsmidi_monsys_protocol_exchange_ExchangeMsg_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.letsmidi.monsys.protocol.exchange.Exchange.ExchangeMsg.class, com.letsmidi.monsys.protocol.exchange.Exchange.ExchangeMsg.Builder.class);
      }

      // Construct using com.letsmidi.monsys.protocol.exchange.Exchange.ExchangeMsg.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getRequestExchangeFieldBuilder();
          getRequestExchangeRspFieldBuilder();
          getConnectFieldBuilder();
          getConnectRspFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        version_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = com.letsmidi.monsys.protocol.exchange.Exchange.MsgType.REQUEST_EXCHANGE;
        bitField0_ = (bitField0_ & ~0x00000002);
        sequence_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        if (requestExchangeBuilder_ == null) {
          requestExchange_ = com.letsmidi.monsys.protocol.exchange.Exchange.RequestExchange.getDefaultInstance();
        } else {
          requestExchangeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        if (requestExchangeRspBuilder_ == null) {
          requestExchangeRsp_ = com.letsmidi.monsys.protocol.exchange.Exchange.RequestExchangeRsp.getDefaultInstance();
        } else {
          requestExchangeRspBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        if (connectBuilder_ == null) {
          connect_ = com.letsmidi.monsys.protocol.exchange.Exchange.Connect.getDefaultInstance();
        } else {
          connectBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        if (connectRspBuilder_ == null) {
          connectRsp_ = com.letsmidi.monsys.protocol.exchange.Exchange.ConnectRsp.getDefaultInstance();
        } else {
          connectRspBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.letsmidi.monsys.protocol.exchange.Exchange.internal_static_com_letsmidi_monsys_protocol_exchange_ExchangeMsg_descriptor;
      }

      public com.letsmidi.monsys.protocol.exchange.Exchange.ExchangeMsg getDefaultInstanceForType() {
        return com.letsmidi.monsys.protocol.exchange.Exchange.ExchangeMsg.getDefaultInstance();
      }

      public com.letsmidi.monsys.protocol.exchange.Exchange.ExchangeMsg build() {
        com.letsmidi.monsys.protocol.exchange.Exchange.ExchangeMsg result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.letsmidi.monsys.protocol.exchange.Exchange.ExchangeMsg buildPartial() {
        com.letsmidi.monsys.protocol.exchange.Exchange.ExchangeMsg result = new com.letsmidi.monsys.protocol.exchange.Exchange.ExchangeMsg(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.version_ = version_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.sequence_ = sequence_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (requestExchangeBuilder_ == null) {
          result.requestExchange_ = requestExchange_;
        } else {
          result.requestExchange_ = requestExchangeBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        if (requestExchangeRspBuilder_ == null) {
          result.requestExchangeRsp_ = requestExchangeRsp_;
        } else {
          result.requestExchangeRsp_ = requestExchangeRspBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        if (connectBuilder_ == null) {
          result.connect_ = connect_;
        } else {
          result.connect_ = connectBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        if (connectRspBuilder_ == null) {
          result.connectRsp_ = connectRsp_;
        } else {
          result.connectRsp_ = connectRspBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.letsmidi.monsys.protocol.exchange.Exchange.ExchangeMsg) {
          return mergeFrom((com.letsmidi.monsys.protocol.exchange.Exchange.ExchangeMsg)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.letsmidi.monsys.protocol.exchange.Exchange.ExchangeMsg other) {
        if (other == com.letsmidi.monsys.protocol.exchange.Exchange.ExchangeMsg.getDefaultInstance()) return this;
        if (other.hasVersion()) {
          setVersion(other.getVersion());
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasSequence()) {
          setSequence(other.getSequence());
        }
        if (other.hasRequestExchange()) {
          mergeRequestExchange(other.getRequestExchange());
        }
        if (other.hasRequestExchangeRsp()) {
          mergeRequestExchangeRsp(other.getRequestExchangeRsp());
        }
        if (other.hasConnect()) {
          mergeConnect(other.getConnect());
        }
        if (other.hasConnectRsp()) {
          mergeConnectRsp(other.getConnectRsp());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasVersion()) {
          
          return false;
        }
        if (!hasType()) {
          
          return false;
        }
        if (!hasSequence()) {
          
          return false;
        }
        if (hasRequestExchangeRsp()) {
          if (!getRequestExchangeRsp().isInitialized()) {
            
            return false;
          }
        }
        if (hasConnect()) {
          if (!getConnect().isInitialized()) {
            
            return false;
          }
        }
        if (hasConnectRsp()) {
          if (!getConnectRsp().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.letsmidi.monsys.protocol.exchange.Exchange.ExchangeMsg parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.letsmidi.monsys.protocol.exchange.Exchange.ExchangeMsg) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int version_ ;
      /**
       * <code>required uint32 version = 1;</code>
       *
       * <pre>
       * head
       * </pre>
       */
      public boolean hasVersion() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 version = 1;</code>
       *
       * <pre>
       * head
       * </pre>
       */
      public int getVersion() {
        return version_;
      }
      /**
       * <code>required uint32 version = 1;</code>
       *
       * <pre>
       * head
       * </pre>
       */
      public Builder setVersion(int value) {
        bitField0_ |= 0x00000001;
        version_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 version = 1;</code>
       *
       * <pre>
       * head
       * </pre>
       */
      public Builder clearVersion() {
        bitField0_ = (bitField0_ & ~0x00000001);
        version_ = 0;
        onChanged();
        return this;
      }

      private com.letsmidi.monsys.protocol.exchange.Exchange.MsgType type_ = com.letsmidi.monsys.protocol.exchange.Exchange.MsgType.REQUEST_EXCHANGE;
      /**
       * <code>required .com.letsmidi.monsys.protocol.exchange.MsgType type = 2;</code>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .com.letsmidi.monsys.protocol.exchange.MsgType type = 2;</code>
       */
      public com.letsmidi.monsys.protocol.exchange.Exchange.MsgType getType() {
        return type_;
      }
      /**
       * <code>required .com.letsmidi.monsys.protocol.exchange.MsgType type = 2;</code>
       */
      public Builder setType(com.letsmidi.monsys.protocol.exchange.Exchange.MsgType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .com.letsmidi.monsys.protocol.exchange.MsgType type = 2;</code>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        type_ = com.letsmidi.monsys.protocol.exchange.Exchange.MsgType.REQUEST_EXCHANGE;
        onChanged();
        return this;
      }

      private int sequence_ ;
      /**
       * <code>required uint32 sequence = 3;</code>
       *
       * <pre>
       * required uint32 reserved = 4;
       * </pre>
       */
      public boolean hasSequence() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required uint32 sequence = 3;</code>
       *
       * <pre>
       * required uint32 reserved = 4;
       * </pre>
       */
      public int getSequence() {
        return sequence_;
      }
      /**
       * <code>required uint32 sequence = 3;</code>
       *
       * <pre>
       * required uint32 reserved = 4;
       * </pre>
       */
      public Builder setSequence(int value) {
        bitField0_ |= 0x00000004;
        sequence_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 sequence = 3;</code>
       *
       * <pre>
       * required uint32 reserved = 4;
       * </pre>
       */
      public Builder clearSequence() {
        bitField0_ = (bitField0_ & ~0x00000004);
        sequence_ = 0;
        onChanged();
        return this;
      }

      private com.letsmidi.monsys.protocol.exchange.Exchange.RequestExchange requestExchange_ = com.letsmidi.monsys.protocol.exchange.Exchange.RequestExchange.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.letsmidi.monsys.protocol.exchange.Exchange.RequestExchange, com.letsmidi.monsys.protocol.exchange.Exchange.RequestExchange.Builder, com.letsmidi.monsys.protocol.exchange.Exchange.RequestExchangeOrBuilder> requestExchangeBuilder_;
      /**
       * <code>optional .com.letsmidi.monsys.protocol.exchange.RequestExchange request_exchange = 5;</code>
       *
       * <pre>
       * request
       * </pre>
       */
      public boolean hasRequestExchange() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.exchange.RequestExchange request_exchange = 5;</code>
       *
       * <pre>
       * request
       * </pre>
       */
      public com.letsmidi.monsys.protocol.exchange.Exchange.RequestExchange getRequestExchange() {
        if (requestExchangeBuilder_ == null) {
          return requestExchange_;
        } else {
          return requestExchangeBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.exchange.RequestExchange request_exchange = 5;</code>
       *
       * <pre>
       * request
       * </pre>
       */
      public Builder setRequestExchange(com.letsmidi.monsys.protocol.exchange.Exchange.RequestExchange value) {
        if (requestExchangeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          requestExchange_ = value;
          onChanged();
        } else {
          requestExchangeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.exchange.RequestExchange request_exchange = 5;</code>
       *
       * <pre>
       * request
       * </pre>
       */
      public Builder setRequestExchange(
          com.letsmidi.monsys.protocol.exchange.Exchange.RequestExchange.Builder builderForValue) {
        if (requestExchangeBuilder_ == null) {
          requestExchange_ = builderForValue.build();
          onChanged();
        } else {
          requestExchangeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.exchange.RequestExchange request_exchange = 5;</code>
       *
       * <pre>
       * request
       * </pre>
       */
      public Builder mergeRequestExchange(com.letsmidi.monsys.protocol.exchange.Exchange.RequestExchange value) {
        if (requestExchangeBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              requestExchange_ != com.letsmidi.monsys.protocol.exchange.Exchange.RequestExchange.getDefaultInstance()) {
            requestExchange_ =
              com.letsmidi.monsys.protocol.exchange.Exchange.RequestExchange.newBuilder(requestExchange_).mergeFrom(value).buildPartial();
          } else {
            requestExchange_ = value;
          }
          onChanged();
        } else {
          requestExchangeBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.exchange.RequestExchange request_exchange = 5;</code>
       *
       * <pre>
       * request
       * </pre>
       */
      public Builder clearRequestExchange() {
        if (requestExchangeBuilder_ == null) {
          requestExchange_ = com.letsmidi.monsys.protocol.exchange.Exchange.RequestExchange.getDefaultInstance();
          onChanged();
        } else {
          requestExchangeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.exchange.RequestExchange request_exchange = 5;</code>
       *
       * <pre>
       * request
       * </pre>
       */
      public com.letsmidi.monsys.protocol.exchange.Exchange.RequestExchange.Builder getRequestExchangeBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getRequestExchangeFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.exchange.RequestExchange request_exchange = 5;</code>
       *
       * <pre>
       * request
       * </pre>
       */
      public com.letsmidi.monsys.protocol.exchange.Exchange.RequestExchangeOrBuilder getRequestExchangeOrBuilder() {
        if (requestExchangeBuilder_ != null) {
          return requestExchangeBuilder_.getMessageOrBuilder();
        } else {
          return requestExchange_;
        }
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.exchange.RequestExchange request_exchange = 5;</code>
       *
       * <pre>
       * request
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.letsmidi.monsys.protocol.exchange.Exchange.RequestExchange, com.letsmidi.monsys.protocol.exchange.Exchange.RequestExchange.Builder, com.letsmidi.monsys.protocol.exchange.Exchange.RequestExchangeOrBuilder> 
          getRequestExchangeFieldBuilder() {
        if (requestExchangeBuilder_ == null) {
          requestExchangeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.letsmidi.monsys.protocol.exchange.Exchange.RequestExchange, com.letsmidi.monsys.protocol.exchange.Exchange.RequestExchange.Builder, com.letsmidi.monsys.protocol.exchange.Exchange.RequestExchangeOrBuilder>(
                  getRequestExchange(),
                  getParentForChildren(),
                  isClean());
          requestExchange_ = null;
        }
        return requestExchangeBuilder_;
      }

      private com.letsmidi.monsys.protocol.exchange.Exchange.RequestExchangeRsp requestExchangeRsp_ = com.letsmidi.monsys.protocol.exchange.Exchange.RequestExchangeRsp.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.letsmidi.monsys.protocol.exchange.Exchange.RequestExchangeRsp, com.letsmidi.monsys.protocol.exchange.Exchange.RequestExchangeRsp.Builder, com.letsmidi.monsys.protocol.exchange.Exchange.RequestExchangeRspOrBuilder> requestExchangeRspBuilder_;
      /**
       * <code>optional .com.letsmidi.monsys.protocol.exchange.RequestExchangeRsp request_exchange_rsp = 6;</code>
       */
      public boolean hasRequestExchangeRsp() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.exchange.RequestExchangeRsp request_exchange_rsp = 6;</code>
       */
      public com.letsmidi.monsys.protocol.exchange.Exchange.RequestExchangeRsp getRequestExchangeRsp() {
        if (requestExchangeRspBuilder_ == null) {
          return requestExchangeRsp_;
        } else {
          return requestExchangeRspBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.exchange.RequestExchangeRsp request_exchange_rsp = 6;</code>
       */
      public Builder setRequestExchangeRsp(com.letsmidi.monsys.protocol.exchange.Exchange.RequestExchangeRsp value) {
        if (requestExchangeRspBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          requestExchangeRsp_ = value;
          onChanged();
        } else {
          requestExchangeRspBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.exchange.RequestExchangeRsp request_exchange_rsp = 6;</code>
       */
      public Builder setRequestExchangeRsp(
          com.letsmidi.monsys.protocol.exchange.Exchange.RequestExchangeRsp.Builder builderForValue) {
        if (requestExchangeRspBuilder_ == null) {
          requestExchangeRsp_ = builderForValue.build();
          onChanged();
        } else {
          requestExchangeRspBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.exchange.RequestExchangeRsp request_exchange_rsp = 6;</code>
       */
      public Builder mergeRequestExchangeRsp(com.letsmidi.monsys.protocol.exchange.Exchange.RequestExchangeRsp value) {
        if (requestExchangeRspBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010) &&
              requestExchangeRsp_ != com.letsmidi.monsys.protocol.exchange.Exchange.RequestExchangeRsp.getDefaultInstance()) {
            requestExchangeRsp_ =
              com.letsmidi.monsys.protocol.exchange.Exchange.RequestExchangeRsp.newBuilder(requestExchangeRsp_).mergeFrom(value).buildPartial();
          } else {
            requestExchangeRsp_ = value;
          }
          onChanged();
        } else {
          requestExchangeRspBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.exchange.RequestExchangeRsp request_exchange_rsp = 6;</code>
       */
      public Builder clearRequestExchangeRsp() {
        if (requestExchangeRspBuilder_ == null) {
          requestExchangeRsp_ = com.letsmidi.monsys.protocol.exchange.Exchange.RequestExchangeRsp.getDefaultInstance();
          onChanged();
        } else {
          requestExchangeRspBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.exchange.RequestExchangeRsp request_exchange_rsp = 6;</code>
       */
      public com.letsmidi.monsys.protocol.exchange.Exchange.RequestExchangeRsp.Builder getRequestExchangeRspBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getRequestExchangeRspFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.exchange.RequestExchangeRsp request_exchange_rsp = 6;</code>
       */
      public com.letsmidi.monsys.protocol.exchange.Exchange.RequestExchangeRspOrBuilder getRequestExchangeRspOrBuilder() {
        if (requestExchangeRspBuilder_ != null) {
          return requestExchangeRspBuilder_.getMessageOrBuilder();
        } else {
          return requestExchangeRsp_;
        }
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.exchange.RequestExchangeRsp request_exchange_rsp = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.letsmidi.monsys.protocol.exchange.Exchange.RequestExchangeRsp, com.letsmidi.monsys.protocol.exchange.Exchange.RequestExchangeRsp.Builder, com.letsmidi.monsys.protocol.exchange.Exchange.RequestExchangeRspOrBuilder> 
          getRequestExchangeRspFieldBuilder() {
        if (requestExchangeRspBuilder_ == null) {
          requestExchangeRspBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.letsmidi.monsys.protocol.exchange.Exchange.RequestExchangeRsp, com.letsmidi.monsys.protocol.exchange.Exchange.RequestExchangeRsp.Builder, com.letsmidi.monsys.protocol.exchange.Exchange.RequestExchangeRspOrBuilder>(
                  getRequestExchangeRsp(),
                  getParentForChildren(),
                  isClean());
          requestExchangeRsp_ = null;
        }
        return requestExchangeRspBuilder_;
      }

      private com.letsmidi.monsys.protocol.exchange.Exchange.Connect connect_ = com.letsmidi.monsys.protocol.exchange.Exchange.Connect.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.letsmidi.monsys.protocol.exchange.Exchange.Connect, com.letsmidi.monsys.protocol.exchange.Exchange.Connect.Builder, com.letsmidi.monsys.protocol.exchange.Exchange.ConnectOrBuilder> connectBuilder_;
      /**
       * <code>optional .com.letsmidi.monsys.protocol.exchange.Connect connect = 7;</code>
       *
       * <pre>
       * connect
       * </pre>
       */
      public boolean hasConnect() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.exchange.Connect connect = 7;</code>
       *
       * <pre>
       * connect
       * </pre>
       */
      public com.letsmidi.monsys.protocol.exchange.Exchange.Connect getConnect() {
        if (connectBuilder_ == null) {
          return connect_;
        } else {
          return connectBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.exchange.Connect connect = 7;</code>
       *
       * <pre>
       * connect
       * </pre>
       */
      public Builder setConnect(com.letsmidi.monsys.protocol.exchange.Exchange.Connect value) {
        if (connectBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          connect_ = value;
          onChanged();
        } else {
          connectBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.exchange.Connect connect = 7;</code>
       *
       * <pre>
       * connect
       * </pre>
       */
      public Builder setConnect(
          com.letsmidi.monsys.protocol.exchange.Exchange.Connect.Builder builderForValue) {
        if (connectBuilder_ == null) {
          connect_ = builderForValue.build();
          onChanged();
        } else {
          connectBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.exchange.Connect connect = 7;</code>
       *
       * <pre>
       * connect
       * </pre>
       */
      public Builder mergeConnect(com.letsmidi.monsys.protocol.exchange.Exchange.Connect value) {
        if (connectBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020) &&
              connect_ != com.letsmidi.monsys.protocol.exchange.Exchange.Connect.getDefaultInstance()) {
            connect_ =
              com.letsmidi.monsys.protocol.exchange.Exchange.Connect.newBuilder(connect_).mergeFrom(value).buildPartial();
          } else {
            connect_ = value;
          }
          onChanged();
        } else {
          connectBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.exchange.Connect connect = 7;</code>
       *
       * <pre>
       * connect
       * </pre>
       */
      public Builder clearConnect() {
        if (connectBuilder_ == null) {
          connect_ = com.letsmidi.monsys.protocol.exchange.Exchange.Connect.getDefaultInstance();
          onChanged();
        } else {
          connectBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.exchange.Connect connect = 7;</code>
       *
       * <pre>
       * connect
       * </pre>
       */
      public com.letsmidi.monsys.protocol.exchange.Exchange.Connect.Builder getConnectBuilder() {
        bitField0_ |= 0x00000020;
        onChanged();
        return getConnectFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.exchange.Connect connect = 7;</code>
       *
       * <pre>
       * connect
       * </pre>
       */
      public com.letsmidi.monsys.protocol.exchange.Exchange.ConnectOrBuilder getConnectOrBuilder() {
        if (connectBuilder_ != null) {
          return connectBuilder_.getMessageOrBuilder();
        } else {
          return connect_;
        }
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.exchange.Connect connect = 7;</code>
       *
       * <pre>
       * connect
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.letsmidi.monsys.protocol.exchange.Exchange.Connect, com.letsmidi.monsys.protocol.exchange.Exchange.Connect.Builder, com.letsmidi.monsys.protocol.exchange.Exchange.ConnectOrBuilder> 
          getConnectFieldBuilder() {
        if (connectBuilder_ == null) {
          connectBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.letsmidi.monsys.protocol.exchange.Exchange.Connect, com.letsmidi.monsys.protocol.exchange.Exchange.Connect.Builder, com.letsmidi.monsys.protocol.exchange.Exchange.ConnectOrBuilder>(
                  getConnect(),
                  getParentForChildren(),
                  isClean());
          connect_ = null;
        }
        return connectBuilder_;
      }

      private com.letsmidi.monsys.protocol.exchange.Exchange.ConnectRsp connectRsp_ = com.letsmidi.monsys.protocol.exchange.Exchange.ConnectRsp.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.letsmidi.monsys.protocol.exchange.Exchange.ConnectRsp, com.letsmidi.monsys.protocol.exchange.Exchange.ConnectRsp.Builder, com.letsmidi.monsys.protocol.exchange.Exchange.ConnectRspOrBuilder> connectRspBuilder_;
      /**
       * <code>optional .com.letsmidi.monsys.protocol.exchange.ConnectRsp connect_rsp = 8;</code>
       */
      public boolean hasConnectRsp() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.exchange.ConnectRsp connect_rsp = 8;</code>
       */
      public com.letsmidi.monsys.protocol.exchange.Exchange.ConnectRsp getConnectRsp() {
        if (connectRspBuilder_ == null) {
          return connectRsp_;
        } else {
          return connectRspBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.exchange.ConnectRsp connect_rsp = 8;</code>
       */
      public Builder setConnectRsp(com.letsmidi.monsys.protocol.exchange.Exchange.ConnectRsp value) {
        if (connectRspBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          connectRsp_ = value;
          onChanged();
        } else {
          connectRspBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.exchange.ConnectRsp connect_rsp = 8;</code>
       */
      public Builder setConnectRsp(
          com.letsmidi.monsys.protocol.exchange.Exchange.ConnectRsp.Builder builderForValue) {
        if (connectRspBuilder_ == null) {
          connectRsp_ = builderForValue.build();
          onChanged();
        } else {
          connectRspBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.exchange.ConnectRsp connect_rsp = 8;</code>
       */
      public Builder mergeConnectRsp(com.letsmidi.monsys.protocol.exchange.Exchange.ConnectRsp value) {
        if (connectRspBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040) &&
              connectRsp_ != com.letsmidi.monsys.protocol.exchange.Exchange.ConnectRsp.getDefaultInstance()) {
            connectRsp_ =
              com.letsmidi.monsys.protocol.exchange.Exchange.ConnectRsp.newBuilder(connectRsp_).mergeFrom(value).buildPartial();
          } else {
            connectRsp_ = value;
          }
          onChanged();
        } else {
          connectRspBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.exchange.ConnectRsp connect_rsp = 8;</code>
       */
      public Builder clearConnectRsp() {
        if (connectRspBuilder_ == null) {
          connectRsp_ = com.letsmidi.monsys.protocol.exchange.Exchange.ConnectRsp.getDefaultInstance();
          onChanged();
        } else {
          connectRspBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.exchange.ConnectRsp connect_rsp = 8;</code>
       */
      public com.letsmidi.monsys.protocol.exchange.Exchange.ConnectRsp.Builder getConnectRspBuilder() {
        bitField0_ |= 0x00000040;
        onChanged();
        return getConnectRspFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.exchange.ConnectRsp connect_rsp = 8;</code>
       */
      public com.letsmidi.monsys.protocol.exchange.Exchange.ConnectRspOrBuilder getConnectRspOrBuilder() {
        if (connectRspBuilder_ != null) {
          return connectRspBuilder_.getMessageOrBuilder();
        } else {
          return connectRsp_;
        }
      }
      /**
       * <code>optional .com.letsmidi.monsys.protocol.exchange.ConnectRsp connect_rsp = 8;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.letsmidi.monsys.protocol.exchange.Exchange.ConnectRsp, com.letsmidi.monsys.protocol.exchange.Exchange.ConnectRsp.Builder, com.letsmidi.monsys.protocol.exchange.Exchange.ConnectRspOrBuilder> 
          getConnectRspFieldBuilder() {
        if (connectRspBuilder_ == null) {
          connectRspBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.letsmidi.monsys.protocol.exchange.Exchange.ConnectRsp, com.letsmidi.monsys.protocol.exchange.Exchange.ConnectRsp.Builder, com.letsmidi.monsys.protocol.exchange.Exchange.ConnectRspOrBuilder>(
                  getConnectRsp(),
                  getParentForChildren(),
                  isClean());
          connectRsp_ = null;
        }
        return connectRspBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:com.letsmidi.monsys.protocol.exchange.ExchangeMsg)
    }

    static {
      defaultInstance = new ExchangeMsg(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.letsmidi.monsys.protocol.exchange.ExchangeMsg)
  }

  public interface RequestExchangeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.letsmidi.monsys.protocol.exchange.RequestExchange)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code com.letsmidi.monsys.protocol.exchange.RequestExchange}
   */
  public static final class RequestExchange extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.letsmidi.monsys.protocol.exchange.RequestExchange)
      RequestExchangeOrBuilder {
    // Use RequestExchange.newBuilder() to construct.
    private RequestExchange(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private RequestExchange(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final RequestExchange defaultInstance;
    public static RequestExchange getDefaultInstance() {
      return defaultInstance;
    }

    public RequestExchange getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private RequestExchange(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.letsmidi.monsys.protocol.exchange.Exchange.internal_static_com_letsmidi_monsys_protocol_exchange_RequestExchange_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.letsmidi.monsys.protocol.exchange.Exchange.internal_static_com_letsmidi_monsys_protocol_exchange_RequestExchange_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.letsmidi.monsys.protocol.exchange.Exchange.RequestExchange.class, com.letsmidi.monsys.protocol.exchange.Exchange.RequestExchange.Builder.class);
    }

    public static com.google.protobuf.Parser<RequestExchange> PARSER =
        new com.google.protobuf.AbstractParser<RequestExchange>() {
      public RequestExchange parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RequestExchange(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<RequestExchange> getParserForType() {
      return PARSER;
    }

    private void initFields() {
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.letsmidi.monsys.protocol.exchange.Exchange.RequestExchange parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.letsmidi.monsys.protocol.exchange.Exchange.RequestExchange parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.letsmidi.monsys.protocol.exchange.Exchange.RequestExchange parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.letsmidi.monsys.protocol.exchange.Exchange.RequestExchange parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.letsmidi.monsys.protocol.exchange.Exchange.RequestExchange parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.letsmidi.monsys.protocol.exchange.Exchange.RequestExchange parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.letsmidi.monsys.protocol.exchange.Exchange.RequestExchange parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.letsmidi.monsys.protocol.exchange.Exchange.RequestExchange parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.letsmidi.monsys.protocol.exchange.Exchange.RequestExchange parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.letsmidi.monsys.protocol.exchange.Exchange.RequestExchange parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.letsmidi.monsys.protocol.exchange.Exchange.RequestExchange prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.letsmidi.monsys.protocol.exchange.RequestExchange}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.letsmidi.monsys.protocol.exchange.RequestExchange)
        com.letsmidi.monsys.protocol.exchange.Exchange.RequestExchangeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.letsmidi.monsys.protocol.exchange.Exchange.internal_static_com_letsmidi_monsys_protocol_exchange_RequestExchange_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.letsmidi.monsys.protocol.exchange.Exchange.internal_static_com_letsmidi_monsys_protocol_exchange_RequestExchange_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.letsmidi.monsys.protocol.exchange.Exchange.RequestExchange.class, com.letsmidi.monsys.protocol.exchange.Exchange.RequestExchange.Builder.class);
      }

      // Construct using com.letsmidi.monsys.protocol.exchange.Exchange.RequestExchange.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.letsmidi.monsys.protocol.exchange.Exchange.internal_static_com_letsmidi_monsys_protocol_exchange_RequestExchange_descriptor;
      }

      public com.letsmidi.monsys.protocol.exchange.Exchange.RequestExchange getDefaultInstanceForType() {
        return com.letsmidi.monsys.protocol.exchange.Exchange.RequestExchange.getDefaultInstance();
      }

      public com.letsmidi.monsys.protocol.exchange.Exchange.RequestExchange build() {
        com.letsmidi.monsys.protocol.exchange.Exchange.RequestExchange result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.letsmidi.monsys.protocol.exchange.Exchange.RequestExchange buildPartial() {
        com.letsmidi.monsys.protocol.exchange.Exchange.RequestExchange result = new com.letsmidi.monsys.protocol.exchange.Exchange.RequestExchange(this);
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.letsmidi.monsys.protocol.exchange.Exchange.RequestExchange) {
          return mergeFrom((com.letsmidi.monsys.protocol.exchange.Exchange.RequestExchange)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.letsmidi.monsys.protocol.exchange.Exchange.RequestExchange other) {
        if (other == com.letsmidi.monsys.protocol.exchange.Exchange.RequestExchange.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.letsmidi.monsys.protocol.exchange.Exchange.RequestExchange parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.letsmidi.monsys.protocol.exchange.Exchange.RequestExchange) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.letsmidi.monsys.protocol.exchange.RequestExchange)
    }

    static {
      defaultInstance = new RequestExchange(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.letsmidi.monsys.protocol.exchange.RequestExchange)
  }

  public interface RequestExchangeRspOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.letsmidi.monsys.protocol.exchange.RequestExchangeRsp)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int32 code = 1;</code>
     */
    boolean hasCode();
    /**
     * <code>required int32 code = 1;</code>
     */
    int getCode();

    /**
     * <code>required string id = 2;</code>
     */
    boolean hasId();
    /**
     * <code>required string id = 2;</code>
     */
    java.lang.String getId();
    /**
     * <code>required string id = 2;</code>
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <code>required string peer_id1 = 3;</code>
     */
    boolean hasPeerId1();
    /**
     * <code>required string peer_id1 = 3;</code>
     */
    java.lang.String getPeerId1();
    /**
     * <code>required string peer_id1 = 3;</code>
     */
    com.google.protobuf.ByteString
        getPeerId1Bytes();

    /**
     * <code>required string peer_id2 = 4;</code>
     */
    boolean hasPeerId2();
    /**
     * <code>required string peer_id2 = 4;</code>
     */
    java.lang.String getPeerId2();
    /**
     * <code>required string peer_id2 = 4;</code>
     */
    com.google.protobuf.ByteString
        getPeerId2Bytes();
  }
  /**
   * Protobuf type {@code com.letsmidi.monsys.protocol.exchange.RequestExchangeRsp}
   */
  public static final class RequestExchangeRsp extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.letsmidi.monsys.protocol.exchange.RequestExchangeRsp)
      RequestExchangeRspOrBuilder {
    // Use RequestExchangeRsp.newBuilder() to construct.
    private RequestExchangeRsp(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private RequestExchangeRsp(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final RequestExchangeRsp defaultInstance;
    public static RequestExchangeRsp getDefaultInstance() {
      return defaultInstance;
    }

    public RequestExchangeRsp getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private RequestExchangeRsp(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              code_ = input.readInt32();
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              id_ = bs;
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              peerId1_ = bs;
              break;
            }
            case 34: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000008;
              peerId2_ = bs;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.letsmidi.monsys.protocol.exchange.Exchange.internal_static_com_letsmidi_monsys_protocol_exchange_RequestExchangeRsp_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.letsmidi.monsys.protocol.exchange.Exchange.internal_static_com_letsmidi_monsys_protocol_exchange_RequestExchangeRsp_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.letsmidi.monsys.protocol.exchange.Exchange.RequestExchangeRsp.class, com.letsmidi.monsys.protocol.exchange.Exchange.RequestExchangeRsp.Builder.class);
    }

    public static com.google.protobuf.Parser<RequestExchangeRsp> PARSER =
        new com.google.protobuf.AbstractParser<RequestExchangeRsp>() {
      public RequestExchangeRsp parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RequestExchangeRsp(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<RequestExchangeRsp> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int CODE_FIELD_NUMBER = 1;
    private int code_;
    /**
     * <code>required int32 code = 1;</code>
     */
    public boolean hasCode() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 code = 1;</code>
     */
    public int getCode() {
      return code_;
    }

    public static final int ID_FIELD_NUMBER = 2;
    private java.lang.Object id_;
    /**
     * <code>required string id = 2;</code>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string id = 2;</code>
     */
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          id_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string id = 2;</code>
     */
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PEER_ID1_FIELD_NUMBER = 3;
    private java.lang.Object peerId1_;
    /**
     * <code>required string peer_id1 = 3;</code>
     */
    public boolean hasPeerId1() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required string peer_id1 = 3;</code>
     */
    public java.lang.String getPeerId1() {
      java.lang.Object ref = peerId1_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          peerId1_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string peer_id1 = 3;</code>
     */
    public com.google.protobuf.ByteString
        getPeerId1Bytes() {
      java.lang.Object ref = peerId1_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        peerId1_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PEER_ID2_FIELD_NUMBER = 4;
    private java.lang.Object peerId2_;
    /**
     * <code>required string peer_id2 = 4;</code>
     */
    public boolean hasPeerId2() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required string peer_id2 = 4;</code>
     */
    public java.lang.String getPeerId2() {
      java.lang.Object ref = peerId2_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          peerId2_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string peer_id2 = 4;</code>
     */
    public com.google.protobuf.ByteString
        getPeerId2Bytes() {
      java.lang.Object ref = peerId2_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        peerId2_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      code_ = 0;
      id_ = "";
      peerId1_ = "";
      peerId2_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasCode()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPeerId1()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPeerId2()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, code_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getIdBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getPeerId1Bytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getPeerId2Bytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, code_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getIdBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getPeerId1Bytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getPeerId2Bytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.letsmidi.monsys.protocol.exchange.Exchange.RequestExchangeRsp parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.letsmidi.monsys.protocol.exchange.Exchange.RequestExchangeRsp parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.letsmidi.monsys.protocol.exchange.Exchange.RequestExchangeRsp parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.letsmidi.monsys.protocol.exchange.Exchange.RequestExchangeRsp parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.letsmidi.monsys.protocol.exchange.Exchange.RequestExchangeRsp parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.letsmidi.monsys.protocol.exchange.Exchange.RequestExchangeRsp parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.letsmidi.monsys.protocol.exchange.Exchange.RequestExchangeRsp parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.letsmidi.monsys.protocol.exchange.Exchange.RequestExchangeRsp parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.letsmidi.monsys.protocol.exchange.Exchange.RequestExchangeRsp parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.letsmidi.monsys.protocol.exchange.Exchange.RequestExchangeRsp parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.letsmidi.monsys.protocol.exchange.Exchange.RequestExchangeRsp prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.letsmidi.monsys.protocol.exchange.RequestExchangeRsp}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.letsmidi.monsys.protocol.exchange.RequestExchangeRsp)
        com.letsmidi.monsys.protocol.exchange.Exchange.RequestExchangeRspOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.letsmidi.monsys.protocol.exchange.Exchange.internal_static_com_letsmidi_monsys_protocol_exchange_RequestExchangeRsp_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.letsmidi.monsys.protocol.exchange.Exchange.internal_static_com_letsmidi_monsys_protocol_exchange_RequestExchangeRsp_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.letsmidi.monsys.protocol.exchange.Exchange.RequestExchangeRsp.class, com.letsmidi.monsys.protocol.exchange.Exchange.RequestExchangeRsp.Builder.class);
      }

      // Construct using com.letsmidi.monsys.protocol.exchange.Exchange.RequestExchangeRsp.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        code_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        peerId1_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        peerId2_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.letsmidi.monsys.protocol.exchange.Exchange.internal_static_com_letsmidi_monsys_protocol_exchange_RequestExchangeRsp_descriptor;
      }

      public com.letsmidi.monsys.protocol.exchange.Exchange.RequestExchangeRsp getDefaultInstanceForType() {
        return com.letsmidi.monsys.protocol.exchange.Exchange.RequestExchangeRsp.getDefaultInstance();
      }

      public com.letsmidi.monsys.protocol.exchange.Exchange.RequestExchangeRsp build() {
        com.letsmidi.monsys.protocol.exchange.Exchange.RequestExchangeRsp result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.letsmidi.monsys.protocol.exchange.Exchange.RequestExchangeRsp buildPartial() {
        com.letsmidi.monsys.protocol.exchange.Exchange.RequestExchangeRsp result = new com.letsmidi.monsys.protocol.exchange.Exchange.RequestExchangeRsp(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.code_ = code_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.peerId1_ = peerId1_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.peerId2_ = peerId2_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.letsmidi.monsys.protocol.exchange.Exchange.RequestExchangeRsp) {
          return mergeFrom((com.letsmidi.monsys.protocol.exchange.Exchange.RequestExchangeRsp)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.letsmidi.monsys.protocol.exchange.Exchange.RequestExchangeRsp other) {
        if (other == com.letsmidi.monsys.protocol.exchange.Exchange.RequestExchangeRsp.getDefaultInstance()) return this;
        if (other.hasCode()) {
          setCode(other.getCode());
        }
        if (other.hasId()) {
          bitField0_ |= 0x00000002;
          id_ = other.id_;
          onChanged();
        }
        if (other.hasPeerId1()) {
          bitField0_ |= 0x00000004;
          peerId1_ = other.peerId1_;
          onChanged();
        }
        if (other.hasPeerId2()) {
          bitField0_ |= 0x00000008;
          peerId2_ = other.peerId2_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasCode()) {
          
          return false;
        }
        if (!hasId()) {
          
          return false;
        }
        if (!hasPeerId1()) {
          
          return false;
        }
        if (!hasPeerId2()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.letsmidi.monsys.protocol.exchange.Exchange.RequestExchangeRsp parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.letsmidi.monsys.protocol.exchange.Exchange.RequestExchangeRsp) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int code_ ;
      /**
       * <code>required int32 code = 1;</code>
       */
      public boolean hasCode() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 code = 1;</code>
       */
      public int getCode() {
        return code_;
      }
      /**
       * <code>required int32 code = 1;</code>
       */
      public Builder setCode(int value) {
        bitField0_ |= 0x00000001;
        code_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 code = 1;</code>
       */
      public Builder clearCode() {
        bitField0_ = (bitField0_ & ~0x00000001);
        code_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object id_ = "";
      /**
       * <code>required string id = 2;</code>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string id = 2;</code>
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            id_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string id = 2;</code>
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string id = 2;</code>
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string id = 2;</code>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <code>required string id = 2;</code>
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        id_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object peerId1_ = "";
      /**
       * <code>required string peer_id1 = 3;</code>
       */
      public boolean hasPeerId1() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required string peer_id1 = 3;</code>
       */
      public java.lang.String getPeerId1() {
        java.lang.Object ref = peerId1_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            peerId1_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string peer_id1 = 3;</code>
       */
      public com.google.protobuf.ByteString
          getPeerId1Bytes() {
        java.lang.Object ref = peerId1_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          peerId1_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string peer_id1 = 3;</code>
       */
      public Builder setPeerId1(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        peerId1_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string peer_id1 = 3;</code>
       */
      public Builder clearPeerId1() {
        bitField0_ = (bitField0_ & ~0x00000004);
        peerId1_ = getDefaultInstance().getPeerId1();
        onChanged();
        return this;
      }
      /**
       * <code>required string peer_id1 = 3;</code>
       */
      public Builder setPeerId1Bytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        peerId1_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object peerId2_ = "";
      /**
       * <code>required string peer_id2 = 4;</code>
       */
      public boolean hasPeerId2() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required string peer_id2 = 4;</code>
       */
      public java.lang.String getPeerId2() {
        java.lang.Object ref = peerId2_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            peerId2_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string peer_id2 = 4;</code>
       */
      public com.google.protobuf.ByteString
          getPeerId2Bytes() {
        java.lang.Object ref = peerId2_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          peerId2_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string peer_id2 = 4;</code>
       */
      public Builder setPeerId2(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        peerId2_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string peer_id2 = 4;</code>
       */
      public Builder clearPeerId2() {
        bitField0_ = (bitField0_ & ~0x00000008);
        peerId2_ = getDefaultInstance().getPeerId2();
        onChanged();
        return this;
      }
      /**
       * <code>required string peer_id2 = 4;</code>
       */
      public Builder setPeerId2Bytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        peerId2_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.letsmidi.monsys.protocol.exchange.RequestExchangeRsp)
    }

    static {
      defaultInstance = new RequestExchangeRsp(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.letsmidi.monsys.protocol.exchange.RequestExchangeRsp)
  }

  public interface ConnectOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.letsmidi.monsys.protocol.exchange.Connect)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required string id = 1;</code>
     */
    boolean hasId();
    /**
     * <code>required string id = 1;</code>
     */
    java.lang.String getId();
    /**
     * <code>required string id = 1;</code>
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <code>required string peer_id = 2;</code>
     */
    boolean hasPeerId();
    /**
     * <code>required string peer_id = 2;</code>
     */
    java.lang.String getPeerId();
    /**
     * <code>required string peer_id = 2;</code>
     */
    com.google.protobuf.ByteString
        getPeerIdBytes();
  }
  /**
   * Protobuf type {@code com.letsmidi.monsys.protocol.exchange.Connect}
   */
  public static final class Connect extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.letsmidi.monsys.protocol.exchange.Connect)
      ConnectOrBuilder {
    // Use Connect.newBuilder() to construct.
    private Connect(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Connect(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Connect defaultInstance;
    public static Connect getDefaultInstance() {
      return defaultInstance;
    }

    public Connect getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Connect(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              id_ = bs;
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              peerId_ = bs;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.letsmidi.monsys.protocol.exchange.Exchange.internal_static_com_letsmidi_monsys_protocol_exchange_Connect_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.letsmidi.monsys.protocol.exchange.Exchange.internal_static_com_letsmidi_monsys_protocol_exchange_Connect_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.letsmidi.monsys.protocol.exchange.Exchange.Connect.class, com.letsmidi.monsys.protocol.exchange.Exchange.Connect.Builder.class);
    }

    public static com.google.protobuf.Parser<Connect> PARSER =
        new com.google.protobuf.AbstractParser<Connect>() {
      public Connect parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Connect(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Connect> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int ID_FIELD_NUMBER = 1;
    private java.lang.Object id_;
    /**
     * <code>required string id = 1;</code>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string id = 1;</code>
     */
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          id_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PEER_ID_FIELD_NUMBER = 2;
    private java.lang.Object peerId_;
    /**
     * <code>required string peer_id = 2;</code>
     */
    public boolean hasPeerId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string peer_id = 2;</code>
     */
    public java.lang.String getPeerId() {
      java.lang.Object ref = peerId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          peerId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string peer_id = 2;</code>
     */
    public com.google.protobuf.ByteString
        getPeerIdBytes() {
      java.lang.Object ref = peerId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        peerId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      id_ = "";
      peerId_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPeerId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getPeerIdBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getPeerIdBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.letsmidi.monsys.protocol.exchange.Exchange.Connect parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.letsmidi.monsys.protocol.exchange.Exchange.Connect parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.letsmidi.monsys.protocol.exchange.Exchange.Connect parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.letsmidi.monsys.protocol.exchange.Exchange.Connect parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.letsmidi.monsys.protocol.exchange.Exchange.Connect parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.letsmidi.monsys.protocol.exchange.Exchange.Connect parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.letsmidi.monsys.protocol.exchange.Exchange.Connect parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.letsmidi.monsys.protocol.exchange.Exchange.Connect parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.letsmidi.monsys.protocol.exchange.Exchange.Connect parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.letsmidi.monsys.protocol.exchange.Exchange.Connect parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.letsmidi.monsys.protocol.exchange.Exchange.Connect prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.letsmidi.monsys.protocol.exchange.Connect}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.letsmidi.monsys.protocol.exchange.Connect)
        com.letsmidi.monsys.protocol.exchange.Exchange.ConnectOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.letsmidi.monsys.protocol.exchange.Exchange.internal_static_com_letsmidi_monsys_protocol_exchange_Connect_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.letsmidi.monsys.protocol.exchange.Exchange.internal_static_com_letsmidi_monsys_protocol_exchange_Connect_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.letsmidi.monsys.protocol.exchange.Exchange.Connect.class, com.letsmidi.monsys.protocol.exchange.Exchange.Connect.Builder.class);
      }

      // Construct using com.letsmidi.monsys.protocol.exchange.Exchange.Connect.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        peerId_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.letsmidi.monsys.protocol.exchange.Exchange.internal_static_com_letsmidi_monsys_protocol_exchange_Connect_descriptor;
      }

      public com.letsmidi.monsys.protocol.exchange.Exchange.Connect getDefaultInstanceForType() {
        return com.letsmidi.monsys.protocol.exchange.Exchange.Connect.getDefaultInstance();
      }

      public com.letsmidi.monsys.protocol.exchange.Exchange.Connect build() {
        com.letsmidi.monsys.protocol.exchange.Exchange.Connect result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.letsmidi.monsys.protocol.exchange.Exchange.Connect buildPartial() {
        com.letsmidi.monsys.protocol.exchange.Exchange.Connect result = new com.letsmidi.monsys.protocol.exchange.Exchange.Connect(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.peerId_ = peerId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.letsmidi.monsys.protocol.exchange.Exchange.Connect) {
          return mergeFrom((com.letsmidi.monsys.protocol.exchange.Exchange.Connect)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.letsmidi.monsys.protocol.exchange.Exchange.Connect other) {
        if (other == com.letsmidi.monsys.protocol.exchange.Exchange.Connect.getDefaultInstance()) return this;
        if (other.hasId()) {
          bitField0_ |= 0x00000001;
          id_ = other.id_;
          onChanged();
        }
        if (other.hasPeerId()) {
          bitField0_ |= 0x00000002;
          peerId_ = other.peerId_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasId()) {
          
          return false;
        }
        if (!hasPeerId()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.letsmidi.monsys.protocol.exchange.Exchange.Connect parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.letsmidi.monsys.protocol.exchange.Exchange.Connect) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object id_ = "";
      /**
       * <code>required string id = 1;</code>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string id = 1;</code>
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            id_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string id = 1;</code>
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string id = 1;</code>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <code>required string id = 1;</code>
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object peerId_ = "";
      /**
       * <code>required string peer_id = 2;</code>
       */
      public boolean hasPeerId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string peer_id = 2;</code>
       */
      public java.lang.String getPeerId() {
        java.lang.Object ref = peerId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            peerId_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string peer_id = 2;</code>
       */
      public com.google.protobuf.ByteString
          getPeerIdBytes() {
        java.lang.Object ref = peerId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          peerId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string peer_id = 2;</code>
       */
      public Builder setPeerId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        peerId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string peer_id = 2;</code>
       */
      public Builder clearPeerId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        peerId_ = getDefaultInstance().getPeerId();
        onChanged();
        return this;
      }
      /**
       * <code>required string peer_id = 2;</code>
       */
      public Builder setPeerIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        peerId_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.letsmidi.monsys.protocol.exchange.Connect)
    }

    static {
      defaultInstance = new Connect(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.letsmidi.monsys.protocol.exchange.Connect)
  }

  public interface ConnectRspOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.letsmidi.monsys.protocol.exchange.ConnectRsp)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int32 code = 1;</code>
     */
    boolean hasCode();
    /**
     * <code>required int32 code = 1;</code>
     */
    int getCode();
  }
  /**
   * Protobuf type {@code com.letsmidi.monsys.protocol.exchange.ConnectRsp}
   */
  public static final class ConnectRsp extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.letsmidi.monsys.protocol.exchange.ConnectRsp)
      ConnectRspOrBuilder {
    // Use ConnectRsp.newBuilder() to construct.
    private ConnectRsp(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ConnectRsp(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ConnectRsp defaultInstance;
    public static ConnectRsp getDefaultInstance() {
      return defaultInstance;
    }

    public ConnectRsp getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ConnectRsp(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              code_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.letsmidi.monsys.protocol.exchange.Exchange.internal_static_com_letsmidi_monsys_protocol_exchange_ConnectRsp_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.letsmidi.monsys.protocol.exchange.Exchange.internal_static_com_letsmidi_monsys_protocol_exchange_ConnectRsp_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.letsmidi.monsys.protocol.exchange.Exchange.ConnectRsp.class, com.letsmidi.monsys.protocol.exchange.Exchange.ConnectRsp.Builder.class);
    }

    public static com.google.protobuf.Parser<ConnectRsp> PARSER =
        new com.google.protobuf.AbstractParser<ConnectRsp>() {
      public ConnectRsp parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ConnectRsp(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ConnectRsp> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int CODE_FIELD_NUMBER = 1;
    private int code_;
    /**
     * <code>required int32 code = 1;</code>
     */
    public boolean hasCode() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 code = 1;</code>
     */
    public int getCode() {
      return code_;
    }

    private void initFields() {
      code_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasCode()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, code_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, code_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.letsmidi.monsys.protocol.exchange.Exchange.ConnectRsp parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.letsmidi.monsys.protocol.exchange.Exchange.ConnectRsp parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.letsmidi.monsys.protocol.exchange.Exchange.ConnectRsp parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.letsmidi.monsys.protocol.exchange.Exchange.ConnectRsp parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.letsmidi.monsys.protocol.exchange.Exchange.ConnectRsp parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.letsmidi.monsys.protocol.exchange.Exchange.ConnectRsp parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.letsmidi.monsys.protocol.exchange.Exchange.ConnectRsp parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.letsmidi.monsys.protocol.exchange.Exchange.ConnectRsp parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.letsmidi.monsys.protocol.exchange.Exchange.ConnectRsp parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.letsmidi.monsys.protocol.exchange.Exchange.ConnectRsp parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.letsmidi.monsys.protocol.exchange.Exchange.ConnectRsp prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.letsmidi.monsys.protocol.exchange.ConnectRsp}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.letsmidi.monsys.protocol.exchange.ConnectRsp)
        com.letsmidi.monsys.protocol.exchange.Exchange.ConnectRspOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.letsmidi.monsys.protocol.exchange.Exchange.internal_static_com_letsmidi_monsys_protocol_exchange_ConnectRsp_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.letsmidi.monsys.protocol.exchange.Exchange.internal_static_com_letsmidi_monsys_protocol_exchange_ConnectRsp_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.letsmidi.monsys.protocol.exchange.Exchange.ConnectRsp.class, com.letsmidi.monsys.protocol.exchange.Exchange.ConnectRsp.Builder.class);
      }

      // Construct using com.letsmidi.monsys.protocol.exchange.Exchange.ConnectRsp.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        code_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.letsmidi.monsys.protocol.exchange.Exchange.internal_static_com_letsmidi_monsys_protocol_exchange_ConnectRsp_descriptor;
      }

      public com.letsmidi.monsys.protocol.exchange.Exchange.ConnectRsp getDefaultInstanceForType() {
        return com.letsmidi.monsys.protocol.exchange.Exchange.ConnectRsp.getDefaultInstance();
      }

      public com.letsmidi.monsys.protocol.exchange.Exchange.ConnectRsp build() {
        com.letsmidi.monsys.protocol.exchange.Exchange.ConnectRsp result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.letsmidi.monsys.protocol.exchange.Exchange.ConnectRsp buildPartial() {
        com.letsmidi.monsys.protocol.exchange.Exchange.ConnectRsp result = new com.letsmidi.monsys.protocol.exchange.Exchange.ConnectRsp(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.code_ = code_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.letsmidi.monsys.protocol.exchange.Exchange.ConnectRsp) {
          return mergeFrom((com.letsmidi.monsys.protocol.exchange.Exchange.ConnectRsp)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.letsmidi.monsys.protocol.exchange.Exchange.ConnectRsp other) {
        if (other == com.letsmidi.monsys.protocol.exchange.Exchange.ConnectRsp.getDefaultInstance()) return this;
        if (other.hasCode()) {
          setCode(other.getCode());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasCode()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.letsmidi.monsys.protocol.exchange.Exchange.ConnectRsp parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.letsmidi.monsys.protocol.exchange.Exchange.ConnectRsp) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int code_ ;
      /**
       * <code>required int32 code = 1;</code>
       */
      public boolean hasCode() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 code = 1;</code>
       */
      public int getCode() {
        return code_;
      }
      /**
       * <code>required int32 code = 1;</code>
       */
      public Builder setCode(int value) {
        bitField0_ |= 0x00000001;
        code_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 code = 1;</code>
       */
      public Builder clearCode() {
        bitField0_ = (bitField0_ & ~0x00000001);
        code_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.letsmidi.monsys.protocol.exchange.ConnectRsp)
    }

    static {
      defaultInstance = new ConnectRsp(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.letsmidi.monsys.protocol.exchange.ConnectRsp)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_letsmidi_monsys_protocol_exchange_ExchangeMsg_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_letsmidi_monsys_protocol_exchange_ExchangeMsg_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_letsmidi_monsys_protocol_exchange_RequestExchange_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_letsmidi_monsys_protocol_exchange_RequestExchange_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_letsmidi_monsys_protocol_exchange_RequestExchangeRsp_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_letsmidi_monsys_protocol_exchange_RequestExchangeRsp_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_letsmidi_monsys_protocol_exchange_Connect_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_letsmidi_monsys_protocol_exchange_Connect_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_letsmidi_monsys_protocol_exchange_ConnectRsp_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_letsmidi_monsys_protocol_exchange_ConnectRsp_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\016exchange.proto\022%com.letsmidi.monsys.pr" +
      "otocol.exchange\"\242\003\n\013ExchangeMsg\022\017\n\007versi" +
      "on\030\001 \002(\r\022<\n\004type\030\002 \002(\0162..com.letsmidi.mo" +
      "nsys.protocol.exchange.MsgType\022\020\n\010sequen" +
      "ce\030\003 \002(\r\022P\n\020request_exchange\030\005 \001(\01326.com" +
      ".letsmidi.monsys.protocol.exchange.Reque" +
      "stExchange\022W\n\024request_exchange_rsp\030\006 \001(\013" +
      "29.com.letsmidi.monsys.protocol.exchange" +
      ".RequestExchangeRsp\022?\n\007connect\030\007 \001(\0132..c" +
      "om.letsmidi.monsys.protocol.exchange.Con",
      "nect\022F\n\013connect_rsp\030\010 \001(\01321.com.letsmidi" +
      ".monsys.protocol.exchange.ConnectRsp\"\021\n\017" +
      "RequestExchange\"R\n\022RequestExchangeRsp\022\014\n" +
      "\004code\030\001 \002(\005\022\n\n\002id\030\002 \002(\t\022\020\n\010peer_id1\030\003 \002(" +
      "\t\022\020\n\010peer_id2\030\004 \002(\t\"&\n\007Connect\022\n\n\002id\030\001 \002" +
      "(\t\022\017\n\007peer_id\030\002 \002(\t\"\032\n\nConnectRsp\022\014\n\004cod" +
      "e\030\001 \002(\005*W\n\007MsgType\022\024\n\020REQUEST_EXCHANGE\020\001" +
      "\022\030\n\024REQUEST_EXCHANGE_RSP\020\002\022\013\n\007CONNECT\020\003\022" +
      "\017\n\013CONNECT_RSP\020\004"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_com_letsmidi_monsys_protocol_exchange_ExchangeMsg_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_com_letsmidi_monsys_protocol_exchange_ExchangeMsg_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_letsmidi_monsys_protocol_exchange_ExchangeMsg_descriptor,
        new java.lang.String[] { "Version", "Type", "Sequence", "RequestExchange", "RequestExchangeRsp", "Connect", "ConnectRsp", });
    internal_static_com_letsmidi_monsys_protocol_exchange_RequestExchange_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_com_letsmidi_monsys_protocol_exchange_RequestExchange_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_letsmidi_monsys_protocol_exchange_RequestExchange_descriptor,
        new java.lang.String[] { });
    internal_static_com_letsmidi_monsys_protocol_exchange_RequestExchangeRsp_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_com_letsmidi_monsys_protocol_exchange_RequestExchangeRsp_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_letsmidi_monsys_protocol_exchange_RequestExchangeRsp_descriptor,
        new java.lang.String[] { "Code", "Id", "PeerId1", "PeerId2", });
    internal_static_com_letsmidi_monsys_protocol_exchange_Connect_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_com_letsmidi_monsys_protocol_exchange_Connect_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_letsmidi_monsys_protocol_exchange_Connect_descriptor,
        new java.lang.String[] { "Id", "PeerId", });
    internal_static_com_letsmidi_monsys_protocol_exchange_ConnectRsp_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_com_letsmidi_monsys_protocol_exchange_ConnectRsp_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_letsmidi_monsys_protocol_exchange_ConnectRsp_descriptor,
        new java.lang.String[] { "Code", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
